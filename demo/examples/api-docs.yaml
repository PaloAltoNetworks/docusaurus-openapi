openapi: 3.0.0
info:
  title: Expedition API
  description: RESTful API for Expedition
  version: 1.0.0
security:
  - bearer_auth: []
paths:
  # Login / Logout Section
  /api/v1/login:
    post:
      description: Login to Expedition.
      tags:
        - Auth
      security: []
      operationId: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              title: LoginRequest
              type: object
              properties:
                username:
                  type: string
                  example: admin
                password:
                  type: string
                  example: paloalto
              required:
                - username
                - password
      responses:
        "200":
          $ref: "#/components/responses/login_response"
        "401":
          $ref: "#/components/responses/bad_request_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/logout:
    post:
      description: Logout from Expedition. Closes PHP-Laravel session
      tags:
        - Auth
      operationId: Logout
      responses:
        "200":
          $ref: "#/components/responses/logout_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Job Management Section
  /api/v1/job:
    get:
      description: Returns the information of all jobs.
      parameters:
        - $ref: "#/components/parameters/job_status"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      tags:
        - Jobs
      operationId: List all jobs
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_job_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/job/{job_id}":
    parameters:
      - $ref: "#/components/parameters/job_id"
      - $ref: "#/components/parameters/job_mode"
    get:
      description: Returns the information of a specific job.
      tags:
        - Jobs
      operationId: List job
      responses:
        "200":
          $ref: "#/components/responses/get_job_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Deletes a specific job.
      tags:
        - Jobs
      operationId: Delete job
      responses:
        "200":
          $ref: "#/components/responses/get_job_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Backend Agent Management Section
  "/api/v1/agent/{agent_type}/start":
    parameters:
      - $ref: "#/components/parameters/agent_type"
    post:
      description: Returns the information of the agent started.
      tags:
        - Agent
      operationId: Start agent
      responses:
        "200":
          $ref: "#/components/responses/get_agent_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/agent/{agent_type}":
    parameters:
      - $ref: "#/components/parameters/agent_type"
    get:
      tags:
        - Agent
      operationId: List agent
      description: Returns the information of an agent.
      responses:
        "200":
          $ref: "#/components/responses/get_agent_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/agent:
    get:
      tags:
        - Agent
      operationId: List all agents
      description: Returns the information of all agents.
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_agent_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/agent/{agent_id}/stop":
    parameters:
      - $ref: "#/components/parameters/agent_id"
    post:
      tags:
        - Agent
      operationId: Stop agent
      description: Returns the information of an agent.
      responses:
        "200":
          $ref: "#/components/responses/get_agent_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/agent/{agent_id}/restart":
    parameters:
      - $ref: "#/components/parameters/agent_id"
    post:
      tags:
        - Agent
      operationId: Restart agent
      description: Returns the information of an agent.
      responses:
        "200":
          $ref: "#/components/responses/get_agent_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # System Information
  /api/v1/system/information:
    get:
      tags:
        - System
      operationId: List system information
      description: Returns the information of the system.
      responses:
        "200":
          $ref: "#/components/responses/get_system_information_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/health/information:
    get:
      tags:
        - System
      operationId: List health information
      description: Returns the information of the health checks.
      responses:
        "200":
          $ref: "#/components/responses/get_health_information_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Migration Config Management Section
  /api/v1/migration:
    # Unit Tests: /Swagger/lib/test/Api/MigrationApiTest.php
    post:
      description: Create a new migration process and return its id.
      tags:
        - Migration
      operationId: Get migration id
      responses:
        "200":
          $ref: "#/components/responses/get_migration_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
    get:
      description: Get information of all migrations.
      tags:
        - Migration
      operationId: List all migrations
      responses:
        "200":
          $ref: "#/components/responses/get_all_migration_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  /api/v1/migration/{migration_id}:
    # Unit Tests: /Swagger/lib/test/Api/MigrationApiTest.php
    delete:
      description: >-
        Delete the migration with the id provided. Will also delete all
        resources inside the migration.
      tags:
        - Migration
      operationId: Delete migration
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/delete_migration_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
    get:
      description: Get information of the migration with the provided id.
      tags:
        - Migration
      operationId: List migration
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/get_migration_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/define_baseconfig/blank":
    post:
      description: Define a blank predefined baseconfig given the version and device type.
      tags:
        - Migration
      operationId: Define blank base_config
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Define the version and device to be the baseconfig.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: "Define base_config device: firewall or panorama. "
                  enum:
                    - firewall
                    - panorama
                version:
                  type: number
                  description: Version of the base_config needed.
                  example: 10.1
              required:
                - type
                - version
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/define_baseconfig":
    post:
      description: Define the base_config resource for the migration.
      tags:
        - Migration
      operationId: Define resource base_config
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Define the version and device to be the baseconfig.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resource:
                  type: integer
                  description: "Id of the resource to set as baseconfig."
              required:
                - resource
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/convert":
    post:
      description: Convert the configs from a migration into a panos config given a specific baseconfig.
      tags:
        - Migration
      operationId: Convert configuration
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/download":
    get:
      description: Download all the files from the given migration into a zip file.
      tags:
        - Migration
      operationId: Download the migration files.
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/download_zip_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/download_conversion_log":
    get:
      description: Download all the log files after conversion into a zip file.
      tags:
        - Migration
      operationId: Download the conversion log files.
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/download_zip_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/download_converted_config":
    get:
      description: Download the converted config from a migration as an xml.
      tags:
        - Migration
      operationId: Download converted config
      parameters:
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/download_zip_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/resource":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    get:
      description: Get information of all resources.
      tags:
        - Migration
      operationId: List all resources
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_resource_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/resource/{resource_id}":
    parameters:
      - $ref: "#/components/parameters/migration_id"
      - $ref: "#/components/parameters/resource_id"
    delete:
      description: Delete the resource with the id  from a migration.
      tags:
        - Migration
      operationId: Delete resource
      responses:
        "200":
          $ref: "#/components/responses/get_one_resource_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
    get:
      description: Get information of the resource with the provided id.
      tags:
        - Migration
      operationId: List resource
      responses:
        "200":
          $ref: "#/components/responses/get_one_resource_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/resource/{resource_id}/download":
    get:
      description: Download a specific resource from a migration.
      tags:
        - Migration
      operationId: Download resource
      parameters:
        - $ref: "#/components/parameters/migration_id"
        - $ref: "#/components/parameters/resource_id"
      responses:
        "200":
          $ref: "#/components/responses/download_zip_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/resource/{resource_id}/discover":
    parameters:
      - $ref: "#/components/parameters/migration_id"
      - $ref: "#/components/parameters/resource_id"
    get:
      description: Provide a list of all policies and routes from the resource provided.
      tags:
        - Migration
      operationId: Discover policies in configuration
      responses:
        "200":
          $ref: "#/components/responses/discovery_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Asks for all route/policies from a resource.
      tags:
        - Migration
      operationId: Ask discovery
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/discover":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    get:
      description: >-
        Provide a list of all policies and routes from each resource of a
        migration.
      tags:
        - Migration
      operationId: Discover policies in migration resource
      responses:
        "200":
          $ref: "#/components/responses/discovery_multiple_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Ask for all routes/policies from each resource of a migration.
      tags:
        - Migration
      operationId: Ask migration discovery
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/panos":
    post:
      description: Upload a panos xml configuration inside a migration.
      tags:
        - Migration
      operationId: Upload Panos
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_panos_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload/checkpoint":
    post:
      description: Upload the checkpoint configuration files into a migration.
      tags:
        - Migration
      operationId: Upload CheckPoint
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_checkpoint_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/checkpoint":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a checkpoint configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery checkpoint
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_checkpoint_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/cisco_asa":
    post:
      tags:
        - Migration
      description: Upload the cisco asa configuration files into a migration.
      operationId: Upload Cisco
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/cisco_asa":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a cisco asa configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery cisco_asa
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/fortinet":
    post:
      tags:
        - Migration
      description: Upload the fortinet configuration files into a migration.
      operationId: Upload Fortinet
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/fortinet":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a fortinet configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery fortinet
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/stonesoft":
    post:
      tags:
        - Migration
      description: Upload the stonesoft configuration files into a migration.
      operationId: Upload Stonesoft
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/stonesoft":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a stonesoft configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery stonesoft
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/srx":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload an srx configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery srx
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/sidewinder":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a sidewinder configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery sidewinder
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/ibm":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      tags:
        - Migration
      description: >-
        Upload a configuration and start discovering all policies and routes
        from it.
      operationId: Upload and Discovery ibm
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/checkpoint_r80":
    post:
      description: Upload the checkpoint r80 configuration files into a migration.
      tags:
        - Migration
      operationId: Upload CheckPoint r80
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/checkpoint_r80":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a checkpoint r80 configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery checkpoint_r80
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/sonicwall":
    post:
      tags:
        - Migration
      description: Upload the sonicwall configuration files into a migration.
      operationId: Upload Sonicwall
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/upload_and_discover/sonicwall":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    post:
      description: >-
        Upload a sonicwall configuration and start discovering all policies and routes
        from it.
      tags:
        - Migration
      operationId: Upload and Discovery sonicwall
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_config_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/upload/zip":
    post:
      description: >-
        Upload a zip file containing all configuration and the mapping.json file needed
        into a migration.
      tags:
        - Migration
      operationId: Upload Zip
      parameters:
        - $ref: "#/components/parameters/migration_id"
      requestBody:
        description: Upload files.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_zip_schema"
      responses:
        "200":
          $ref: "#/components/responses/resource_third_vendor_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/migration/{migration_id}/resource/{resource_id}/map":
    parameters:
      - $ref: "#/components/parameters/migration_id"
      - $ref: "#/components/parameters/resource_id"
    post:
      description: >-
        Map the different policies from the configuration to the corresponding
        routes.
      tags:
        - Migration
      operationId: Provide configuration mapping
      requestBody:
        description: Provide tha policy/route mapping of a configuration
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mapping_schema"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "409":
          $ref: "#/components/responses/resource_conflict_response"
        "410":
          $ref: "#/components/responses/resource_gone_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
        "501":
          $ref: "#/components/responses/not_implemented_response"
    get:
      description: Get mapping from a resource.
      tags:
        - Migration
      operationId: Provide resource mapping
      responses:
        "200":
          $ref: "#/components/responses/mapping_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete mapping from a resource.
      tags:
        - Migration
      operationId: Delete resource mapping
      responses:
        "200":
          $ref: "#/components/responses/mapping_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/migration/{migration_id}/map":
    parameters:
      - $ref: "#/components/parameters/migration_id"
    get:
      description: Get mapping from a migration.
      tags:
        - Migration
      operationId: Provide migration mapping
      responses:
        "200":
          $ref: "#/components/responses/mapping_multiple_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete mapping from a migration.
      tags:
        - Migration
      operationId: Delete migration mapping
      responses:
        "200":
          $ref: "#/components/responses/mapping_multiple_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Project Management Section
  "/api/v1/project/{project_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: "List a project."
      tags:
        - Project
      operationId: List one project
      responses:
        "200":
          $ref: "#/components/responses/list_single_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: "Delete a project."
      tags:
        - Project
      operationId: Delete one project
      responses:
        "200":
          $ref: "#/components/responses/list_single_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: "Update a project."
      tags:
        - Project
      operationId: Update one project
      requestBody:
        description: Update one project.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project_schema"
      responses:
        "200":
          $ref: "#/components/responses/list_single_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/project:
    get:
      description: "List all projects."
      tags:
        - Project
      operationId: List all projects
      responses:
        "200":
          $ref: "#/components/responses/list_multiple_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: "Create a new project."
      tags:
        - Project
      operationId: Create project
      requestBody:
        description: Create a new project.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/project_schema"
      responses:
        "200":
          $ref: "#/components/responses/create_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: "Update multiple projects."
      tags:
        - Project
      operationId: Update multiple projects
      requestBody:
        description: Update multiple projects.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulk_update_project_schema"
      responses:
        "200":
          $ref: "#/components/responses/list_single_project_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/project/tag:
    get:
      description: List the existing Tags for Projects.
      tags:
        - Project
      operationId: List project tags
      responses:
        "200":
          $ref: "#/components/responses/get_project_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/source/{source_id}/summary":
    get:
      tags:
        - Project
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/source_id"
      operationId: List project source summary
      responses:
        "200":
          $ref: "#/components/responses/get_project_summary_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/import/resource/{resource_id}":
    post:
      description: Imports a configuration file into a project.
      tags:
        - Project
      operationId: Import resource configuration
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/resource_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/import/migration/{migration_id}":
    post:
      description: >-
        Imports the configuration converted in the given migration into a project.
      tags:
        - Project
      operationId: Import converted configuration

      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/migration_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/import/device":
    post:
      description: Imports a configuration from a device into a project.
      tags:
        - Project
      operationId: Import device configuration
      requestBody:
        description: Update multiple projects.
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: integer
                  description: Id if the device to import into a project.
      parameters:
        - $ref: "#/components/parameters/project_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/source/{source_id}/export_config":
    post:
      description: Export a configuration file as an XML file. Return a Job id.
      tags:
        - Project
      operationId: Export source configuration
      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/source_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/source/{source_id}/download_config":
    get:
      description: Download an exported config as an XML file.
      tags:
        - Project
      operationId: Download exported configuration

      parameters:
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/source_id"
      responses:
        "200":
          $ref: "#/components/responses/download_zip_response"
        "400":
          $ref: "#/components/responses/resource_not_found"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Device Management Section
  "/api/v1/device/{device_id}":
    parameters:
      - $ref: "#/components/parameters/device_id"
    get:
      description: List the properties of the asked device.
      tags:
        - Device
      operationId: List single device
      responses:
        "200":
          $ref: "#/components/responses/get_single_device_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one device.
      tags:
        - Device
      operationId: Delete device
      responses:
        "200":
          $ref: "#/components/responses/get_single_device_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update a device.
      tags:
        - Device
      operationId: Update device
      requestBody:
        description: Device attributes to update.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_single_device_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  /api/v1/device:
    get:
      description: List the properties of all devices.
      tags:
        - Device
      operationId: List multiple devices
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_device_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Creates a new device.
      tags:
        - Device
      operationId: Create device
      requestBody:
        description: Device attributes to create it.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_single_device_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update properties for multiple devices.
      tags:
        - Device
      operationId: Update multiple device
      requestBody:
        description: Device attributes to update.
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/device/{device_id}/upload/migration":
    parameters:
      - $ref: "#/components/parameters/device_id"
    post:
      description: Upload the converted PANOS XML config from a migration into a device.
      tags:
        - Device
        - Migration
      operationId: Upload migration to device
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                migration_id:
                  type: integer
                  description: Id of the migration to upload to the device.
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/key":
    parameters:
      - $ref: "#/components/parameters/device_id"
    get:
      description: Show PANOS API keys from a specific device for a specific user.
      tags:
        - Device
      operationId: Get device key
      responses:
        "200":
          $ref: "#/components/responses/get_device_key_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Add a PANOS API key to access interact with a device.
      tags:
        - Device
      operationId: Add device key

      requestBody:
        description: Credentials to access device.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/add_device_key_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_device_key_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/retrieve_key":
    parameters:
      - $ref: "#/components/parameters/device_id"
    post:
      description: Retrieve a PANOS API key from a device to allow interactions with the device.
      tags:
        - Device
      operationId: Retrieve device key
      requestBody:
        description: Credentials to access device.
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/retrieve_device_key_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_device_key_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/upload_config":
    parameters:
      - $ref: "#/components/parameters/device_id"
    post:
      description: Upload a PANOS XML configuration into an existing device.
      tags:
        - Device
      operationId: Upload device config

      requestBody:
        description: Config to upload.
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/upload_device_schema"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/key/role/{role}":
    delete:
      description: Delete the associated-role PANOS API key to access interact with a device.
      tags:
        - Device
      operationId: Delete device key
      parameters:
        - $ref: "#/components/parameters/device_id"
        - $ref: "#/components/parameters/role"
      responses:
        "200":
          $ref: "#/components/responses/get_device_key_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/retrieve_content/{config}":
    get:
      description: >-
        Download the contents from a PANOS device (application, configuration,
        zones...). The device configuration can either be Running or Candidate.
      tags:
        - Device
      operationId: Retrieve device content

      parameters:
        - $ref: "#/components/parameters/device_id"
        - $ref: "#/components/parameters/config"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/content":
    get:
      description: Get information from a device downloaded content.
      tags:
        - Device
      operationId: Get device content
      parameters:
        - $ref: "#/components/parameters/device_id"
      responses:
        "200":
          $ref: "#/components/responses/get_device_content"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/device/{device_id}/retrieve_connected_devices":
    post:
      description: Retrieve the connected devices of a panorama.
      tags:
        - Device
      operationId: Retrieve connected devices
      parameters:
        - $ref: "#/components/parameters/device_id"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Send API Calls
  "/api/v1/project/{project_id}/source/{source_id}/device/{device_id}/push":
    post:
      description: >-
        Sends a set of API calls (from a given project and source) to a device.
        The devices needs to be associated to the project.
      tags:
        - Device
      operationId: Push api calls to device
      parameters:
        - $ref: "#/components/parameters/device_id"
        - $ref: "#/components/parameters/project_id"
        - $ref: "#/components/parameters/source_id"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Global Objects in Project
  "/api/v1/project/{project_id}/search_objects":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
      - $ref: "#/components/parameters/query"
      - $ref: "#/components/parameters/trashed"
      - $ref: "#/components/parameters/page"
      - $ref: "#/components/parameters/inherited"
      - $ref: "#/components/parameters/limit"
      - $ref: "#/components/parameters/object_type"

    get:
      description: List multiple objects of diferent object_type.
      tags:
        - Member Obects
      operationId: List member object
      responses:
        "200":
          $ref: "#/components/responses/get_mixed_objects_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Sources in Project
  "/api/v1/project/{project_id}/source":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of source object information. Quick filter information can be provided.
      tags:
        - Source
      operationId: List multiple source
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_source_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/source/{source_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/source_id"
    get:
      description: List one tag object information.
      tags:
        - Source
      operationId: List one source
      responses:
        "200":
          $ref: "#/components/responses/get_one_source_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one source object.
      tags:
        - Source
      operationId: Delete one source
      responses:
        "200":
          $ref: "#/components/responses/delete_one_panObject_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Vsys in Project
  "/api/v1/project/{project_id}/vsys/{vsys_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/vsys_id"
    get:
      description: List one vsys object information.
      tags:
        - Vsys
      operationId: List one vsys
      responses:
        "200":
          $ref: "#/components/responses/get_one_vsys_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one vsys object.
      tags:
        - Vsys
      operationId: Delete one vsys
      responses:
        "200":
          $ref: "#/components/responses/delete_one_panObject_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one vsys object.
      tags:
        - Vsys
      operationId: Update one vsys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vsys_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_vsys_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/vsys":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of vsys object information. Quick filter information can be provided.
      tags:
        - Vsys
      operationId: List multiple vsys
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_vsys_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one vsys object.
      tags:
        - Vsys
      operationId: Create vsys
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vsys_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_vsys_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/device_group/{device_group_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/device_group_id"
    get:
      description: List one vsys object information.
      tags:
        - Device Group
      operationId: List one device Group
      responses:
        "200":
          $ref: "#/components/responses/get_one_device_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one device group object.
      tags:
        - Device Group
      operationId: Delete one device group
      responses:
        "200":
          $ref: "#/components/responses/delete_one_panObject_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one device group object.
      tags:
        - Device Group
      operationId: Update one Device Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_device_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/device_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of device group object information. Quick filter information can be provided.
      tags:
        - Device Group
      operationId: List multiple Device Groups
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_device_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Device Group object.
      tags:
        - Device Group
      operationId: Create a Device Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/device_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_device_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Templates in Project
  "/api/v1/project/{project_id}/template/{template_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/template_id"
    get:
      description: List one template object information.
      tags:
        - Template
      operationId: List one template
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one template object.
      tags:
        - Template
      operationId: Delete one Template
      responses:
        "200":
          $ref: "#/components/responses/delete_one_panObject_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one template object.
      tags:
        - Template
      operationId: Update one Template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/template_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/template":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of templates object information. Quick filter information can be provided.
      tags:
        - Template
      operationId: List multiple templates
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_template_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one template object.
      tags:
        - Template
      operationId: Create template
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/template_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/template_stack/{template_stack_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/template_stack_id"
    get:
      description: List one Template Stack object information.
      tags:
        - Template Stack
      operationId: List one Template Stack
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_stack_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Template Stack object.
      tags:
        - Template Stack
      operationId: Delete one Template Stack
      responses:
        "200":
          $ref: "#/components/responses/delete_one_panObject_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Template Stack object.
      tags:
        - Template Stack
      operationId: Update one Template Stack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/template_stack_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_stack_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/template_stack":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of template stacks object information. Quick filter information can be provided.
      tags:
        - Template_Stack
      operationId: List multiple template_Stacks
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_template_stack_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one template stack object.
      tags:
        - Template_Stack
      operationId: Create template stack
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/template_stack_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_template_stack_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Objects in Project
  # Manage Tag Objects in Project
  "/api/v1/project/{project_id}/object/tag/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one tag object information.
      tags:
        - Tag
      operationId: List one tag
      responses:
        "200":
          $ref: "#/components/responses/get_one_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one tag object.
      tags:
        - Tag
      operationId: Delete one tag
      responses:
        "200":
          $ref: "#/components/responses/get_one_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one tag object.
      tags:
        - Tag
      operationId: Update one tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/tag":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of tag object information. Quick filter information can be provided.
      tags:
        - Tag
      operationId: List multiple tags
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one tag object.
      tags:
        - Tag
      operationId: Create tag
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple tag objects information.
      tags:
        - Tag
      operationId: Update multiple tags
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tag_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tag_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Address Objects in Project
  "/api/v1/project/{project_id}/object/address/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one address object information.
      tags:
        - Address
      operationId: List one address
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one address object.
      tags:
        - Address
      operationId: Delete one address
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one address object.
      tags:
        - Address
      operationId: Update one address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/address":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of address objects information. Quick filter information can be provided.
      tags:
        - Address
      operationId: List multiple address
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one address object.
      tags:
        - Address
      operationId: Create address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple address objects information.
      tags:
        - Address
      operationId: Update multiple address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Address Group Objects in Project
  "/api/v1/project/{project_id}/object/address_group/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one address group object information.
      tags:
        - Address Group
      operationId: List one address group
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one address group object.
      tags:
        - Address Group
      operationId: Delete one address group
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one address group object.
      tags:
        - Address Group
      operationId: Update one address group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/address_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of address group object information. Quick filter information can be provided.
      tags:
        - Address Group
      operationId: List multiple address groups
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one address group object.
      tags:
        - Address Group
      operationId: Create address group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple address group objects information.
      tags:
        - Address Group
      operationId: Update multiple address groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/address_group_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_address_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Service Objects in Project
  "/api/v1/project/{project_id}/object/service/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one service object.
      tags:
        - Service
      operationId: List one service
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one service object.
      tags:
        - Service
      operationId: Delete one service
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one service object.
      tags:
        - Service
      operationId: Update one service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/service":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List multiple service objects. Quick filter criteria can be provided.
      tags:
        - Service
      operationId: List multiple services
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create a new service object.
      tags:
        - Service
      operationId: Create service
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple service objects information.
      tags:
        - Service
      operationId: Update multiple services
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_service_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Service Group Objects in Project
  "/api/v1/project/{project_id}/object/service_group/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Service Group object information.
      tags:
        - Service Group
      operationId: List one service group
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Service Group object.
      tags:
        - Service Group
      operationId: Delete one service group
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Service Group object.
      tags:
        - Service Group
      operationId: Update one service group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/service_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Service Group object information. Quick filter information can be provided.
      tags:
        - Service Group
      operationId: List multiple Service groups
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Service Group object.
      tags:
        - Service Group
      operationId: Create Service group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Service Group objects information.
      tags:
        - Service Group
      operationId: Update multiple Service Groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/service_group_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_service_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage User Objects in Project
  "/api/v1/project/{project_id}/object/user/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one object object information.
      tags:
        - User Object
      operationId: List one user
      responses:
        "200":
          $ref: "#/components/responses/get_one_user_object_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one User object.
      tags:
        - User Object
      operationId: Delete one user
      responses:
        "200":
          $ref: "#/components/responses/get_one_user_object_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/user":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of User object information. Quick filter information can be provided.
      tags:
        - User Object
      operationId: List multiple Users
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_user_object_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one User object.
      tags:
        - User Object
      operationId: Create User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_object_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_user_object_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Application Object in Project
  "/api/v1/project/{project_id}/object/application/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one application object information.
      tags:
        - Application
      operationId: List one application
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one application object.
      tags:
        - Application
      operationId: Delete one application
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one application object.
      tags:
        - Application
      operationId: Update one application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/application":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of application object information. Quick filter information can be provided.
      tags:
        - Application
      operationId: List multiple applications
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one application object.
      tags:
        - Application
      operationId: Create application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple application objects information.
      tags:
        - Application
      operationId: Update multiple applications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Application Group Object in Project
  "/api/v1/project/{project_id}/object/application_group/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Application Group object information.
      tags:
        - Application Group
      operationId: List one application group
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Application Group object.
      tags:
        - Application Group
      operationId: Delete one application group
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Application Group object.
      tags:
        - Application Group
      operationId: Update one application group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/application_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Application Group object information. Quick filter information can be provided.
      tags:
        - Application Group
      operationId: List multiple application groups
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Application Group object.
      tags:
        - Application Group
      operationId: Create application group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Application Group objects information.
      tags:
        - Application Group
      operationId: Update multiple application groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_group_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Application Filter Object in Project
  "/api/v1/project/{project_id}/object/application_filter/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Application Filter object information.
      tags:
        - Application Filter
      operationId: List one application filter
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Application Filter object.
      tags:
        - Application Filter
      operationId: Delete one application filter
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Application Filter object.
      tags:
        - Application Filter
      operationId: Update one application filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_filter_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/application_filter":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Application Filter object information. Quick filter information can be provided.
      tags:
        - Application Filter
      operationId: List multiple application filters
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Application Filter object.
      tags:
        - Application Filter
      operationId: Create application filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_filter_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Application Filter objects information.
      tags:
        - Application Filter
      operationId: Update multiple application filters
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/application_filter_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/application_filter/characteristics":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List possible characteristics of an application  filter.
      tags:
        - Application Filter
      operationId: List multiple application filter characteristics
      parameters:
        - $ref: "#/components/parameters/category"
        - $ref: "#/components/parameters/subcategory"
        - $ref: "#/components/parameters/risk"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_filter_characteristics_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Category Object in Project
  "/api/v1/project/{project_id}/object/category":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of category object information.
      tags:
        - Category
      parameters:
        - $ref: "#/components/parameters/characteristic"
        - $ref: "#/components/parameters/subcategory"
        - $ref: "#/components/parameters/risk"
      operationId: List multiple categories
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_category_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Subcategory Object in Project
  "/api/v1/project/{project_id}/object/subcategory":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/category"
      - $ref: "#/components/parameters/characteristic"
      - $ref: "#/components/parameters/risk"
    get:
      description: List a group of subcategory object information.
      tags:
        - Subcategory
      operationId: List multiple subcategories
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_subcategory_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Technology Object in Project
  "/api/v1/project/{project_id}/object/technology":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of technology object information.
      tags:
        - Technology
      operationId: List multiple technologies
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_technology_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Risk Object in Project
  "/api/v1/project/{project_id}/object/risk":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/category"
      - $ref: "#/components/parameters/subcategory"
      - $ref: "#/components/parameters/characteristic"
    get:
      description: List a group of risk object information.
      tags:
        - Risk
      operationId: List multiple risks
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_risk_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Profile Object in Project
  "/api/v1/project/{project_id}/object/profile/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one profile object information.
      tags:
        - Profile
      operationId: List one profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one profile object.
      tags:
        - Profile
      operationId: Delete one profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one profile object.
      tags:
        - Profile
      operationId: Update one profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/profile":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of profile object information. Quick filter information can be provided.
      tags:
        - Profile
      operationId: List multiple profiles
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/profile_type"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one profile object.
      tags:
        - Profile
      operationId: Create profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple profile objects information.
      tags:
        - Profile
      operationId: Update multiple profiles
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Profile Group Object in Project
  "/api/v1/project/{project_id}/object/profile_group/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one profile group object information.
      tags:
        - Profile group
      operationId: List one profile group
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one profile group object.
      tags:
        - Profile group
      operationId: Delete one profile group
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one profile group object.
      tags:
        - Profile group
      operationId: Update one profile group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/profile_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of profile group object information. Quick filter information can be provided.
      tags:
        - Profile group
      operationId: List multiple profile groups
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one profile group object.
      tags:
        - Profile group
      operationId: Create profile group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple profile group objects information.
      tags:
        - Profile group
      operationId: Update multiple profile groups
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/profile_group_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_profile_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage External List Object in Project
  "/api/v1/project/{project_id}/object/external_list/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one external list object information.
      tags:
        - External list
      operationId: List one external_list group
      responses:
        "200":
          $ref: "#/components/responses/get_one_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one external list object.
      tags:
        - External list
      operationId: Delete one external list
      responses:
        "200":
          $ref: "#/components/responses/get_one_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one external list object.
      tags:
        - External list
      operationId: Update one external_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/external_list_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/external_list":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of external list object information. Quick filter information can be provided.
      tags:
        - External list
      operationId: List multiple external_list
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one external list object.
      tags:
        - External list
      operationId: Create external_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/external_list_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple external list objects information.
      tags:
        - External list
      operationId: Update multiple external_list
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/external_list_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_external_list_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Log Setting Object in Project
  "/api/v1/project/{project_id}/object/log_setting/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one log setting object information.
      tags:
        - Log setting
      operationId: List one log_setting group
      responses:
        "200":
          $ref: "#/components/responses/get_one_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one log setting object.
      tags:
        - Log setting
      operationId: Delete one log_setting
      responses:
        "200":
          $ref: "#/components/responses/get_one_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one log setting object.
      tags:
        - Log setting
      operationId: Update one log_setting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/log_setting_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/log_setting":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of log setting objects information. Quick filter information can be provided.
      tags:
        - Log setting
      operationId: List multiple log_setting
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one log setting object.
      tags:
        - Log setting
      operationId: Create log_setting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/log_setting_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple log setting objects information.
      tags:
        - Log setting
      operationId: Update multiple log_setting
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/log_setting_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_log_setting_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Schedule Object in Project
  "/api/v1/project/{project_id}/object/schedule/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one schedule object information.
      tags:
        - Schedule
      operationId: List one schedule
      responses:
        "200":
          $ref: "#/components/responses/get_one_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one schedule object.
      tags:
        - Schedule
      operationId: Delete one schedule
      responses:
        "200":
          $ref: "#/components/responses/get_one_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one schedule object.
      tags:
        - Schedule
      operationId: Update one schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schedule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/schedule":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of schedule objects information. Quick filter information can be provided.
      tags:
        - Schedule
      operationId: List multiple schedule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one schedule object.
      tags:
        - Schedule
      operationId: Create schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schedule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple schedule objects information.
      tags:
        - Schedule
      operationId: Update multiple schedule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/schedule_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_schedule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Region Object in Project
  "/api/v1/project/{project_id}/object/region/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one region object information.
      tags:
        - Region
      operationId: List one region
      responses:
        "200":
          $ref: "#/components/responses/get_one_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one region object.
      tags:
        - Region
      operationId: Delete one region
      responses:
        "200":
          $ref: "#/components/responses/get_one_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one region object.
      tags:
        - Region
      operationId: Update one region
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/region_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/region":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of region objects information. Quick filter information can be provided.
      tags:
        - Region
      operationId: List multiple region
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one region object.
      tags:
        - Region
      operationId: Create region
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/region_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple region objects information.
      tags:
        - Region
      operationId: Update multiple region
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/region_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_region_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Scep Object in Project
  "/api/v1/project/{project_id}/object/scep/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one scep object information.
      tags:
        - Scep
      operationId: List one scep
      responses:
        "200":
          $ref: "#/components/responses/get_one_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one scep object.
      tags:
        - Scep
      operationId: Delete one scep
      responses:
        "200":
          $ref: "#/components/responses/get_one_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one scep object.
      tags:
        - Scep
      operationId: Update one scep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/scep_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/scep":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of scep objects information. Quick filter information can be provided.
      tags:
        - Scep
      operationId: List multiple scep
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one scep object.
      tags:
        - Scep
      operationId: Create scep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/scep_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple scep objects information.
      tags:
        - Scep
      operationId: Update multiple scep
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/scep_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_scep_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Certificate Object in Project
  "/api/v1/project/{project_id}/object/certificate/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one certificate object information.
      tags:
        - Certificate
      operationId: List one certificate
      responses:
        "200":
          $ref: "#/components/responses/get_one_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one certificate object.
      tags:
        - Certificate
      operationId: Delete one certificate
      responses:
        "200":
          $ref: "#/components/responses/get_one_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one certificate object.
      tags:
        - Certificate
      operationId: Update one certificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificate_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/certificate":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of certificate objects information. Quick filter information can be provided.
      tags:
        - Certificate
      operationId: List multiple certificate
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one certificate object.
      tags:
        - Certificate
      operationId: Create certificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificate_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple certificate objects information.
      tags:
        - Certificate
      operationId: Update multiple certificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/certificate_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_certificate_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Ssl Tls Profile Object in Project
  "/api/v1/project/{project_id}/object/ssl_tls_profile/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one ssl tls profile object information.
      tags:
        - Ssl tls profile
      operationId: List one ssl_tls_profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one ssl tls profile object.
      tags:
        - Ssl tls profile
      operationId: Delete one ssl_tls_profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one ssl tls profile object.
      tags:
        - Ssl tls profile
      operationId: Update one ssl_tls_profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssl_tls_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/ssl_tls_profile":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of ssl tls profile objects information. Quick filter information can be provided.
      tags:
        - Ssl tls profile
      operationId: List multiple ssl_tls_profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one ssl tls profile object.
      tags:
        - Ssl tls profile
      operationId: Create ssl_tls_profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssl_tls_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple ssl tls profile objects information.
      tags:
        - Ssl tls profile
      operationId: Update multiple ssl_tls_profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ssl_tls_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ssl_tls_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Email Scheduler Object in Project
  "/api/v1/project/{project_id}/object/email_scheduler/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one email scheduler object information.
      tags:
        - Email scheduler
      operationId: List one email_scheduler
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one email scheduler object.
      tags:
        - Email scheduler
      operationId: Delete one email_scheduler
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one email scheduler object.
      tags:
        - Email scheduler
      operationId: Update one email_scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_scheduler_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/object/email_scheduler":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of email scheduler objects information. Quick filter information can be provided.
      tags:
        - Email scheduler
      operationId: List multiple email_scheduler
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one email scheduler object.
      tags:
        - Email scheduler
      operationId: Create email_scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_scheduler_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple email scheduler objects information.
      tags:
        - Email scheduler
      operationId: Update multiple email_scheduler
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_scheduler_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_email_scheduler_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Policies in Project
  # Manage Security Rules in Project
  "/api/v1/project/{project_id}/policy/security/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one security rule policy information.
      tags:
        - Security rule
      operationId: List one security_rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one security rule policy.
      tags:
        - Security rule
      operationId: Delete one security_rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one security rule policy.
      tags:
        - Security rule
      operationId: Update one security_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/security_rule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/security":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of security rule policies information. Quick filter information can be provided.
      tags:
        - Security rule
      operationId: List multiple security_rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one security rule policy.
      tags:
        - Security rule
      operationId: Create security_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/security_rule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple security rule policies information.
      tags:
        - Security rule
      operationId: Update multiple security_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/security_rule_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/security/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one security rule policy.
      tags:
        - Security rule
      operationId: Move one security_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/security/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone security rule policy.
      tags:
        - Security rule
      operationId: Clone security_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_security_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage NAT Rules in Project
  "/api/v1/project/{project_id}/policy/nat/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one NAT Rule policy information.
      tags:
        - NAT Rule
      operationId: List one NAT Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one NAT Rule policy.
      tags:
        - NAT Rule
      operationId: Delete one NAT rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one NAT Rule policy.
      tags:
        - NAT Rule
      operationId: Update one NAT Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/nat":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of NAT Rule policies information. Quick filter information can be provided.
      tags:
        - NAT Rule
      operationId: List multiple NAT Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one NAT Rule policy.
      tags:
        - NAT Rule
      operationId: Create NAT Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/nat_rule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple NAT Rule policies information.
      tags:
        - NAT Rule
      operationId: Update multiple NAT Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/nat/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one NAT rule policy.
      tags:
        - NAT Rule
      operationId: Move one NAT rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/nat/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone NAT rule policy.
      tags:
        - NAT Rule
      operationId: Clone NAT rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_nat_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Application Override Rules in Project
  "/api/v1/project/{project_id}/policy/application_override/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Application Override Rule policy information.
      tags:
        - Application Override Rule
      operationId: List one Application Override Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_override_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Application Override Rule policy.
      tags:
        - Application Override Rule
      operationId: Delete one Application Override rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Application Override Rule policy.
      tags:
        - Application Override Rule
      operationId: Update one Application Override Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/application_override":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Application Override Rule policies information. Quick filter information can be provided.
      tags:
        - Application Override Rule
      operationId: List multiple Application Override Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_override_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Application Override Rule policy.
      tags:
        - Application Override Rule
      operationId: Create Application Override Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple Application Override Rule policies information.
      tags:
        - Application Override Rule
      operationId: Update multiple Application Override Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/application_override/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one application_override rule policy.
      tags:
        - Application Override Rule
      operationId: Move one application_override rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_application_override_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/application_override/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone application_override rule policy.
      tags:
        - Application Override Rule
      operationId: Clone application_override rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_application_override_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage QoS Rules in Project
  "/api/v1/project/{project_id}/policy/qos/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one QoS Rule policy information.
      tags:
        - QoS Rule
      operationId: List one QoS Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one QoS Rule policy.
      tags:
        - QoS Rule
      operationId: Delete one QoS rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one QoS Rule policy.
      tags:
        - QoS Rule
      operationId: Update one QoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/qos":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of QoS Rule policies information. Quick filter information can be provided.
      tags:
        - QoS Rule
      operationId: List multiple QoS Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_qos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one QoS Rule policy.
      tags:
        - QoS Rule
      operationId: Create QoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple QoS Rule policies information.
      tags:
        - QoS Rule
      operationId: Update multiple QoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/qos/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one QoS rule policy.
      tags:
        - QoS Rule
      operationId: Move one qos rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/qos/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone QoS rule policy.
      tags:
        - QoS Rule
      operationId: Clone qos rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_qos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Policy-Based Forwarding Rules in Project
  "/api/v1/project/{project_id}/policy/policy_based_forwarding/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Policy-Based Forwarding Rule policy information.
      tags:
        - Policy-Based Forwarding Rule
      operationId: List one Policy-Based Forwarding Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Policy-Based Forwarding Rule policy.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Delete one Policy-Based Forwarding rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Policy-Based Forwarding Rule policy.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Update one Policy-Based Forwarding Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/policy_based_forwarding":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Policy-Based Forwarding Rule policies information. Quick filter information can be provided.
      tags:
        - Policy-Based Forwarding Rule
      operationId: List multiple Policy-Based Forwarding Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Policy-Based Forwarding Rule policy.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Create Policy-Based Forwarding Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/pbf_rule_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Policy-Based Forwarding Rule policies information.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Update multiple Policy-Based Forwarding Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/policy_based_forwarding/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one policy_based_forwarding rule policy.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Move one policy_based_forwarding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/policy_based_forwarding/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone policy_based_forwarding rule policy.
      tags:
        - Policy-Based Forwarding Rule
      operationId: Clone policy_based_forwarding
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_pbf_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Decryption Rules in Project
  "/api/v1/project/{project_id}/policy/decryption/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Decryption Rule policy information.
      tags:
        - Decryption Rule
      operationId: List one Decryption Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_decryption_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Decryption Rule policy.
      tags:
        - Decryption Rule
      operationId: Delete one Decryption rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Decryption Rule policy.
      tags:
        - Decryption Rule
      operationId: Update one Decryption Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/decryption":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Decryption Rule policies information. Quick filter information can be provided.
      tags:
        - Decryption Rule
      operationId: List multiple Decryption Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_decryption_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Decryption Rule policy.
      tags:
        - Decryption Rule
      operationId: Create Decryption Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple Decryption Rule policies information.
      tags:
        - Decryption Rule
      operationId: Update multiple Decryption Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/decryption/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one decryption rule policy.
      tags:
        - Decryption Rule
      operationId: Move one decryption_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_decryption_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/decryption/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone decryption rule policy.
      tags:
        - Decryption Rule
      operationId: Clone decryption_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_decryption_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Tunnel-Inspection Rules in Project
  "/api/v1/project/{project_id}/policy/tunnel_inspection/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Tunnel-Inspection Rule policy information.
      tags:
        - Tunnel-Inspection Rule
      operationId: List one Tunnel-Inspection Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_tunnel_inspection_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Tunnel-Inspection Rule policy.
      tags:
        - Tunnel-Inspection Rule
      operationId: Delete one Tunnel-Inspection rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Tunnel-Inspection Rule policy.
      tags:
        - Tunnel-Inspection Rule
      operationId: Update one Tunnel-Inspection Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/tunnel_inspection":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Tunnel-Inspection Rule policies information. Quick filter information can be provided.
      tags:
        - Tunnel-Inspection Rule
      operationId: List multiple Tunnel-Inspection Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tunnel_inspection_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Tunnel-Inspection Rule policy.
      tags:
        - Tunnel-Inspection Rule
      operationId: Create Tunnel-Inspection Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple Tunnel-Inspection Rule policies information.
      tags:
        - Tunnel-Inspection Rule
      operationId: Update multiple Tunnel-Inspection Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/tunnel_inspection/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one tunnel_inspection rule policy.
      tags:
        - Tunnel-Inspection Rule
      operationId: Move one tunnel_inspection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_tunnel_inspection_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/tunnel_inspection/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone tunnel_inspection rule policy.
      tags:
        - Tunnel-Inspection Rule
      operationId: Clone tunnel_inspection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tunnel_inspection_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Authentication Rules in Project
  "/api/v1/project/{project_id}/policy/authentication/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Authentication Rule policy information.
      tags:
        - Authentication Rule
      operationId: List one Authentication Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_authentication_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Authentication Rule policy.
      tags:
        - Authentication Rule
      operationId: Delete one Authentication rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Authentication Rule policy.
      tags:
        - Authentication Rule
      operationId: Update one Authentication Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/authentication":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Authentication Rule policies information. Quick filter information can be provided.
      tags:
        - Authentication Rule
      operationId: List multiple Authentication Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_authentication_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Authentication Rule policy.
      tags:
        - Authentication Rule
      operationId: Create Authentication Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple Authentication Rule policies information.
      tags:
        - Authentication Rule
      operationId: Update multiple Authentication Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/authentication/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one authentication rule policy.
      tags:
        - Authentication Rule
      operationId: Move one authentication_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_authentication_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/authentication/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    post:
      description: Clone authentication rule policy.
      tags:
        - Authentication Rule
      operationId: Clone authentication_rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_authentication_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # DoS Rules in Project
  "/api/v1/project/{project_id}/policy/dos/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one DoS Rule policy information.
      tags:
        - DoS Rule
      operationId: List one DoS Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_dos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one DoS Rule policy.
      tags:
        - DoS Rule
      operationId: Delete one DoS rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one DoS Rule policy.
      tags:
        - DoS Rule
      operationId: Update one DoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/dos":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of DoS Rule policies information. Quick filter information can be provided.
      tags:
        - DoS Rule
      operationId: List multiple DoS Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_dos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one DoS Rule policy.
      tags:
        - DoS Rule
      operationId: Create DoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple DoS Rule policies information.
      tags:
        - DoS Rule
      operationId: Update multiple DoS Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/dos/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one DoS rule policy.
      tags:
        - DoS Rule
      operationId: Move one DoS rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_dos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/policy/dos/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    post:
      description: Clone DoS rule policy.
      tags:
        - DoS Rule
      operationId: Clone DoS rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/clone_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_dos_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # SD-WAN Rules in Project
  "/api/v1/project/{project_id}/policy/sdwan/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Rule policy information.
      tags:
        - SDWAN Rule
      operationId: List one SDWAN Rule
      responses:
        "200":
          $ref: "#/components/responses/get_one_sdwan_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one SDWAN Rule policy.
      tags:
        - SDWAN Rule
      operationId: Delete one SDWAN rule
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one SDWAN Rule policy.
      tags:
        - SDWAN Rule
      operationId: Update one SDWAN Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/sdwan":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Rule policies information. Quick filter information can be provided.
      tags:
        - SDWAN Rule
      operationId: List multiple SDWAN Rule
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one SDWAN Rule policy.
      tags:
        - SDWAN Rule
      operationId: Create SDWAN Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple SDWAN Rule policies information.
      tags:
        - SDWAN Rule
      operationId: Update multiple SDWAN Rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/policy/sdwan/{object_id}/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Move one SDWAN policy.
      tags:
        - SDWAN Rule
      operationId: Move one SDWAN rule
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/move_rules_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_one_sdwan_rule_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  #SDWAN Profiles
  # # SDWAN Path Quality Profile
  "/api/v1/project/{project_id}/object/sdwan_profile/path_quality/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Path Quality Profile information.
      tags:
        - SDWAN Path Quality Profile
      operationId: List one SDWAN Path Quality Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete one SDWAN Path Quality Profile.
      tags:
        - SDWAN Path Quality Profile
      operationId: Delete one SDWAN Path Quality Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one SDWAN Path Quality Profile.
      tags:
        - SDWAN Path Quality Profile
      operationId: Update one SDWAN Path Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulk_common_xml_schema_with_id"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/object/sdwan_profile/path_quality":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Path Quality Profile policies information. Quick filter information can be provided.
      tags:
        - SDWAN Path Quality Profile
      operationId: List multiple SDWAN Path Quality Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Create one SDWAN Path Quality Profile.
      tags:
        - SDWAN Path Quality Profile
      operationId: Create SDWAN Path Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple SDWAN Path Quality Profile information.
      tags:
        - SDWAN Path Quality Profile
      operationId: Update multiple SDWAN Path Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # # Saas Quality Profile
  "/api/v1/project/{project_id}/object/sdwan_profile/saas_quality/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN SaaS Quality Profile information.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: List one SDWAN SaaS Quality Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete one SDWAN SaaS Quality Profile.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: Delete one Saas Quality Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one SDWAN SaaS Quality Profile.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: Update one SDWAN SaaS Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulk_common_xml_schema_with_id"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/object/sdwan_profile/saas_quality":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN SaaS Quality Profile policies information. Quick filter information can be provided.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: List multiple SDWAN SaaS Quality Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Create one SDWAN SaaS Quality Profile.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: Create SDWAN SaaS Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple SDWAN SaaS Quality Profile information.
      tags:
        - SDWAN SaaS Quality Profile
      operationId: Update multiple SDWAN SaaS Quality Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # # Traffic Distribution  Profile
  "/api/v1/project/{project_id}/object/sdwan_profile/traffic_distribution/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Traffic Distribution Profile information.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: List one SDWAN Traffic Distribution Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete one SDWAN Traffic Distribution Profile.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: Delete one Traffic Distribution Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one SDWAN Traffic Distribution Profile.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: Update one SDWAN Traffic Distribution Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulk_common_xml_schema_with_id"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/object/sdwan_profile/traffic_distribution":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Traffic Distribution Profile policies information. Quick filter information can be provided.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: List multiple SDWAN Traffic Distribution Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Create one SDWAN Traffic Distribution Profile.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: Create SDWAN Traffic Distribution Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple SDWAN Traffic Distribution Profile information.
      tags:
        - SDWAN Traffic Distribution Profile
      operationId: Update multiple SDWAN Traffic Distribution Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # # Error correction Profile
  "/api/v1/project/{project_id}/object/sdwan_profile/error_correction/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Error Correction Profile information.
      tags:
        - SDWAN Error Correction Profile
      operationId: List one SDWAN Error Correction Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete one SDWAN Error Correction Profile.
      tags:
        - SDWAN Error Correction Profile
      operationId: Delete one Error correction Profile
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one SDWAN Error Correction Profile.
      tags:
        - SDWAN Error Correction Profile
      operationId: Update one SDWAN Error Correction Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bulk_common_xml_schema_with_id"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/object/sdwan_profile/error_correction":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Error Correction Profile policies information. Quick filter information can be provided.
      tags:
        - SDWAN Error Correction Profile
      operationId: List multiple SDWAN Error Correction Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Create one SDWAN Error Correction Profile.
      tags:
        - SDWAN Error Correction Profile
      operationId: Create SDWAN Error Correction Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple SDWAN Error Correction Profile information.
      tags:
        - SDWAN Error Correction Profile
      operationId: Update multiple SDWAN Error Correction Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage Networking in Project
  # #  Interfaces                                   -
  # # # Ethernet
  "/api/v1/project/{project_id}/network/interface/ethernet/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Ethernet Interface information.
      tags:
        - Ethernet Interface
      operationId: List one Ethernet Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Ethernet Interface.
      tags:
        - Ethernet Interface
      operationId: Delete one Ethernet Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Ethernet Interface.
      tags:
        - Ethernet Interface
      operationId: Update one Ethernet Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_ethernet_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/ethernet":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Ethernet Interface information. Quick filter information can be provided.
      tags:
        - Ethernet Interface
      operationId: List multiple Ethernet Interface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Ethernet Interface.
      tags:
        - Ethernet Interface
      operationId: Create Ethernet Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_ethernet_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Ethernet Interface information.
      tags:
        - Ethernet Interface
      operationId: Update multiple Ethernet Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_ethernet_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Ethernet Subinterface
  "/api/v1/project/{project_id}/network/interface/ethernet/subinterface/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Ethernet SubInterface information.
      tags:
        - Ethernet Interface
      operationId: List one Ethernet SubInterface
      responses:
        "200":
          $ref: "#/components/responses/get_one_sub_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Ethernet SubInterface.
      tags:
        - Ethernet Interface
      operationId: Delete one Ethernet SubInterface
      responses:
        "200":
          $ref: "#/components/responses/get_one_sub_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Ethernet SubInterface.
      tags:
        - Ethernet Interface
      operationId: Update one Ethernet SubInterface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sub_interface_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_sub_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/ethernet/subinterface":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Ethernet Interface information. Quick filter information can be provided.
      tags:
        - Ethernet Interface
      operationId: List multiple Ethernet SubInterface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sub_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Ethernet SubInterface.
      tags:
        - Ethernet Interface
      operationId: Create Ethernet SubInterface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sub_interface_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_sub_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # VLAN
  "/api/v1/project/{project_id}/network/interface/vlan/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one VLAN Interface information.
      tags:
        - VLAN Interface
      operationId: List one VLAN Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one VLAN Interface.
      tags:
        - VLAN Interface
      operationId: Delete one VLAN Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one VLAN Interface.
      tags:
        - VLAN Interface
      operationId: Update one VLAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_ethernet_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_ethernet_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/vlan":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of VLAN Interface information. Quick filter information can be provided.
      tags:
        - VLAN Interface
      operationId: List multiple VLAN Interface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one VLAN Interface.
      tags:
        - VLAN Interface
      operationId: Create VLAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_vlan_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple VLAN Interface information.
      tags:
        - VLAN Interface
      operationId: Update multiple VLAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_vlan_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Loopback
  "/api/v1/project/{project_id}/network/interface/loopback/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Loopback Interface information.
      tags:
        - Loopback Interface
      operationId: List one Loopback Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Loopback Interface.
      tags:
        - Loopback Interface
      operationId: Delete one Loopback Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Loopback Interface.
      tags:
        - Loopback Interface
      operationId: Update one Loopback Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_loopback_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/loopback":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Loopback Interface information. Quick filter information can be provided.
      tags:
        - Loopback Interface
      operationId: List multiple Loopback Interface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Loopback Interface.
      tags:
        - Loopback Interface
      operationId: Create Loopback Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_loopback_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Loopback Interface information.
      tags:
        - Loopback Interface
      operationId: Update multiple Loopback Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_loopback_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_loopback_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Tunnel
  "/api/v1/project/{project_id}/network/interface/tunnel/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Tunnel Interface information.
      tags:
        - Tunnel Interface
      operationId: List one Tunnel Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Tunnel Interface.
      tags:
        - Tunnel Interface
      operationId: Delete one Tunnel Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Tunnel Interface.
      tags:
        - Tunnel Interface
      operationId: Update one Tunnel Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_tunnel_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/tunnel":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Tunnel Interface information. Quick filter information can be provided.
      tags:
        - Tunnel Interface
      operationId: List multiple Tunnel Interface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Tunnel Interface.
      tags:
        - Tunnel Interface
      operationId: Create Tunnel Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_tunnel_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Tunnel Interface information.
      tags:
        - Tunnel Interface
      operationId: Update multiple Tunnel Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_tunnel_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # SDWAN
  "/api/v1/project/{project_id}/network/interface/sdwan/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Interface information.
      tags:
        - SDWAN Interface
      operationId: List one SDWAN Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one SDWAN Interface.
      tags:
        - SDWAN Interface
      operationId: Delete one SDWAN Interface
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one SDWAN Interface.
      tags:
        - SDWAN Interface
      operationId: Update one SDWAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_sdwan_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/interface/sdwan":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Interface information. Quick filter information can be provided.
      tags:
        - SDWAN Interface
      operationId: List multiple SDWAN Interface
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one SDWAN Interface.
      tags:
        - SDWAN Interface
      operationId: Create SDWAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_sdwan_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple SDWAN Interface information.
      tags:
        - SDWAN Interface
      operationId: Update multiple SDWAN Interface
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_sdwan_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_sdwan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  Zones                                        -
  "/api/v1/project/{project_id}/network/zone/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Zone information.
      tags:
        - Zone
      operationId: List one Zone
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Zone.
      tags:
        - Zone
      operationId: Delete one Zone
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Zone.
      tags:
        - Zone
      operationId: Update one Zone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/zone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Zone information. Quick filter information can be provided.
      tags:
        - Zone
      operationId: List multiple Zone
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Zone.
      tags:
        - Zone
      operationId: Create Zone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Zone information.
      tags:
        - Zone
      operationId: Update multiple Zone
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_zone_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  VLAN                                         -
  "/api/v1/project/{project_id}/network/vlan/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one VLAN information.
      tags:
        - VLAN
      operationId: List one VLAN
      responses:
        "200":
          $ref: "#/components/responses/get_one_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one VLAN.
      tags:
        - VLAN
      operationId: Delete one VLAN
      responses:
        "200":
          $ref: "#/components/responses/get_one_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one VLAN.
      tags:
        - VLAN
      operationId: Update one VLAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vlan_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/vlan":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of VLAN information. Quick filter information can be provided.
      tags:
        - VLAN
      operationId: List multiple VLAN
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one VLAN.
      tags:
        - VLAN
      operationId: Create VLAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vlan_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple VLAN information.
      tags:
        - VLAN
      operationId: Update multiple VLAN
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/vlan_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_vlan_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  Virtual Wire                                 -
  "/api/v1/project/{project_id}/network/virtual_wire/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Virtual Wire information.
      tags:
        - Virtual Wire
      operationId: List one Virtual Wire
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Virtual Wire.
      tags:
        - Virtual Wire
      operationId: Delete one Virtual Wire
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Virtual Wire.
      tags:
        - Virtual Wire
      operationId: Update one Virtual Wire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_wire_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/virtual_wire":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Virtual Wire information. Quick filter information can be provided.
      tags:
        - Virtual Wire
      operationId: List multiple Virtual Wire
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Virtual Wire.
      tags:
        - Virtual Wire
      operationId: Create Virtual Wire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_wire_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Virtual Wire information.
      tags:
        - Virtual Wire
      operationId: Update multiple Virtual Wire
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_wire_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_virtual_wire_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  Virtual Router                              -
  "/api/v1/project/{project_id}/network/virtual_router/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Virtual Router information.
      tags:
        - Virtual Router
      operationId: List one Virtual Router
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Virtual Router.
      tags:
        - Virtual Router
      operationId: Delete one Virtual Router
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Virtual Router.
      tags:
        - Virtual Router
      operationId: Update one Virtual Router
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_router_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/virtual_router":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Virtual Router information. Quick filter information can be provided.
      tags:
        - Virtual Router
      operationId: List multiple Virtual Router
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Virtual Router.
      tags:
        - Virtual Router
      operationId: Create Virtual Router
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_router_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Virtual Router information.
      tags:
        - Virtual Router
      operationId: Update multiple Virtual Router
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/virtual_router_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_virtual_router_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  IPSec Tunnels                                -
  "/api/v1/project/{project_id}/network/ipsec_tunnel/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one IPsec Tunnel information.
      tags:
        - IPsec Tunnel
      operationId: List one IPsec Tunnel
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one IPsec Tunnel.
      tags:
        - IPsec Tunnel
      operationId: Delete one IPsec Tunnel
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one IPsec Tunnel.
      tags:
        - IPsec Tunnel
      operationId: Update one IPsec Tunnel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_tunnel_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/ipsec_tunnel":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of IPsec Tunnel information. Quick filter information can be provided.
      tags:
        - IPsec Tunnel
      operationId: List multiple IPsec Tunnel
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one IPsec Tunnel.
      tags:
        - IPsec Tunnel
      operationId: Create IPsec Tunnel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_tunnel_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple IPsec Tunnel information.
      tags:
        - IPsec Tunnel
      operationId: Update multiple IPsec Tunnel
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_tunnel_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ipsec_tunnel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  GRE Tunnels
  # #  DHCP
  # #  DNS Proxy
  # #  Global Protect                               -
  # # # Global Protect Portal Profile               -
  "/api/v1/project/{project_id}/network/global_protect/portal/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP Portal information.
      tags:
        - GP Portal
      operationId: List one GP Portal
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP Portal.
      tags:
        - GP Portal
      operationId: Delete one GP Portal
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP Portal.
      tags:
        - GP Portal
      operationId: Update one GP Portal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_portal_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/global_protect/portal":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP Portal information. Quick filter information can be provided.
      tags:
        - GP Portal
      operationId: List multiple GP Portal
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP Portal.
      tags:
        - GP Portal
      operationId: Create GP Portal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_portal_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP Portal information.
      tags:
        - GP Portal
      operationId: Update multiple GP Portal
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_portal_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_portal_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Global Protect Gateway Profile              -
  "/api/v1/project/{project_id}/network/global_protect/gateway/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP Gateway information.
      tags:
        - GP Gateway
      operationId: List one GP Gateway
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP Gateway.
      tags:
        - GP Gateway
      operationId: Delete one GP Gateway
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP Gateway.
      tags:
        - GP Gateway
      operationId: Update one GP Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_gateway_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/global_protect/gateway":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP Gateway information. Quick filter information can be provided.
      tags:
        - GP Gateway
      operationId: List multiple GP Gateway
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP Gateway.
      tags:
        - GP Gateway
      operationId: Create GP Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_gateway_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP Gateway information.
      tags:
        - GP Gateway
      operationId: Update multiple GP Gateway
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_gateway_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_gateway_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Global Protect MDM Profile                  -
  "/api/v1/project/{project_id}/network/global_protect/mdm/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP Mdm information.
      tags:
        - GP Mdm
      operationId: List one GP Mdm
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP Mdm.
      tags:
        - GP Mdm
      operationId: Delete one GP Mdm
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP Mdm.
      tags:
        - GP Mdm
      operationId: Update one GP Mdm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_mdm_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/global_protect/mdm":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP Mdm information. Quick filter information can be provided.
      tags:
        - GP Mdm
      operationId: List multiple GP Mdm
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP Mdm.
      tags:
        - GP Mdm
      operationId: Create GP Mdm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_mdm_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP Mdm information.
      tags:
        - GP Mdm
      operationId: Update multiple GP Mdm
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_mdm_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_mdm_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Clientless Application Profile              -
  "/api/v1/project/{project_id}/network/global_protect/clientless_app/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP Clientless App information.
      tags:
        - GP Clientless App
      operationId: List one GP Clientless App
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP Clientless App.
      tags:
        - GP Clientless App
      operationId: Delete one GP Clientless App
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP Clientless App.
      tags:
        - GP Clientless App
      operationId: Update one GP Clientless App
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/global_protect/clientless_app":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP Clientless App information. Quick filter information can be provided.
      tags:
        - GP Clientless App
      operationId: List multiple GP Clientless App
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP Clientless App.
      tags:
        - GP Clientless App
      operationId: Create GP Clientless App
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP Clientless App information.
      tags:
        - GP Clientless App
      operationId: Update multiple GP Clientless App
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_clientless_app_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Clientless Application Group Profile        -
  "/api/v1/project/{project_id}/network/global_protect/clientless_app_group/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP Clientless App Group information.
      tags:
        - GP Clientless App Group
      operationId: List one GP Clientless App Group
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP Clientless App Group.
      tags:
        - GP Clientless App Group
      operationId: Delete one GP Clientless App Group
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP Clientless App Group.
      tags:
        - GP Clientless App Group
      operationId: Update one GP Clientless App Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/global_protect/clientless_app_group":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP Clientless App Group information. Quick filter information can be provided.
      tags:
        - GP Clientless App Group
      operationId: List multiple GP Clientless App Group
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP Clientless App Group.
      tags:
        - GP Clientless App Group
      operationId: Create GP Clientless App Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_group_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP Clientless App Group information.
      tags:
        - GP Clientless App Group
      operationId: Update multiple GP Clientless App Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_clientless_app_group_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_clientless_app_group_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  QoS                                          -
  # #  LLDP                                         -
  "/api/v1/project/{project_id}/network/lldp/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one LLDP information.
      tags:
        - LLDP
      operationId: List one LLDP
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one LLDP.
      tags:
        - LLDP
      operationId: Delete one LLDP
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one LLDP.
      tags:
        - LLDP
      operationId: Update one LLDP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/lldp":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of LLDP information. Quick filter information can be provided.
      tags:
        - LLDP
      operationId: List multiple LLDP
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one LLDP.
      tags:
        - LLDP
      operationId: Create LLDP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple LLDP information.
      tags:
        - LLDP
      operationId: Update multiple LLDP
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_lldp_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  Network Profiles                             -
  # # # GP IPSec Crypto Profile                     -
  "/api/v1/project/{project_id}/network/network_profile/gp_ipsec_crypto/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one GP IPsec Crypto Network Profile information.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: List one GP IPsec Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one GP IPsec Crypto Network Profile.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: Delete one GP IPsec Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one GP IPsec Crypto Network Profile.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: Update one GP IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_ipsec_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/gp_ipsec_crypto":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of GP IPsec Crypto Network Profile information. Quick filter information can be provided.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: List multiple GP IPsec Crypto Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one GP IPsec Crypto Network Profile.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: Create GP IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_ipsec_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple GP IPsec Crypto Network Profile information.
      tags:
        - GP IPsec Crypto Network Profile
      operationId: Update multiple GP IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/gp_ipsec_crypto_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_gp_ipsec_crypto_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # IKE Gateway Profiles                        -
  "/api/v1/project/{project_id}/network/network_profile/ike_gateway/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one IKE Gateway Network Profile information.
      tags:
        - IKE Gateway Network Profile
      operationId: List one IKE Gateway Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one IKE Gateway Network Profile.
      tags:
        - IKE Gateway Network Profile
      operationId: Delete one IKE Gateway Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one IKE Gateway Network Profile.
      tags:
        - IKE Gateway Network Profile
      operationId: Update one IKE Gateway Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_gateway_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/ike_gateway":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of IKE Gateway Network Profile information. Quick filter information can be provided.
      tags:
        - IKE Gateway Network Profile
      operationId: List multiple IKE Gateway Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one IKE Gateway Network Profile.
      tags:
        - IKE Gateway Network Profile
      operationId: Create IKE Gateway Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_gateway_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple IKE Gateway Network Profile information.
      tags:
        - IKE Gateway Network Profile
      operationId: Update multiple IKE Gateway Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_gateway_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ike_gateway_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # IPSec Crypto Profile                        -
  "/api/v1/project/{project_id}/network/network_profile/ipsec_crypto/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one IPsec Crypto Network Profile information.
      tags:
        - IPsec Crypto Network Profile
      operationId: List one IPsec Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one IPsec Crypto Network Profile.
      tags:
        - IPsec Crypto Network Profile
      operationId: Delete one IPsec Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one IPsec Crypto Network Profile.
      tags:
        - IPsec Crypto Network Profile
      operationId: Update one IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/ipsec_crypto":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of IPsec Crypto Network Profile information. Quick filter information can be provided.
      tags:
        - IPsec Crypto Network Profile
      operationId: List multiple IPsec Crypto Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one IPsec Crypto Network Profile.
      tags:
        - IPsec Crypto Network Profile
      operationId: Create IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple IPsec Crypto Network Profile information.
      tags:
        - IPsec Crypto Network Profile
      operationId: Update multiple IPsec Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ipsec_crypto_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ipsec_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # IKE Crypto Profiles                         -
  "/api/v1/project/{project_id}/network/network_profile/ike_crypto/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one IKE Crypto Network Profile information.
      tags:
        - IKE Crypto Network Profile
      operationId: List one IKE Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one IKE Crypto Network Profile.
      tags:
        - IKE Crypto Network Profile
      operationId: Delete one IKE Crypto Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one IKE Crypto Network Profile.
      tags:
        - IKE Crypto Network Profile
      operationId: Update one IKE Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/ike_crypto":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of IKE Crypto Network Profile information. Quick filter information can be provided.
      tags:
        - IKE Crypto Network Profile
      operationId: List multiple IKE Crypto Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one IKE Crypto Network Profile.
      tags:
        - IKE Crypto Network Profile
      operationId: Create IKE Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_crypto_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple IKE Crypto Network Profile information.
      tags:
        - IKE Crypto Network Profile
      operationId: Update multiple IKE Crypto Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ike_crypto_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ike_crypto_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Monitor Profile                             -
  "/api/v1/project/{project_id}/network/network_profile/monitor/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Monitor Network Profile information.
      tags:
        - Monitor Network Profile
      operationId: List one Monitor Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Monitor Network Profile.
      tags:
        - Monitor Network Profile
      operationId: Delete one Monitor Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Monitor Network Profile.
      tags:
        - Monitor Network Profile
      operationId: Update one Monitor Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/monitor_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/monitor":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Monitor Network Profile information. Quick filter information can be provided.
      tags:
        - Monitor Network Profile
      operationId: List multiple Monitor Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Monitor Network Profile.
      tags:
        - Monitor Network Profile
      operationId: Create Monitor Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/monitor_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Monitor Network Profile information.
      tags:
        - Monitor Network Profile
      operationId: Update multiple Monitor Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/monitor_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_monitor_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Interface Management Profile                -
  "/api/v1/project/{project_id}/network/network_profile/interface_management/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Interface Management Network Profile information.
      tags:
        - Interface Management Network Profile
      operationId: List one Interface Management Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Interface Management Network Profile.
      tags:
        - Interface Management Network Profile
      operationId: Delete one Interface Management Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Interface Management Network Profile.
      tags:
        - Interface Management Network Profile
      operationId: Update one Interface Management Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_management_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/interface_management":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Interface Management Network Profile information. Quick filter information can be provided.
      tags:
        - Interface Management Network Profile
      operationId: List multiple Interface Management Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Interface Management Network Profile.
      tags:
        - Interface Management Network Profile
      operationId: Create Interface Management Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_management_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Interface Management Network Profile information.
      tags:
        - Interface Management Network Profile
      operationId: Update multiple Interface Management Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/interface_management_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_interface_management_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # Zone Protection Profile                     -
  "/api/v1/project/{project_id}/network/network_profile/zone_protection/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Zone Protection Network Profile information.
      tags:
        - Zone Protection Network Profile
      operationId: List one Zone Protection Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Zone Protection Network Profile.
      tags:
        - Zone Protection Network Profile
      operationId: Delete one Zone Protection Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Zone Protection Network Profile.
      tags:
        - Zone Protection Network Profile
      operationId: Update one Zone Protection Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_protection_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/zone_protection":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Zone Protection Network Profile information. Quick filter information can be provided.
      tags:
        - Zone Protection Network Profile
      operationId: List multiple Zone Protection Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Zone Protection Network Profile.
      tags:
        - Zone Protection Network Profile
      operationId: Create Zone Protection Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_protection_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Zone Protection Network Profile information.
      tags:
        - Zone Protection Network Profile
      operationId: Update multiple Zone Protection Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/zone_protection_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_zone_protection_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # QoS Profile                                 -
  "/api/v1/project/{project_id}/network/network_profile/qos/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one QoS Profile information.
      tags:
        - QoS Profile
      operationId: List one QoS Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one QoS Profile.
      tags:
        - QoS Profile
      operationId: Delete one QoS Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one QoS Profile.
      tags:
        - QoS Profile
      operationId: Update one QoS Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/qos_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/qos":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of QoS Profile information. Quick filter information can be provided.
      tags:
        - QoS Profile
      operationId: List multiple QoS Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one QoS Profile.
      tags:
        - QoS Profile
      operationId: Create QoS Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/qos_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple QoS Profile information.
      tags:
        - QoS Profile
      operationId: Update multiple QoS Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/qos_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_qos_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # LLDP Profile                                -
  "/api/v1/project/{project_id}/network/network_profile/lldp/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one LLDP Profile information.
      tags:
        - LLDP Profile
      operationId: List one LLDP Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one LLDP Profile.
      tags:
        - LLDP Profile
      operationId: Delete one LLDP Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one LLDP Profile.
      tags:
        - LLDP Profile
      operationId: Update one LLDP Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/lldp":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of LLDP Profile information. Quick filter information can be provided.
      tags:
        - LLDP Profile
      operationId: List multiple LLDP Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one LLDP Profile.
      tags:
        - LLDP Profile
      operationId: Create LLDP Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple LLDP Profile information.
      tags:
        - LLDP Profile
      operationId: Update multiple LLDP Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/lldp_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_lldp_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # # # BFD Profile                                 -
  "/api/v1/project/{project_id}/network/network_profile/bfd/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one BFD Network Profile information.
      tags:
        - BFD Network Profile
      operationId: List one BFD Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one BFD Network Profile.
      tags:
        - BFD Network Profile
      operationId: Delete one BFD Network Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one BFD Network Profile.
      tags:
        - BFD Network Profile
      operationId: Update one BFD Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bfd_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/network_profile/bfd":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of BFD Network Profile information. Quick filter information can be provided.
      tags:
        - BFD Network Profile
      operationId: List multiple BFD Network Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one BFD Network Profile.
      tags:
        - BFD Network Profile
      operationId: Create BFD Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bfd_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple BFD Network Profile information.
      tags:
        - BFD Network Profile
      operationId: Update multiple BFD Network Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/bfd_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_bfd_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # #  SD-WAN Interface Profiles                    -
  "/api/v1/project/{project_id}/network/sdwan_interface/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SDWAN Interface Profile information.
      tags:
        - SDWAN Interface Profile
      operationId: List one SDWAN Interface Profile
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one SDWAN Interface Profile.
      tags:
        - SDWAN Interface Profile
      operationId: Delete one SDWAN Interface Profile
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one SDWAN Interface Profile.
      tags:
        - SDWAN Interface Profile
      operationId: Update one SDWAN Interface Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sdwan_interface_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/network/sdwan_interface":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SDWAN Interface Profile information. Quick filter information can be provided.
      tags:
        - SDWAN Interface Profile
      operationId: List multiple SDWAN Interface Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one SDWAN Interface Profile.
      tags:
        - SDWAN Interface Profile
      operationId: Create SDWAN Interface Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sdwan_interface_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple SDWAN Interface Profile information.
      tags:
        - SDWAN Interface Profile
      operationId: Update multiple SDWAN Interface Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/sdwan_interface_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_sdwan_profile_interface_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # Manage Device in Project                        -
  # # Server Profiles in Project                             -
  # # # SNMP Trap                                   -
  "/api/v1/project/{project_id}/device/server_profile/snmp_trap/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SNMP Trap Server Profile information.
      tags:
        - SNMP Trap Server Profile
      operationId: List one SNMP Trap Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one SNMP Trap Server Profile.
      tags:
        - SNMP Trap Server Profile
      operationId: Delete one SNMP Trap Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one SNMP Trap Server Profile.
      tags:
        - SNMP Trap Server Profile
      operationId: Update one SNMP Trap Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/snmp_trap_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/snmp_trap":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SNMP Trap Server Profile information. Quick filter information can be provided.
      tags:
        - SNMP Trap Server Profile
      operationId: List multiple SNMP Trap Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one SNMP Trap Server Profile.
      tags:
        - SNMP Trap Server Profile
      operationId: Create SNMP Trap Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/snmp_trap_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple SNMP Trap Server Profile information.
      tags:
        - SNMP Trap Server Profile
      operationId: Update multiple SNMP Trap Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/snmp_trap_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_snmp_trap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Syslog                                      -
  "/api/v1/project/{project_id}/device/server_profile/syslog/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Syslog Server Profile information.
      tags:
        - Syslog Server Profile
      operationId: List one Syslog Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Syslog Server Profile.
      tags:
        - Syslog Server Profile
      operationId: Delete one Syslog Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Syslog Server Profile.
      tags:
        - Syslog Server Profile
      operationId: Update one Syslog Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/syslog":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Syslog Server Profile information. Quick filter information can be provided.
      tags:
        - Syslog Server Profile
      operationId: List multiple Syslog Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Syslog Server Profile.
      tags:
        - Syslog Server Profile
      operationId: Create Syslog Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Syslog Server Profile information.
      tags:
        - Syslog Server Profile
      operationId: Update multiple Syslog Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/syslog_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_syslog_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Email                                       -
  "/api/v1/project/{project_id}/device/server_profile/email/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Email Server Profile information.
      tags:
        - Email Server Profile
      operationId: List one Email Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Email Server Profile.
      tags:
        - Email Server Profile
      operationId: Delete one Email Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Email Server Profile.
      tags:
        - Email Server Profile
      operationId: Update one Email Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/email":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Email Server Profile information. Quick filter information can be provided.
      tags:
        - Email Server Profile
      operationId: List multiple Email Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Email Server Profile.
      tags:
        - Email Server Profile
      operationId: Create Email Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Email Server Profile information.
      tags:
        - Email Server Profile
      operationId: Update multiple Email Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/email_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_email_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # HTTP                                        -
  "/api/v1/project/{project_id}/device/server_profile/http/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one HTTP Server Profile information.
      tags:
        - HTTP Server Profile
      operationId: List one HTTP Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one HTTP Server Profile.
      tags:
        - HTTP Server Profile
      operationId: Delete one HTTP Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one HTTP Server Profile.
      tags:
        - HTTP Server Profile
      operationId: Update one HTTP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/http":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of HTTP Server Profile information. Quick filter information can be provided.
      tags:
        - HTTP Server Profile
      operationId: List multiple HTTP Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one HTTP Server Profile.
      tags:
        - HTTP Server Profile
      operationId: Create HTTP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple HTTP Server Profile information.
      tags:
        - HTTP Server Profile
      operationId: Update multiple HTTP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/http_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_http_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Radius                                      -
  "/api/v1/project/{project_id}/device/server_profile/radius/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Radius Server Profile information.
      tags:
        - Radius Server Profile
      operationId: List one Radius Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Radius Server Profile.
      tags:
        - Radius Server Profile
      operationId: Delete one Radius Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Radius Server Profile.
      tags:
        - Radius Server Profile
      operationId: Update one Radius Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/radius_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/radius":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Radius Server Profile information. Quick filter information can be provided.
      tags:
        - Radius Server Profile
      operationId: List multiple Radius Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Radius Server Profile.
      tags:
        - Radius Server Profile
      operationId: Create Radius Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/radius_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Radius Server Profile information.
      tags:
        - Radius Server Profile
      operationId: Update multiple Radius Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/radius_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_radius_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Tacacs +                                    -
  "/api/v1/project/{project_id}/device/server_profile/tacacs/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Tacacs Server Profile information.
      tags:
        - Tacacs Server Profile
      operationId: List one Tacacs Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Tacacs Server Profile.
      tags:
        - Tacacs Server Profile
      operationId: Delete one Tacacs Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Tacacs Server Profile.
      tags:
        - Tacacs Server Profile
      operationId: Update one Tacacs Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tacacs_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/tacacs":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Tacacs Server Profile information. Quick filter information can be provided.
      tags:
        - Tacacs Server Profile
      operationId: List multiple Tacacs Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Tacacs Server Profile.
      tags:
        - Tacacs Server Profile
      operationId: Create Tacacs Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tacacs_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Tacacs Server Profile information.
      tags:
        - Tacacs Server Profile
      operationId: Update multiple Tacacs Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/tacacs_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_tacacs_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # LDAP                                        -
  "/api/v1/project/{project_id}/device/server_profile/ldap/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one LDAP Server Profile information.
      tags:
        - LDAP Server Profile
      operationId: List one LDAP Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one LDAP Server Profile.
      tags:
        - LDAP Server Profile
      operationId: Delete one LDAP Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one LDAP Server Profile.
      tags:
        - LDAP Server Profile
      operationId: Update one LDAP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ldap_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/ldap":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of LDAP Server Profile information. Quick filter information can be provided.
      tags:
        - LDAP Server Profile
      operationId: List multiple LDAP Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one LDAP Server Profile.
      tags:
        - LDAP Server Profile
      operationId: Create LDAP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ldap_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple LDAP Server Profile information.
      tags:
        - LDAP Server Profile
      operationId: Update multiple LDAP Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ldap_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_ldap_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Kerberos                                    -
  "/api/v1/project/{project_id}/device/server_profile/kerberos/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Kerberos Server Profile information.
      tags:
        - Kerberos Server Profile
      operationId: List one Kerberos Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Kerberos Server Profile.
      tags:
        - Kerberos Server Profile
      operationId: Delete one Kerberos Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Kerberos Server Profile.
      tags:
        - Kerberos Server Profile
      operationId: Update one Kerberos Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/kerberos":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Kerberos Server Profile information. Quick filter information can be provided.
      tags:
        - Kerberos Server Profile
      operationId: List multiple Kerberos Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Kerberos Server Profile.
      tags:
        - Kerberos Server Profile
      operationId: Create Kerberos Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple Kerberos Server Profile information.
      tags:
        - Kerberos Server Profile
      operationId: Update multiple Kerberos Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/kerberos_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_kerberos_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # SAML Identify Provider                      -
  "/api/v1/project/{project_id}/device/server_profile/saml/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one SAML Server Profile information.
      tags:
        - SAML Server Profile
      operationId: List one SAML Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one SAML Server Profile.
      tags:
        - SAML Server Profile
      operationId: Delete one SAML Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one SAML Server Profile.
      tags:
        - SAML Server Profile
      operationId: Update one SAML Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/saml_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/saml":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of SAML Server Profile information. Quick filter information can be provided.
      tags:
        - SAML Server Profile
      operationId: List multiple SAML Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one SAML Server Profile.
      tags:
        - SAML Server Profile
      operationId: Create SAML Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/saml_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple SAML Server Profile information.
      tags:
        - SAML Server Profile
      operationId: Update multiple SAML Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/saml_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_saml_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # # # Multi-Factor Authentication                 -
  "/api/v1/project/{project_id}/device/server_profile/mfa/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one MFA Server Profile information.
      tags:
        - MFA Server Profile
      operationId: List one MFA Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one MFA Server Profile.
      tags:
        - MFA Server Profile
      operationId: Delete one MFA Server Profile
      responses:
        "200":
          $ref: "#/components/responses/get_one_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one MFA Server Profile.
      tags:
        - MFA Server Profile
      operationId: Update one MFA Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfa_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/device/server_profile/mfa":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of MFA Server Profile information. Quick filter information can be provided.
      tags:
        - MFA Server Profile
      operationId: List multiple MFA Server Profile
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one MFA Server Profile.
      tags:
        - MFA Server Profile
      operationId: Create MFA Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfa_server_profile_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update multiple MFA Server Profile information.
      tags:
        - MFA Server Profile
      operationId: Update multiple MFA Server Profile
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/mfa_server_profile_schema_bulk_update"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_mfa_server_profile_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage Issues in Project
  "/api/v1/project/{project_id}/issue/{issue_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/issue_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one Issue information.
      tags:
        - Issue
      operationId: List one Issue
      responses:
        "200":
          $ref: "#/components/responses/get_one_issue_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Issue.
      tags:
        - Issue
      operationId: Delete one Issue
      responses:
        "200":
          $ref: "#/components/responses/get_one_issue_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Issue.
      tags:
        - Issue
      operationId: Update one Issue
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/issue_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_issue_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/issue":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Issue policies information. Quick filter information can be provided.
      tags:
        - Issue
      operationId: List multiple Issue
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/query_object_id"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_issues_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Use Tools - Merge Objects in Project
  "/api/v1/project/{project_id}/tools/merge":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Merge objects from a project source.
      tags:
        - Merge
      operationId: Merge Objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/merge/primary":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Set an object as primary.
      tags:
        - Merge
      operationId: Set Primary
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/set_primary_schema"
      responses:
        "200":
          $ref: "#/components/responses/get_primary_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    get:
      description: Get primar objects.
      tags:
        - Merge
      parameters:
        - $ref: "#/components/parameters/object_type"
      operationId: Get Primary
      responses:
        "200":
          $ref: "#/components/responses/get_primary_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/merge/primary/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    delete:
      description: Remove object from being primary.
      tags:
        - Merge
      operationId: Delete Primary

      responses:
        "200":
          $ref: "#/components/responses/get_primary_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Use Tools - Merge Configurations in Project
  "/api/v1/project/{project_id}/tools/merge_config":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Merge configs.
      tags:
        - Merge Config
      operationId: Merge Config
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/merge_config_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Use Tools - Transfer policies
  "/api/v1/project/{project_id}/tools/transfer_rules":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Transfer rules to a specific one.
      tags:
        - Transfer rules
      operationId: Transfer rules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/transfer_rules_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/success_response_without_data"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  "/api/v1/project/{project_id}/tools/transfer_rules/analysis":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Analyze which rules have some identical fields.
      tags:
        - Transfer rules
      operationId: Analize rules
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/analyze_policy_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    get:
      description: Get the result of the analysis of rules that have some identical fields.
      tags:
        - Transfer rules
      parameters:
        - $ref: "#/components/parameters/object_type"
      operationId: Get rules analysis
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/transfer_rules/analysis/rules_consolidation":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_type"
    get:
      description: Get the result of the analysis of rules that have some identical fields as Excel file.
      tags:
        - Transfer rules
      operationId: Get rules analysis excel
      responses:
        "200":
          $ref: "#/components/responses/download_excel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/transfer_rules/analysis/rules_consolidation/complete":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
      - $ref: "#/components/parameters/object_type"
    get:
      description: Get the result of the analysis of rules that have some identical fields as Excel file ordered on how they will look like merged.
      tags:
        - Transfer rules
      operationId: Get complete rules analysis excel
      responses:
        "200":
          $ref: "#/components/responses/download_excel_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # Use Tools - Search And Replace in Project
  "/api/v1/project/{project_id}/tools/replace":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/with_dependencies"
    post:
      description: Replace the selected objects by the new ones.
      tags:
        - Search and Replace
      operationId: Replace objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/replace_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/find_usage/collection/{collection_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/collection_id"
    get:
      description: Search where objects are used.
      tags:
        - Search and Replace
      operationId: Get usage of objects
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "200":
          $ref: "#/components/responses/search_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Use Tools - Clone Objects in Project
  "/api/v1/project/{project_id}/tools/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone objects from a project source.
      tags:
        - Clone
      operationId: Clone Objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object_id:
                  type: array
                  description: Array of ids of the objects to clone.
                  items:
                    type: integer
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Use Tools - Move Objects in Project
  "/api/v1/project/{project_id}/tools/move":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Move pbjects from one vsys/dg to another.
      tags:
        - Move
      operationId: Move Objects
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                object_id:
                  type: array
                  description: Array of ids of the objects to move.
                  items:
                    type: integer
                destination_vsys:
                  type: integer
                  description: Id of the vsys/dg where to move the objects.
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Use Tools - Reverse DNS
  "/api/v1/project/{project_id}/tools/reverse_dns":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Calculate the DNS for IP addresses.
      tags:
        - Reverse DNS
      operationId: Calculate Reverse DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: integer
                  description: Id of collection containing the wanted address to get the ip resolution.
                recalculate:
                  type: boolean
                  default: false
                  description: Indicates if in case the dns calculation had already been done before if it needs to be recalculated or not.
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    get:
      description: Get the DNS resolution for IP addresses.
      tags:
        - Reverse DNS
      parameters:
        - $ref: "#/components/parameters/query_collection_id"
      operationId: Get Reverse DNS
      responses:
        "200":
          $ref: "#/components/responses/reverse_dns_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/reverse_dns/rename":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Rename the addresses fron a reverse dns result.
      tags:
        - Reverse DNS
      operationId: Rename Reverse DNS
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: integer
                  description: Id of the collection containing the objects to make the rename.
                object_id:
                  type: array
                  items:
                    type: integer
                    description: Id of the addresses to calculate the reverse DNS.,
                  nullable: true
                action:
                  type: string
                  enum:
                    - reverse_dns
                    - reverse_dns_ipaddress
                    - h_ipaddress
                    - transform_to_fqdn
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_address_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  # Manage Log Connectors in Project
  "/api/v1/project/{project_id}/plugins/log_connector/{object_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    get:
      description: List one Log Connector information.
      tags:
        - Log Connector
      operationId: List one Log Connector
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete one Log Connector.
      tags:
        - Log Connector
      operationId: Delete one Log Connector
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update one Log Connector.
      tags:
        - Log Connector
      operationId: Update one Log Connector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/plugins/log_connector":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Log Connectors information.
      tags:
        - Log Connector
      operationId: List multiple Log Connectors
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Create one Log Connector.
      tags:
        - Log Connector
      operationId: Create Log Connector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update multiple Log Connectors information.
      tags:
        - Log Connector
      operationId: Update multiple Log Connector
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Use Tools - Machine Learning in Project
  "/api/v1/machine_learning/settings":
    get:
      description: Return the ML settings applied.
      tags:
        - Machine Learning
      operationId: Get ML settings
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Insert the necessary ML settings.
      tags:
        - Machine Learning
      operationId: Add ML settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put:
      description: Update the ML settings.
      tags:
        - Machine Learning
      operationId: Update ML settings
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/device/{device_id}/taffic_logs/search_logs":
    post:
      description: Search for the log files inside the path given.
      tags:
        - Machine Learning
      parameters:
        - $ref: "#/components/parameters/device_id"
      operationId: Search lof file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/machine_learning/log":
    get:
      description: List log files found in path.
      tags:
        - Machine Learning
      operationId: List log file
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  "/api/v1/device/{device_id}/taffic_logs/process":
    parameters:
      - $ref: "#/components/parameters/device_id"
    post:
      description: Process the log files.
      tags:
        - Machine Learning
      operationId: Process log fle
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage Discovery security rules for ML in Project
  "/api/v1/project/{project_id}/policy/security/discovery":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: Gets last results from the ML call.
      tags:
        - Machine Learning
      operationId: Get ML result
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Requests applying the ML feature on a selected set of rules.
      tags:
        - Machine Learning
      operationId: Request apply ML
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

    # Manage Rule Enrichment for security rules in project
  "/api/v1/project/{project_id}/policy/security/enrichment":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: Gets last results from the RE call.
      tags:
        - Machine Learning
      operationId: Get RE result
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Requests applying the RE feature on a selected set of rules.
      tags:
        - Machine Learning
      operationId: Request apply RE
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/common_xml_schema"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage import security rules into project after  ML
  "/api/v1/project/{project_id}/policy/security/machine_learning/import":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Import selected security rules into a project. Unsed in ML
      tags:
        - Machine Learning
      operationId: Import security rules in ML
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage import security rules into project after RE
  "/api/v1/project/{project_id}/policy/security/enrichment/import":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Import selected security rules into a project. Unsed in RE
      tags:
        - Machine Learning
      operationId: Import security rules in RE
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Regions discovery
  "/api/v1/project/{project_id}/object/region/step1":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: Gets last results from the region discovery.
      tags:
        - Machine Learning
      operationId: Get region discovery result
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Requests applying the region discovery.
      tags:
        - Machine Learning
      operationId: Request apply region discovery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

    put:
      description: Update the region discovery. Allow to enable and disable networks.
      tags:
        - Machine Learning
      operationId: Request update region discovery
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Regions analysis
  "/api/v1/project/{project_id}/object/region/step2":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: Gets last results from the region analysis.
      tags:
        - Machine Learning
      operationId: Get region analisys result
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    post:
      description: Requests applying the region analysis.
      tags:
        - Machine Learning
      operationId: Request apply region analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/object/region/{object_id}/analyze":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/object_id"
    put:
      description: Update network result of region analysis.
      tags:
        - Machine Learning
      operationId: Update result region analysis
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage Audit in Project
  "/api/v1/project/{project_id}/audit":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List audit information.
      parameters:
        - $ref: "#/components/parameters/query"
      tags:
        - Audit
      operationId: List audit
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete audit information.
      tags:
        - Audit
      operationId: Delete audit
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
  "/api/v1/project/{project_id}/audit/{audit_entry_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/audit_entry_id"
    delete:
      description: Delete audit entry information.
      tags:
        - Audit
      operationId: Delete audit entry
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage Debug in Project
  "/api/v1/project/{project_id}/debug":
    #Post to activate the
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List debug information.
      parameters:
        - $ref: "#/components/parameters/query"
      tags:
        - Debug
      operationId: List debug
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    delete:
      description: Delete debug information.
      tags:
        - Debug
      operationId: Delete debug
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"
    put: #should be a put or a different api call to activate, deactivate ??
      description: Updates the debug state, activates and deactivates it.
      tags:
        - Debug
      operationId: Update debug
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        "501":
          $ref: "#/components/responses/not_implemented_response"

  # Manage Filters in project
  "/api/v1/project/{project_id}/tools/filter/{filter_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/filter_id"
    get:
      description: List one Filter information.
      tags:
        - Filter
      operationId: List one Filter
      responses:
        "200":
          $ref: "#/components/responses/get_one_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one Filter.
      tags:
        - Filter
      parameters:
        - $ref: "#/components/parameters/filter_force_delete"
      operationId: Delete one Filter
      responses:
        "200":
          $ref: "#/components/responses/get_one_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one Filter.
      tags:
        - Filter
      operationId: Update one Filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/filter":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of Filter information. Quick filter information can be provided.
      tags:
        - Filter
      operationId: List multiple Filter
      parameters:
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/filter_type"
        - $ref: "#/components/parameters/filter_status"
        - $ref: "#/components/parameters/filter_warning"

      responses:
        "200":
          $ref: "#/components/responses/get_multiple_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create one Filter and executes it.
      tags:
        - Filter
      operationId: Create Filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_filter_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/filter/{filter_id}/execute":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/filter_id"
    post:
      description: Eexecute an existing filter.
      tags:
        - Filter
      operationId: Execute Filter
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/filter_execute_schema"
      responses:
        "200":
          $ref: "#/components/responses/job_id_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/filter/{filter_id}/result":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/filter_id"
    get:
      description: Return all objects that matches with the filter asked.
      tags:
        - Filter
      operationId: List Filter result
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/tools/filter/{filter_id}/history":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/filter_id"
    get:
      description: List Filter History.
      tags:
        - Filter
      operationId: List Filter History
      responses:
        "200":
          $ref: "#/components/responses/get_filter_history_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete Filter History.
      tags:
        - Filter
      operationId: Delete Filter History
      responses:
        "200":
          $ref: "#/components/responses/get_filter_history_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"

  # Manage PANObjects collections in Project
  "/api/v1/project/{project_id}/collection/{collection_id}":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/collection_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      parameters:
        - $ref: "#/components/parameters/show_content"
        - $ref: "#/components/parameters/show_scope"
      description: List one PAN objects collection information.
      tags:
        - Collection
      operationId: List one Collection
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one collection of PAN objects.
      tags:
        - Collection
      operationId: Delete one Collection
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one collection of PAN objects.
      tags:
        - Collection
      operationId: Update one Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collection_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/collection":
    parameters:
      - $ref: "#/components/parameters/project_id"
    get:
      description: List a group of PAN objects collections.
      tags:
        - Collection
      operationId: List multiple Collections
      parameters:
        - $ref: "#/components/parameters/query"
        - $ref: "#/components/parameters/trashed"
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/inherited"
        - $ref: "#/components/parameters/source"
        - $ref: "#/components/parameters/vsys"
        - $ref: "#/components/parameters/limit"
        - $ref: "#/components/parameters/show_content"
        - $ref: "#/components/parameters/show_scope"
      responses:
        "200":
          $ref: "#/components/responses/get_multiple_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    post:
      description: Create a collection of PAN objects.
      tags:
        - Collection
      operationId: Create Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collection_schema_post"
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/collection/{collection_id}/content":
    parameters:
      - $ref: "#/components/parameters/project_id"
      - $ref: "#/components/parameters/collection_id"
      - $ref: "#/components/parameters/source"
      - $ref: "#/components/parameters/vsys"
    get:
      description: List one PAN objects collection content information.
      tags:
        - Collection
      parameters:
        - $ref: "#/components/parameters/show_scope"
      operationId: List one Collection content
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    delete:
      description: Delete one collection of PAN objects.
      tags:
        - Collection
      operationId: Delete one Collection content
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
    put:
      description: Update one collection of PAN objects.
      tags:
        - Collection
      operationId: Update one Collection content
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/collection_content_schema_put"
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/collection/clone":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Clone a collection of PAN objects.
      tags:
        - Collection
      operationId: Clone Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: integer
                  description: Id of the collection to clone.
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
  "/api/v1/project/{project_id}/collection/reset":
    parameters:
      - $ref: "#/components/parameters/project_id"
    post:
      description: Reset a collection cloned of PAN objects with the values of the parent.
      tags:
        - Collection
      operationId: Reset Collection
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: integer
                  description: Id of the collection to reset.
      responses:
        "200":
          $ref: "#/components/responses/get_one_collection_response"
        "400":
          $ref: "#/components/responses/bad_request_response"
        "401":
          $ref: "#/components/responses/unauthenticated_response"
        "403":
          $ref: "#/components/responses/unauthorized_response"
        "404":
          $ref: "#/components/responses/resource_not_found"
        "500":
          $ref: "#/components/responses/unexpected_server_error_response"
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    metadata_schema:
      type: object
      properties:
        metadata:
          type: object
          properties:
            execution_info:
              type: object
              properties:
                execution_time:
                  type: number
                execution_memory:
                  type: number
                execution_disk_consumption:
                  type: number
            request_info:
              type: object
              properties:
                request_method:
                  type: string
                request_query:
                  type: string
                request_time:
                  type: string
                request_client_user:
                  type: string
                request_client_ip:
                  type: string
                request_client_agent:
                  type: string
            cacheable:
              type: boolean
    pagination_schema:
      type: object
      properties:
        pagination:
          type: object
          properties:
            total:
              type: integer
              default: 1
            current_page:
              type: integer
              default: 1
            per_page:
              type: integer
              default: 25
            total_pages:
              type: integer
              default: 1
    messages_schema:
      type: object
      properties:
        messages:
          type: array
          items:
            type: object
            properties:
              message:
                type: string
                nullable: true
              code:
                type: integer
              details:
                type: object
                properties:
                  module:
                    type: string
                    nullable: true
                  description:
                    type: string
                    nullable: true
                nullable: true
    success_schema:
      type: object
      properties:
        success:
          type: boolean
          default: true
    response_schema:
      allOf:
        - $ref: "#/components/schemas/success_schema"
        - $ref: "#/components/schemas/metadata_schema"
        - $ref: "#/components/schemas/pagination_schema"
        - $ref: "#/components/schemas/messages_schema"

    common_properties_schema:
      type: object
      properties:
        description:
          type: string
          description: Description for this object. Limited to 1024 characters

    common_panObject_properties_schema:
      allOf:
        - $ref: "#/components/schemas/common_properties_schema"
        - type: object
          properties:
            override:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                Provides information about if this object can be overriden in a different vsys/dg or not:
                 * 0 - Object cannot be overridden
                 * 1 - Object can be overridden
            checkit:
              type: integer
              description:
                "Counter that represents the amount of warnings and issue messages that this object has. No detailed info regarding the issues themselves.
                To get info regarding the issues themselves, a specific API call needs to be done.
                GET /api/v1/project/{project_id}/issue?object_id={address_object_id}"
            used:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                Used values:
                 * 0 - Object not used
                 * 1 - Object used
            declaration:
              type: string
              enum:
                - explicit
                - implicit
                - hardcoded
              description: |-
                Declares whether the object needs to be created as a PAN-OS object, or it is an Expeditionobject that is hardcoded in a Security/NAT/etc object, or it is inherited from a Panorama configuration. Not all options are available for all PAN-OS objects. For instance, services do not allow hardcoded specifications.
                * explicit - The object is being declared in the configuration and will be found in the XML file
                * implicit - The object is being consumed but is inherited from a Panorama or Fawkes configuration. Its declaration will not be found in the XML file.
                * hardcoded - It is being declared as an object in Expedition but it is actually being specificly defined within a Security Rule, NAT or any other place where a value can be hardcoded. (Only for addresses)
            invalid:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                Identifies the object as invalid, meaning that this object cannot be pushed to a device unless it is corrected.
                 * 0 - Object is correct
                 * 1 - Object is invalid

    unique_properties_schema:
      type: object
      properties:
        trashed:
          type: string
          enum:
            - trashed
            - non-trashed
            - both
          description: |-
            Informs whether this object has been sent to the trash and therefore will not be part of a final configuration or API calls to Palo Alto Networks devices.
        name:
          type: string
          description: Object's name. Should comply with the PANOS name length. In some cases, duplicated names are not allowed.
        object_type:
          type: string
          description: Identifies the type of object. In this case. For example in addresses, this is relevant for knowing the different actions that this object allows, such as placing it into an address group, but not putting it into a security zone.

    unique_panObject_properties_schema:
      allOf:
        - $ref: "#/components/schemas/unique_properties_schema"
        - type: object
          properties:
            uuid:
              type: string
              description: Will provide the PANOS uuid object when available.
              nullable: true
            source:
              type: integer
              description: Provides the id of the source configuration to be able to identify where this object belongs.
            vsys:
              type: integer
              description: >-
                Provides the id of the virtual system or device group to be able to identify where this object belongs.
            source_name:
              type: string
            vsys_name:
              type: string

    common_panObject_schema:
      allOf:
        - $ref: "#/components/schemas/unique_panObject_properties_schema"
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - $ref: "#/components/schemas/common_properties_schema"
        - type: object
          properties:
            is_primary:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                Provides information about if this object is primary or not. This is useful for merging objects:
                 * 0 - Object is not primary
                 * 1 - Object is primary

    login_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                api_key:
                  type: string
                  example: >-
                    YjZEQZFmkjPqmOxq4xlfQo7zxASRGFCHK6B8F9Lfz0xog3D7BnfWKDby7LraNtzgy6Gxn97UkZjWBcM2Q7o65bCyjHTboG8bOFREAj3WwHvoXkr5z8pXnCy2wQU2ABkp
                csrf_token:
                  type: string
                  example: MTYxMjUyOTg2OHRkWm15MWhScjY2bVB0bEg2RG1wNlNmcTBBajVwbHpm
                user_id:
                  type: integer
                  example: 1
    resource_panos_schema:
      allOf:
        - $ref: "#/components/schemas/resource_schema"
        - type: object
          properties:
            num_files:
              type: integer
              example: 1
            information:
              type: object
              properties:
                panos_version:
                  type: string
                  example: "8.1"
                dg_vsys:
                  type: array
                  items:
                    type: string
                  example:
                    - vsys1
                type:
                  type: string
                  example: firewall
                  enum:
                    - firewall
                    - panorama
              nullable: true
    resource_third_vendor_schema:
      allOf:
        - $ref: "#/components/schemas/resource_schema"
        - type: object
          properties:
            num_files:
              type: integer
              example: 1
    migration_schema:
      type: object
      properties:
        id:
          type: integer
        resource_id:
          type: array
          description: Id of the resources inside the migration.
          items:
            type: integer
        resource:
          type: array
          items:
            $ref: "#/components/schemas/resource_schema"
    migration_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                migration:
                  type: array
                  items:
                    $ref: "#/components/schemas/migration_schema"
    resource_schema:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        vendor:
          type: string
          enum:
            - paloalto
            - cp
            - cp-r80
            - ciscoasa
            - fortinet
            - checkpoint-r81
            - srx
            - screenos
            - iron-skillet
            - sidewinder
            - csv
            - stonesoft
            - xgs
            - zip
        migration_id:
          type: integer
        other:
          description: Other relevant information for resources.
          type: object

    resource_third_vendor_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/resource_third_vendor_schema"
    resource_panos_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/resource_panos_schema"
    resource_request_schema:
      type: object
      properties:
        resource:
          type: integer
          example: 1433
    get_multiple_resource_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                resource:
                  type: array
                  items:
                    $ref: "#/components/schemas/resource_schema"
    get_one_resource_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/resource_schema"
    get_migration_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/migration_schema"
    common_upload_schema:
      type: object
      properties:
        name:
          type: string
      required:
        - name
    upload_config_schema:
      allOf:
        - $ref: "#/components/schemas/common_upload_schema"
        - type: object
          properties:
            config:
              type: string
              format: binary
              description: Configuration file.
          required:
            - config
    upload_device_schema:
      type: object
      properties:
        config:
          type: string
          format: binary
          description: Configuration file.
      required:
        - config
    upload_zip_schema:
      allOf:
        - $ref: "#/components/schemas/common_upload_schema"
        - type: object
          properties:
            zip:
              type: string
              format: binary
              description: Zip file prepared for conversion.
          required:
            - zip
    upload_checkpoint_schema:
      allOf:
        - $ref: "#/components/schemas/common_upload_schema"
        - type: object
          properties:
            objects:
              type: string
              format: binary
              description: Objects file from configuration.
            rulebase:
              type: string
              format: binary
              description: Rulebase file from configuration.
            routes:
              type: array
              items:
                type: string
                format: binary
                description: Routes file from configuration.
            policy:
              type: string
              format: binary
              description: Policies file from configuration.
          required:
            - objects
            - policy
    mapping_schema:
      type: object
      properties:
        mapping:
          type: array
          description: Mapping of policy and route.
          items:
            type: object
            properties:
              policy:
                type: string
              route:
                type: string
                description: >-
                  In case of stonesoft, the route will be related with the
                  firewall.
              dynamic_routes:
                type: array
                items:
                  type: string
            required:
              - policy
              - route
          example:
            - policy: policy1
              route: route1
            - policy: policy2
              route: route2
    mapping_schema_with_resource:
      allOf:
        - $ref: "#/components/schemas/mapping_schema"
        - type: object
          properties:
            resource_id:
              type: integer
    mapping_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/mapping_schema_with_resource"
    mapping_multiple_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: "#/components/schemas/mapping_schema"
    discovery_schema:
      type: object
      properties:
        policy:
          type: array
          items:
            type: string
        route:
          type: array
          items:
            type: string
        dynamic_routes:
          type: array
          items:
            type: string
        resource_id:
          type: integer
    discovery_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/discovery_schema"
    discovery_multiple_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                discovery:
                  type: array
                  items:
                    $ref: "#/components/schemas/discovery_schema"

    #Job schemas
    job_id_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                job_id:
                  type: integer
                  example: 14345
    get_job_schema:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
          description: Description of the job.
        state:
          type: number
          description: Relation of completed tasks of the job.
        status_message:
          type: string
          description: Status of the job.
          enum:
            - completed
            - cancelled
            - started
            - pending
            - failed
        task_message:
          description: Information about the last task from the job.
          type: object
          nullable: true
        next_step:
          type: array
          items:
            type: object
            example:
              resource: 255
        total_tasks:
          type: integer
          description: Number of tasks that a job has.
        task:
          type: array
          description: Returns all tasks from a job.
          items:
            type: object
    get_job_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_job_schema"
    get_multiple_job_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                job:
                  type: array
                  items:
                    $ref: "#/components/schemas/get_job_schema"

    #Agent schemas
    get_agent_schema:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          description: Type of the agent
          enum:
            - generic
        status:
          type: string
          description: Defines if the agent is running or not.
          enum:
            - running
            - stopped
    get_agent_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_agent_schema"
    get_multiple_agent_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                agent:
                  type: array
                  items:
                    $ref: "#/components/schemas/get_agent_schema"

    #System schemas
    system_information_schema_get:
      type: object
      properties:
        item:
          type: string
        pct:
          type: integer
        used:
          type: string
    system_information_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                system_information:
                  type: array
                  items:
                    $ref: "#/components/schemas/system_information_schema_get"
    health_information_schema_get:
      type: object
      properties:
        category:
          type: string
        check:
          type: string
        code:
          type: integer
        success:
          type: boolean
        msg:
          type: string
        remediation:
          type: string
        description:
          type: string
    health_information_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                health_information:
                  type: array
                  items:
                    $ref: "#/components/schemas/health_information_schema_get"
    #Project schemas
    project_schema:
      type: object
      properties:
        name:
          type: string
          example: my_first_project
        description:
          type: string
        folder_id:
          type: integer
          example: 2
          default: 2
        tag_id:
          type: array
          items:
            type: integer
            description: Id of the tags associated with the project.
        device_id:
          type: array
          items:
            type: integer
            description: Id of the devices associated with the project.
        user_role_mapping:
          type: array
          items:
            $ref: "#/components/schemas/user_role_id_schema"
      required:
        - name
    project_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/project_schema"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    bulk_update_project_schema:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer
        add:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/user_role_id_schema"
            device_id:
              type: array
              items:
                type: integer
            tag_id:
              type: array
              items:
                type: integer
                description: Id of the tags to add to the project.
        delete:
          type: object
          properties:
            user:
              $ref: "#/components/schemas/user_role_id_schema"
            device_id:
              type: array
              items:
                type: integer
            tag_id:
              type: array
              items:
                type: integer
                description: Id of the tags associated with the project to deleted.
        name:
          type: string
          example: my_first_project
        description:
          type: string
        folder_id:
          type: integer
          example: 2
          default: 2
      required:
        - id
    get_project_schema:
      allOf:
        - $ref: "#/components/schemas/project_schema_with_id"
        - type: object
          properties:
            tag:
              type: array
              items:
                $ref: "#/components/schemas/tag_schema_with_id"
            user:
              type: array
              items:
                $ref: "#/components/schemas/user_schema_with_id"
            created_at:
              type: string
              example: "2021-01-22 14:02:35"
            updated_at:
              type: string
              example: "2021-01-22 14:02:35"
            folder:
              type: string
              example: All Projects
            device:
              type: array
              items:
                $ref: "#/components/schemas/device_schema_with_id"
            summary:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                    example: Number of failed checks
                  action:
                    type: string
                    example: "Remediation: Check remediation to be applied"
            suggestion:
              type: array
              items:
                type: object
                properties:
                  action:
                    type: string
                    example: >-
                      Verify the PanOrders agent is running to accept background
                      jobs.
                  description:
                    type: string
                    example: "PanOrders Agent is stopped. Remediation: Start the agent."
            statistic:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                    example: app_id
                  progress:
                    type: number
                    example: 0.1
    list_single_project_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_project_schema"
    list_multiple_project_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                project:
                  type: array
                  items:
                    $ref: "#/components/schemas/get_project_schema"
    create_project_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_project_schema"
    project_summary_schema:
      type: object
      properties:
        summary:
          type: array
          items:
            type: object
            properties:
              object_type:
                type: string
              vsys_name:
                type: string
              vsys_id:
                type: integer
              source_name:
                type: string
              source_id:
                type: integer
              total_count:
                type: integer
              dummy_count:
                type: integer
              unused_count:
                type: integer
              warning_count:
                type: integer
              critical_count:
                type: integer
              emergency_count:
                type: integer
              informational_count:
                type: integer
              trashed_count:
                type: integer
    project_summary_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/project_summary_schema"
    project_tag_schema:
      type: object
      properties:
        project_tag:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: demo
              predefined:
                type: string
                example: "yes"
              description:
                type: string
              id:
                type: integer
                example: 2
              color:
                type: string
                example: "#ccffcc"
    project_tag_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/project_tag_schema"
    user_role_id_schema:
      type: object
      properties:
        user_id:
          type: integer
        role:
          type: string
          enum:
            - admin
            - user
            - viewer
    user_schema:
      type: object
      properties:
        role:
          type: string
          enum:
            - admin
            - user
            - superuser
        username:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        timezone:
          type: string
          example: Europe/Amsterdam
    user_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/user_schema"
        - type: object
          properties:
            id:
              type: integer
    tag_schema:
      type: object
      properties:
        description:
          type: string
        color:
          type: string
    tag_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/tag_schema"
        - type: object
          properties:
            id:
              type: integer
    device_schema:
      type: object
      properties:
        name:
          type: string
          example: my_device
        hostname:
          type: string
          example: 10.11.12.13
        type:
          type: string
          example: pa220
          enum:
            - m100
            - m500
            - m600
            - pa200
            - pa220
            - pa500
            - pa800
            - pa3000
            - pa3200
            - pa4000
            - pa5000
            - pa5200
            - pa7000
            - vm-series
            - vm-panorama
        serial:
          type: string
          nullable: true
          example: "012235754321"
        serial_ha:
          type: array
          nullable: true
          items:
            type: string
            example: 0234803452220122
        port:
          nullable: true
          type: integer
    device_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/device_schema"
        - type: object
          properties:
            id:
              type: integer
    get_device_schema:
      allOf:
        - $ref: "#/components/schemas/device_schema_with_id"
        - type: object
          properties:
            device:
              type: string
              example: PA-220
              nullable: true
            app_version:
              type: string
              example: 8345-6420
              nullable: true
            app_release_date:
              type: string
              nullable: true
              example: "2020-11-18 06:17:11"
            treat_version:
              type: string
              example: 8345-6420
              nullable: true
            threat_release_date:
              type: string
              nullable: true
              example: "2020-11-18 06:17:11"
            updated_at:
              type: string
              example: "2020-11-25 07:58:33"
              nullable: true
            created_at:
              type: string
              example: "2020-10-28 15:37:19"
              nullable: true
            status:
              type: string
              example: completed
              nullable: true
            warnings:
              type: array
              items:
                type: string
                example: Application Database is more than 30 days old.
              nullable: true
            licences:
              type: array
              items:
                type: object
                properties:
                  feature:
                    type: string
                    example: DNS Security
                    nullable: true
                  issued:
                    type: string
                    example: "2017-05-31 00:00:00"
                    nullable: true
                  expires:
                    type: string
                    example: "2022-05-31 00:00:00"
                    nullable: true
                  expired:
                    type: string
                    example: "no"
                    nullable: true
                  base_license_name:
                    type: string
                    example: completed
                    nullable: true
                  auth_code:
                    type: string
                    nullable: true
              nullable: true
            management:
              type: string
              description: Serial number of the parent device if exists
              nullable: true
    get_single_device_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_device_schema"
    get_multiple_device_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                device:
                  type: array
                  items:
                    $ref: "#/components/schemas/get_device_schema"
    device_content_schema:
      type: object
      properties:
        available:
          type: boolean
          example: true
        date:
          type: string
          example: "November 02 2020 12:57:23"
        filename:
          type: string
          example: ConfigBackup.xml.dat
        size:
          type: string
          example: "135,92 KB"
        state:
          type: string
          example: downloaded
        type:
          type: string
          example: custom
    get_device_content_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                content:
                  type: array
                  items:
                    $ref: "#/components/schemas/device_content_schema"
    retrieve_device_key_schema:
      type: object
      properties:
        role:
          type: string
          enum:
            - all
            - personal
            - admin
            - user
            - viewer
        username:
          type: string
          example: admin
        password:
          type: string
          example: paloalto
    add_device_key_schema:
      type: object
      properties:
        key:
          type: string
        role:
          type: string
          enum:
            - all
            - personal
            - admin
            - user
            - viewer
    device_key_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                device_key:
                  type: array
                  items:
                    type: object
                    properties:
                      role:
                        type: string
                      key:
                        type: string
    delete_one_panObject_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                name:
                  type: string
                id:
                  type: integer
    delete_multiple_panObject_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                collection:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      id:
                        type: integer

    get_one_source_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/source_schema_get"
    get_multiple_source_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                source:
                  type: array
                  items:
                    $ref: "#/components/schemas/source_schema_get"
    source_schema_get:
      allOf:
        - $ref: "#/components/schemas/source_schema_post"
        - type: object
          properties:
            id:
              type: integer
            device_group:
              $ref: "#/components/schemas/multiple_member_schema"
            vsys:
              $ref: "#/components/schemas/multiple_member_schema"
            template:
              $ref: "#/components/schemas/multiple_member_schema"
            template_stack:
              $ref: "#/components/schemas/multiple_member_schema"
    source_schema_post:
      allOf:
        # - $ref: '#/components/schemas/unique_panObject_properties_schema'
        - $ref: "#/components/schemas/source_schema_min"
        - $ref: "#/components/schemas/source_relation_ids"
        - type: object
          properties:
            uuid:
              type: string
              description: Panos uuid of an specific object
              nullable: true
            name:
              type: string
            object_type:
              type: string
    source_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            is_panorama:
              type: boolean
            version:
              type: string
            config_path:
              type: string
              nullable: true
    source_relation_ids:
      type: object
      properties:
        vsys:
          type: array
          description: Array of the vsys ids related to the source.
          items:
            type: integer
        device_group:
          type: array
          description: Array of the Device_groups ids related to the source.
          items:
            type: integer
        template:
          type: array
          description: Array of the Templates ids related to the source.
          items:
            type: integer
        template_stack:
          type: array
          description: Array of the template_stack ids related to the source.
          items:
            type: integer

    get_one_vsys_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/vsys_schema_get"
    get_multiple_vsys_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                vsys:
                  type: array
                  items:
                    $ref: "#/components/schemas/vsys_schema_get"
    vsys_schema_get:
      allOf:
        - $ref: "#/components/schemas/vsys_schema_post"
        - type: object
          properties:
            id:
              type: integer
    unique_device_items_properties_schema:
      type: object
      properties:
        source:
          type: integer
          description: Source id where the object is.
        source_name:
          type: string
        uuid:
          type: string

    vsys_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - $ref: "#/components/schemas/unique_properties_schema"
        - $ref: "#/components/schemas/unique_device_items_properties_schema"

    get_one_device_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/device_group_schema_get"
    get_multiple_device_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                device_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/device_group_schema_get"
    device_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/device_group_schema_post"
        - type: object
          properties:
            source:
              type: integer
            source_name:
              type: string
            id:
              type: integer

    device_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/device_group_schema_min"

    device_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_properties_schema"
        - $ref: "#/components/schemas/unique_device_items_properties_schema"
        - type: object
          properties:
            parent_dg:
              type: integer
              description: Id of the parent device group.
            devices_serial:
              type: string
            master_device:
              type: string
            devices_xml:
              type: string
    device_group_schema_relation_ids:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - type: object
          properties:
            device_group_id:
              type: array
              description: Array of the device groups ids related to the source.
              items:
                type: integer

    get_one_template_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/template_schema_get"
    get_multiple_template_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                template:
                  type: array
                  items:
                    $ref: "#/components/schemas/template_schema_get"
    template_schema_get:
      allOf:
        - $ref: "#/components/schemas/template_schema_post"
        - type: object
          properties:
            id:
              type: integer
    template_schema_post:
      allOf:
        - $ref: "#/components/schemas/unique_device_items_properties_schema"
        - $ref: "#/components/schemas/template_schema_min"
    template_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"

    get_one_template_stack_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/template_stack_schema_get"
    get_multiple_template_stack_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                template_stack:
                  type: array
                  items:
                    $ref: "#/components/schemas/template_stack_schema_get"
    template_stack_schema_get:
      allOf:
        - $ref: "#/components/schemas/template_stack_schema_post"
        - type: object
          properties:
            id:
              type: integer
            template_object:
              $ref: "#/components/schemas/multiple_member_schema"
    template_stack_schema_post:
      allOf:
        - $ref: "#/components/schemas/unique_device_items_properties_schema"
        - $ref: "#/components/schemas/template_stack_schema_min"
        - $ref: "#/components/schemas/template_stack_relation_ids"
    template_stack_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
    template_stack_relation_ids:
      type: object
      properties:
        template:
          type: array
          description: Array of the Templates ids related to the source.
          items:
            type: integer

    member_schema:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        type:
          type: string
          nullable: true
        object_type:
          type: string
        value:
          type: string
          nullable: true
        vsys:
          type: integer
          nullable: true

    multiple_member_schema:
      type: array
      items:
        $ref: "#/components/schemas/member_schema"
      description: Provides array of member_objects that provide description on the objects being used.

    get_mixed_objects_schema:
      type: object
      properties:
        objects:
          $ref: "#/components/schemas/multiple_member_schema"
    get_mixed_objects_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/get_mixed_objects_schema"

    address_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            type:
              type: string
              enum:
                - ip-netmask
                - ip-range
                - fqdn
                - dynamic
                - ip-wildcard
              description: Information regarding the type of address object, selectable between ip-netmask, ip-wildcard, ip-range, dynamic, fqdn.
            ipaddress:
              type: string
              example: 1.2.3.4
              description: Object value containing either the IPv4, IPv6 of fqdn value.
            netmask:
              type: string
              example: 255.255.255.0
              description: Netmask value in CIDR format (for ip-netmask objects) or netmask format (for ip-wildcard objects)
            ip_type:
              type: string
              enum:
                - ipv4
                - ipv6
                - fqdn
              description: Identifies the object value type selectable between ipv4, ipv6 and fqdn.

    address_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Provides array of ids of the tag objects that this address is using..
          items:
            type: integer
    address_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/address_schema_min"
        - $ref: "#/components/schemas/address_relation_ids"
    address_schema_get:
      allOf:
        - $ref: "#/components/schemas/address_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"

            id:
              type: integer

          required:
            - id
    address_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/address_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/address_relation_ids"
            delete:
              $ref: "#/components/schemas/address_relation_ids"
          required:
            - id

    get_one_address_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/address_schema_get"
    get_multiple_address_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                address:
                  type: array
                  items:
                    $ref: "#/components/schemas/address_schema_get"

    service_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            protocol:
              type: string
              enum:
                - tcp
                - udp
                - sctp
            src_port:
              type: string
            dst_port:
              type: string
            timeout:
              type: integer
              minimum: 1
              maximum: 604800
              nullable: true
            tcp_half_closed_timeout:
              type: integer
              minimum: 1
              maximum: 604800
              default: 120
              nullable: true
            tcp_time_wait_timeout:
              type: integer
              minimum: 1
              maximum: 600
              default: 15
              nullable: true
            timeout_override:
              type: string
              default: "no"
              enum:
                - "yes"
                - "no"
    service_relations_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
    service_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/service_schema_min"
        - $ref: "#/components/schemas/service_relations_ids"
    service_schema_get:
      allOf:
        - $ref: "#/components/schemas/service_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
    service_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/service_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/service_relations_ids"
            delete:
              $ref: "#/components/schemas/service_relations_ids"
          required:
            - id
    get_one_service_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/service_schema_get"
    get_multiple_service_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                service:
                  type: array
                  items:
                    $ref: "#/components/schemas/service_schema_get"

    tag_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            color:
              type: string
              example: color1
              default: None
    tag_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/tag_schema_min"
    tag_schema_get:
      allOf:
        - $ref: "#/components/schemas/tag_schema_post"
        - $ref: "#/components/schemas/tag_schema_with_id"
    tag_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/tag_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_tag_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/tag_schema_get"
    get_multiple_tag_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                tag:
                  type: array
                  items:
                    $ref: "#/components/schemas/tag_schema_get"

    service_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
    service_group_relations_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        member:
          type: array
          description: Array of member ids related with the object.
          items:
            type: integer
    service_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/service_group_schema_min"
        - $ref: "#/components/schemas/service_group_relations_ids"
    service_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/service_group_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            member_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer

    service_group_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/service_group_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/service_group_relations_ids"
            delete:
              $ref: "#/components/schemas/service_group_relations_ids"
          required:
            - id
    get_one_service_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/service_group_schema_get"
    get_multiple_service_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                service_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/service_group_schema_get"

    user_object_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
    user_object_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/user_object_schema_min"
    user_object_schema_get:
      allOf:
        - $ref: "#/components/schemas/user_object_schema_post"
        - type: object
          properties:
            id:
              type: integer
    get_one_user_object_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/user_object_schema_get"
    get_multiple_user_object_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                user:
                  type: array
                  items:
                    $ref: "#/components/schemas/user_object_schema_get"

    address_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            filter:
              type: string
            type:
              type: string
              enum:
                - static
                - dynamic
              default: static
            expression:
              type: string
              description: Provides a boolean formula that represents members an address group will contain. Allowed operators are Exclude, Intersect, Union
    address_group_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        member:
          type: array
          description: >-
            Array of member ids related with the object. Members can be
            addresses or address groups.
          items:
            type: integer
    address_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/address_group_schema_min"
        - $ref: "#/components/schemas/address_group_relation_ids"
    address_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/address_group_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            member_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer

    address_group_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/address_group_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/address_group_relation_ids"
            delete:
              $ref: "#/components/schemas/address_group_relation_ids"
          required:
            - id
    get_one_address_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/address_group_schema_get"
    get_multiple_address_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                address_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/address_group_schema_get"

    application_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            evasive_behavior:
              type: boolean
              default: false
            consume_big_bandwidth:
              type: boolean
              default: false
            prone_to_misuse:
              type: boolean
              default: false
            able_to_transfer_file:
              type: boolean
              default: false
            tunnel_other_application:
              type: boolean
              default: false
            used_by_malware:
              type: boolean
              default: false
            has_known_vulnerability:
              type: boolean
              default: false
            pervasive_use:
              type: boolean
              default: false
            tunnel_applications:
              type: boolean
              default: false
            file_type_ident:
              type: boolean
              default: false
            virus_ident:
              type: boolean
              default: false
            data_ident:
              type: boolean
              default: false
            default_type:
              type: string
              default: None
            value:
              type: string
              nullable: true
              default: null
            icmp_type:
              type: integer
              nullable: true
            icmp_code:
              type: integer
              nullable: true
            icmp6_type:
              type: integer
              nullable: true
            icmp6_code:
              type: integer
              nullable: true
            port:
              type: array
              items:
                type: string
              nullable: true
            ip_protocol:
              type: integer
              nullable: true
            timeout:
              type: integer
              minimum: 0
              maximum: 604800
              nullable: true
            tcp_timeout:
              type: integer
              minimum: 0
              maximum: 604800
              nullable: true
            tcp_half_closed_timeout:
              type: integer
              minimum: 0
              maximum: 604800
              nullable: true
            tcp_time_wait_timeout:
              type: integer
              minimum: 0
              maximum: 600
              nullable: true
            udp_timeout:
              type: integer
              minimum: 0
              maximum: 604800
              nullable: true
            spyware_ident:
              type: integer
              nullable: true
            alg_disable_capability:
              type: string
              nullable: true
            no_appid_caching:
              type: string
              nullable: true
            signature:
              type: string
              nullable: true
            category:
              type: string
            subcategory:
              type: string
            technology:
              type: string
            risk:
              type: integer
    application_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        parent_app:
          type: array
          description: Array of parent_app id related with the object.
          items:
            type: integer
    application_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/application_schema_min"
        - $ref: "#/components/schemas/application_relation_ids"
    application_schema_get:
      allOf:
        - $ref: "#/components/schemas/application_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            parent_app_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer

    application_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/application_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/application_relation_ids"
            delete:
              $ref: "#/components/schemas/application_relation_ids"
          required:
            - id
    get_one_application_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/application_schema_get"
    get_multiple_application_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                application:
                  type: array
                  items:
                    $ref: "#/components/schemas/application_schema_get"

    application_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
    application_group_relation_ids:
      type: object
      properties:
        member:
          type: array
          description: >-
            Array of member ids related with the object. Members can be
            Applications or Application Groups or Application Filters.
          items:
            type: integer
    application_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/application_group_schema_min"
        - $ref: "#/components/schemas/application_group_relation_ids"
    application_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/application_group_schema_post"
        - type: object
          properties:
            member_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer

    application_group_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/application_group_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              type: object
              properties:
                tag_id:
                  type: array
                  items:
                    type: integer
                    description: Id of the tags to add to the object.
                member_id:
                  type: array
                  items:
                    type: integer
                    description: Id of the address or address groups to add to the object.
            delete:
              type: object
              properties:
                tag_id:
                  type: array
                  items:
                    type: integer
                    description: Id of the tags associated with the object to deleted.
                member_id:
                  type: array
                  items:
                    type: integer
                    description: Id of the address or address groups to add to the object.
          required:
            - id
    get_one_application_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/application_group_schema_get"
    get_multiple_application_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                application_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/application_group_schema_get"

    application_filter_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            evasive_behavior:
              type: boolean
              default: false
            consume_big_bandwidth:
              type: boolean
              default: false
            prone_to_misuse:
              type: boolean
              default: false
            able_to_transfer_file:
              type: boolean
              default: false
            tunnel_other_application:
              type: boolean
              default: false
            used_by_malware:
              type: boolean
              default: false
            has_known_vulnerability:
              type: boolean
              default: false
            pervasive_use:
              type: boolean
              default: false
            saas_certifications:
              type: array
              description: Array of saas certifications related with the object.
              items:
                type: string
            saas_risk:
              type: array
              description: Array of saas risks related with the object.
              items:
                type: string
            category:
              type: array
              description: Array of categories related with the object.
              items:
                type: string
            subcategory:
              type: array
              description: Array of subcategories related with the object.
              items:
                type: string
            technology:
              type: array
              description: Array of technologies related with the object.
              items:
                type: string
            risk:
              type: array
              description: Array of riske related with the object.
              items:
                type: integer
    application_filter_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer

    application_filter_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/application_filter_schema_min"
        - $ref: "#/components/schemas/application_filter_relation_ids"
    application_filter_schema_get:
      allOf:
        - $ref: "#/components/schemas/application_filter_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer

    application_filter_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/application_filter_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/application_filter_relation_ids"
            delete:
              $ref: "#/components/schemas/application_filter_relation_ids"
          required:
            - id
    get_one_application_filter_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/application_filter_schema_get"
    get_multiple_application_filter_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                application_filter:
                  type: array
                  items:
                    $ref: "#/components/schemas/application_filter_schema_get"

    application_filter_characteristics_get:
      type: object
      properties:
        name:
          type: string
    get_multiple_application_filter_characteristics:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                characteristics:
                  type: array
                  items:
                    $ref: "#/components/schemas/application_filter_characteristics_get"
    category_schema:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
    category_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/category_schema"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    get_one_category_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/category_schema_with_id"
    get_multiple_category_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                category:
                  type: array
                  items:
                    $ref: "#/components/schemas/category_schema_with_id"

    subcategory_schema:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
    subcategory_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/subcategory_schema"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    get_one_subcategory_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/subcategory_schema_with_id"
    get_multiple_subcategory_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                subcategory:
                  type: array
                  items:
                    $ref: "#/components/schemas/subcategory_schema_with_id"

    technology_schema:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
    technology_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/technology_schema"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    get_one_technology_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/technology_schema_with_id"
    get_multiple_technology_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                technology:
                  type: array
                  items:
                    $ref: "#/components/schemas/technology_schema_with_id"

    risk_schema:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
    risk_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/risk_schema"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    get_one_risk_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/risk_schema_with_id"
    get_multiple_risk_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                risk:
                  type: array
                  items:
                    $ref: "#/components/schemas/risk_schema_with_id"

    profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            type:
              type: string
              example: virus
            xml:
              type: string
              example: >-
                <entry name="spyLab">
                    <botnet-domains>
                      <lists>
                        <entry name="default-paloalto-dns">
                          <action>
                            <sinkhole/>
                          </action>
                        </entry>
                      </lists>
                      <sinkhole>
                        <ipv4-address>pan-default-ip</ipv4-address>
                        <ipv6-address>::1</ipv6-address>
                      </sinkhole>
                    </botnet-domains>
                    <rules>
                      <entry name="all">
                        <action>
                          <default/>
                        </action>
                        <severity>
                          <member>any</member>
                        </severity>
                        <threat-name>any</threat-name>
                        <category>any</category>
                        <packet-capture>single-packet</packet-capture>
                      </entry>
                    </rules>
                  </entry>
    profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/profile_schema_min"
    profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/profile_schema_get"
    get_multiple_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/profile_schema_get"

    profile_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
              example: >-
                <entry name="Optum-WEB-SST">
                <virus>                 <member>UHG-AV</member>
                </virus>               <spyware>
                <member>DNS-Block</member>
                </spyware>               <vulnerability>
                <member>UHG-IPS-IDS</member>
                </vulnerability>               <file-blocking>
                <member>Optum-WF-Upload</member>
                </file-blocking>
                <wildfire-analysis>
                <member>Optum-WF-Upload-WildFire</member>
                </wildfire-analysis>             </entry>
    profile_group_relation_ids:
      type: object
      properties:
        member:
          type: array
          items:
            type: integer
    profile_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/profile_group_schema_min"
        - $ref: "#/components/schemas/profile_group_relation_ids"
    profile_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/profile_group_schema_post"
        - type: object
          properties:
            member_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    profile_group_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/profile_group_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
            add:
              $ref: "#/components/schemas/profile_group_relation_ids"
            delete:
              $ref: "#/components/schemas/profile_group_relation_ids"
          required:
            - id
    get_profile_group_schema:
      allOf:
        - $ref: "#/components/schemas/profile_group_schema_get"
        - type: object
          properties:
            member:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  type:
                    type: string
    get_one_profile_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/profile_group_schema_get"
    get_multiple_profile_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                profile_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/profile_group_schema_get"

    external_list_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
            type:
              type: string
              example: ip
    external_list_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/external_list_schema_min"
    external_list_schema_get:
      allOf:
        - $ref: "#/components/schemas/external_list_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    external_list_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/external_list_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_external_list_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/external_list_schema_get"
    get_multiple_external_list_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                external_list:
                  type: array
                  items:
                    $ref: "#/components/schemas/external_list_schema_get"

    log_setting_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    log_setting_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/log_setting_schema_min"
    log_setting_schema_get:
      allOf:
        - $ref: "#/components/schemas/log_setting_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    log_setting_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/log_setting_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_log_setting_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/log_setting_schema_get"
    get_multiple_log_setting_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                log_setting:
                  type: array
                  items:
                    $ref: "#/components/schemas/log_setting_schema_get"

    schedule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
            type:
              type: string
    schedule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/schedule_schema_min"
    schedule_schema_get:
      allOf:
        - $ref: "#/components/schemas/schedule_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    schedule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/schedule_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_schedule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/schedule_schema_get"
    get_multiple_schedule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                schedule:
                  type: array
                  items:
                    $ref: "#/components/schemas/schedule_schema_get"

    region_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
            latitude:
              type: string
            longitude:
              type: string
            address:
              type: array
              items:
                type: string
    region_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/region_schema_min"
    region_schema_get:
      allOf:
        - $ref: "#/components/schemas/region_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    region_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/region_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_region_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/region_schema_get"
    get_multiple_region_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                region:
                  type: array
                  items:
                    $ref: "#/components/schemas/region_schema_get"

    scep_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    scep_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/scep_schema_min"
    scep_schema_get:
      allOf:
        - $ref: "#/components/schemas/scep_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    scep_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/scep_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_scep_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/scep_schema_get"
    get_multiple_scep_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                scep:
                  type: array
                  items:
                    $ref: "#/components/schemas/scep_schema_get"

    ssl_tls_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    ssl_tls_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ssl_tls_profile_schema_min"
    ssl_tls_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/ssl_tls_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    ssl_tls_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ssl_tls_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ssl_tls_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ssl_tls_profile_schema_get"
    get_multiple_ssl_tls_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ssl_tls_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/ssl_tls_profile_schema_get"

    email_scheduler_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    email_scheduler_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/email_scheduler_schema_min"
    email_scheduler_schema_get:
      allOf:
        - $ref: "#/components/schemas/email_scheduler_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    email_scheduler_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/email_scheduler_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_email_scheduler_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/email_scheduler_schema_get"
    get_multiple_email_scheduler_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                email_scheduler:
                  type: array
                  items:
                    $ref: "#/components/schemas/email_scheduler_schema_get"

    certificate_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    certificate_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/certificate_schema_min"
    certificate_schema_get:
      allOf:
        - $ref: "#/components/schemas/certificate_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    certificate_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/certificate_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_certificate_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/certificate_schema_get"
    get_multiple_certificate_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                certificate:
                  type: array
                  items:
                    $ref: "#/components/schemas/certificate_schema_get"

    #Policies schemas
    ## Security rules
    security_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            action:
              type: string
              default: allow
              enum:
                - allow
                - deny
                - reset-client
                - reset-server
                - reset-both
                - drop
            disabled:
              type: integer
              default: 0
            log_start:
              type: integer
              default: 0
            log_end:
              type: integer
              default: 1
            dsri:
              type: integer
              default: 0
            target:
              type: string
            migrate:
              type: integer
              default: 1
            counter:
              type: integer
              default: 0
            profile_type:
              type: string
              default: None
              enum:
                - profiles
                - group
                - None
            preorpost:
              type: integer
              enum:
                - 0
                - 1
                - 2
              description: |-
                * `0` - Pre rule
                 * `1` - Post rule
                * `2` - Shared

            blocked:
              type: integer
              default: 0
            rule_type:
              type: string
              default: universal
              enum:
                - universal
                - intrazone
                - interzone
            icmp_unreachable:
              type: integer
              default: 0
            target_negate:
              type: integer
              default: 0
            layer:
              type: integer
              default: 4
            qos:
              type: string
              enum:
                - ip-dscp
                - ip-precedence
                - follow-c2s-flow
                - null
              nullable: true
            qos_value:
              type: string
    security_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        category:
          type: array
          description: Array of url-category profile ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        hip_profile:
          type: array
          description: Array of hip profile ids related with the object.
          items:
            type: integer
        log_forwarding:
          type: array
          description: Array of log setting ids related with the object.
          items:
            type: integer
        profile:
          type: array
          description: Array of profile ids related with the object.
          items:
            type: integer
        schedule:
          type: array
          description: Array of schedule ids related with the object.
          items:
            type: integer
        source_user:
          type: array
          description: Array of source user ids related with the object.
          items:
            type: integer
    security_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/security_rule_schema_min"
        - $ref: "#/components/schemas/security_rule_relation_ids"
    security_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/security_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            category_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            schedule_object:
              $ref: "#/components/schemas/multiple_member_schema"
            log_forwarding_object:
              $ref: "#/components/schemas/multiple_member_schema"
            profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            hip_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_user_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    security_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/security_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/security_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/security_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_security_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/security_rule_schema_get"
    get_multiple_security_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                security_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/security_rule_schema_get"

    ## Nat rules
    nat_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            is_dat:
              type: boolean
              description: Defines if a nat rule has Destination Address Translation
              default: false
            destination_translation_type:
              type: string
              default: None
            destination_translation_port:
              type: integer
              nullable: true
            source_translation_bidirectional:
              type: boolean
              description: Defines if a nat rule is bidirectional or not
              default: false
            source_translation_type:
              type: string
              default: None
              enum:
                - None
                - dynamic-ip-and-port
                - dynamic-ip
                - static-ip
            source_translation_address_type:
              type: string
              enum:
                - translated-address
                - interface-address
            implicit:
              type: boolean
              default: false
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            nat_type:
              type: string
              default: ipv4
              enum:
                - ipv4
                - nat64
                - nptv6
            fallback_type:
              type: string
              default: None
              enum:
                - translated-address
                - interface-address
                - None
            blocked:
              type: boolean
              default: false
            dns_rewrite:
              type: boolean
              default: false
            direction:
              type: string
              nullable: true
              default: null
              enum:
                - reverse
                - forward
                - null
            translated_port:
              type: string
              nullable: true
            distribution:
              type: string
              nullable: true
              default: null
              enum:
                - round-robin
                - ip-modulo
                - ip-hash
                - lowest-latency #until version 9
                - source-ip-hash #since version 10
                - least-sessions #since version 10
                - null
    nat_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        destination_interface:
          type: array
          description: Array of destination interface ids related with the object.
          items:
            type: integer
        source_translated_address:
          type: array
          description: Array of source translated address ids related with the object.
          items:
            type: integer
        source_translated_interface:
          type: array
          description: Array of destination translated interface ids related with the object.
          items:
            type: integer
        destination_translated_address:
          type: array
          description: Array of destination translated address ids related with the object.
          items:
            type: integer
        source_address_fallback:
          type: array
          description: Array of source address fallback ids related with the object.
          items:
            type: integer
        source_interface_fallback:
          type: array
          description: Array of source interface fallback ids related with the object.
          items:
            type: integer
    nat_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/nat_rule_schema_min"
        - $ref: "#/components/schemas/nat_rule_relation_ids"
    nat_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/nat_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_translated_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_translated_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_translated_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_fallback_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_interface_fallback_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    nat_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/nat_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/nat_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/nat_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_nat_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/nat_rule_schema_get"
    get_multiple_nat_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                nat_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/nat_rule_schema_get"

    ## Application Override rules
    application_override_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            target:
              type: string
            target_negate:
              type: boolean
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            disabled:
              type: boolean
            protocool:
              type: string
              enum:
                - tcp
                - udp
            port:
              type: string
            counter:
              type: integer
              nullable: true
              default: 0
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
    application_override_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
    application_override_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/application_override_rule_schema_min"
        - $ref: "#/components/schemas/application_override_rule_relation_ids"
    application_override_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/application_override_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    application_override_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/application_override_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/application_override_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/application_override_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_application_override_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/application_override_rule_schema_get"
    get_multiple_application_override_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                application_override_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/application_override_rule_schema_get"

    ## Decryption rules
    decryption_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            profile:
              type: string
              nullable: true
            certificate:
              type: string
              nullable: true
            type:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
              enum:
                - no-decrypt
                - decrypt
                - decrypt-and-forward
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            blocked:
              type: boolean
              default: false
            counter:
              type: integer
              default: 0
            source_hip:
              type: string
              nullable: true
            destination_hip:
              type: string
              nullable: true
            log_success:
              type: boolean
              default: false
            log_fail:
              type: boolean
              default: true
    decryption_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        categpry:
          type: array
          description: Array of custom url cateogry profile ids related with the object.
          items:
            type: integer
        log_forwarding:
          type: array
          description: Array of log forwarding ids related with the object.
          items:
            type: integer
    decryption_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/decryption_rule_schema_min"
        - $ref: "#/components/schemas/decryption_rule_relation_ids"
    decryption_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/decryption_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            log_forwarding_object:
              $ref: "#/components/schemas/multiple_member_schema"
            category_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    decryption_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/decryption_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/decryption_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/decryption_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_decryption_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/decryption_rule_schema_get"
    get_multiple_decryption_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                decryption_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/decryption_rule_schema_get"

    ## Authentication rules
    authentication_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            disabled:
              type: boolean
            type:
              type: string
              nullable: true
            log_authentication_timeout:
              type: boolean
              default: false
            timeout:
              type: string
              nullable: true
              default: 60
            authentication_enforcement:
              type: string
              nullable: true
            audit_comments:
              type: string
              nullable: true
            users:
              type: string
              nullable: true
            source_hip:
              type: string
            destination_hip:
              type: string
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
    authentication_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        categpry:
          type: array
          description: Array of custom url cateogry profile ids related with the object.
          items:
            type: integer
        log_forwarding:
          type: array
          description: Array of log forwarding ids related with the object.
          items:
            type: integer
        hip_profile:
          type: array
          description: Array of hip profile ids related with the object.
          items:
            type: integer
    authentication_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/authentication_rule_schema_min"
        - $ref: "#/components/schemas/authentication_rule_relation_ids"
    authentication_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/authentication_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            log_forwarding_object:
              $ref: "#/components/schemas/multiple_member_schema"
            category_object:
              $ref: "#/components/schemas/multiple_member_schema"
            hip_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    authentication_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/authentication_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/authentication_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/authentication_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_authentication_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/authentication_rule_schema_get"
    get_multiple_authentication_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                authentication_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/authentication_rule_schema_get"

    ## Tunnel Inspection rules
    tunnel_inspection_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            type:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            inspect_options:
              type: string
              nullable: true
            monitor_options:
              type: string
              nullable: true
            security_options:
              type: string
              nullable: true
            users:
              type: string
              nullable: true
            tunnel_id:
              type: string
              nullable: true
            zone_assign:
              type: string
              nullable: true
    tunnel_inspection_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
    tunnel_inspection_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/tunnel_inspection_rule_schema_min"
        - $ref: "#/components/schemas/tunnel_inspection_rule_relation_ids"
    tunnel_inspection_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/tunnel_inspection_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    tunnel_inspection_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/tunnel_inspection_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/tunnel_inspection_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/tunnel_inspection_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_tunnel_inspection_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/tunnel_inspection_rule_schema_get"
    get_multiple_tunnel_inspection_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                tunnel_inspection_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/tunnel_inspection_rule_schema_get"

    ## QoS rules
    qos_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            users:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            blocked:
              type: boolean
              default: false
            counter:
              type: integer
              default: 0
            dscp_tos:
              type: string
              nullable: true
            codepoints:
              type: string
              nullable: true
            source_hip:
              type: string
              nullable: true
            destination_hip:
              type: string
              nullable: true
    qos_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        categpry:
          type: array
          description: Array of custom url cateogry profile ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
        schedule:
          type: array
          description: Array of schedule ids related with the object.
          items:
            type: integer
    qos_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/qos_rule_schema_min"
        - $ref: "#/components/schemas/qos_rule_relation_ids"
    qos_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/qos_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            category_object:
              $ref: "#/components/schemas/multiple_member_schema"
            schedule_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    qos_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/qos_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/qos_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/qos_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_qos_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/qos_rule_schema_get"
    get_multiple_qos_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                qos_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/qos_rule_schema_get"

    ## PBF rules
    pbf_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            from_type:
              type: string
              nullable: true
            enforce_symmetric_return:
              type: boolean
              nullable: true
              default: false
            next_hop_address_list:
              type: string
              nullable: true
            type:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
              enum:
                - forward
                - forward-to-vsys
                - discard
                - no-pbf
            forward_to_vsys:
              type: string
              description: Vsys name required if action is forward-to-vsys.
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            blocked:
              type: boolean
              default: false
            counter:
              type: integer
              default: 0
            monitor_disable_if_unreachable:
              type: boolean
              default: false
            nexthop:
              type: string
              nullable: true
            destination_hip:
              type: string
              nullable: true
            users:
              type: string
              nullable: true
            active_active_device_binding:
              type: string
              nullable: true
    pbf_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
        schedule:
          type: array
          description: Array of schedule ids related with the object.
          items:
            type: integer
        monitor_ipaddress:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        source_interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        egress_interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        monitor_profile:
          type: array
          description: Array of monitor ids related with the object.
          items:
            type: integer
    pbf_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/pbf_rule_schema_min"
        - $ref: "#/components/schemas/pbf_rule_relation_ids"
    pbf_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/pbf_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            schedule_object:
              $ref: "#/components/schemas/multiple_member_schema"
            monitor_ipaddress_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            egress_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            monitor_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    pbf_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/pbf_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/pbf_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/pbf_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_pbf_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/pbf_rule_schema_get"
    get_multiple_pbf_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                pbf_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/pbf_rule_schema_get"

    ## SDWAN rules
    sdwan_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            app_failover_for_nat_sessions:
              type: string
              default: keep-existing-link
              enum:
                - keep-existing-link
                - failover-to-better-path
            comment:
              type: string
            disabled:
              type: boolean
            users:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
    sdwan_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        application:
          type: array
          description: Array of application ids related with the object.
          items:
            type: integer
        path_quality_profile_id:
          type: array
          description: Array of path quality ids related with the object.
          items:
            type: integer
        saas_quality_profile:
          type: array
          description: Array of saas quality profile ids related with the object.
          items:
            type: integer
        error_correction_profile:
          type: array
          description: Array of error correction profile ids related with the object.
          items:
            type: integer
        traffic_distribution_profile:
          type: array
          description: Array of traffic distribution profile ids related with the object.
          items:
            type: integer
    sdwan_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/sdwan_rule_schema_min"
        - $ref: "#/components/schemas/sdwan_rule_relation_ids"
    sdwan_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/sdwan_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            application_object:
              $ref: "#/components/schemas/multiple_member_schema"
            traffic_distribution_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            error_correction_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            path_quality_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            saas_quality_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    sdwan_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/sdwan_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/sdwan_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/sdwan_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_sdwan_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/sdwan_rule_schema_get"
    get_multiple_sdwan_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                sdwan_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/sdwan_rule_schema_get"

    ## DoS rules
    dos_rule_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            position:
              type: integer
            negate_source:
              type: integer
              default: 0
            negate_destination:
              type: integer
              default: 0
            target:
              type: string
            target_negate:
              type: boolean
            disabled:
              type: boolean
            profile:
              type: string
              nullable: true
            preorpost:
              type: integer
              enum:
                - 0
                - 1
              description: |-
                * `0` - Pre rule
                * `1` - Post rule
            blocked:
              type: boolean
              default: false
            counter:
              type: integer
              default: 0
            audit_comment:
              type: string
              nullable: true
            action:
              type: string
              nullable: true
              enum:
                - deny
                - allow
                - protect
            dscp_tos:
              type: string
              default: any
            codepoints:
              type: string
              default: true
            aggregate:
              type: string
              default: true
            address:
              type: string
              default: true
            from_type:
              type: string
              default: true
            to_type:
              type: string
              default: true
            users:
              type: string
              default: true
    dos_rule_relation_ids:
      type: object
      properties:
        tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        group_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
        zone_from:
          type: array
          description: Array of zones from ids related with the object.
          items:
            type: integer
        zone_to:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        source_address:
          type: array
          description: Array of source ids related with the object.
          items:
            type: integer
        destination_address:
          type: array
          description: Array of destination ids related with the object.
          items:
            type: integer
        service:
          type: array
          description: Array of service ids related with the object.
          items:
            type: integer
        schedule:
          type: array
          description: Array of schedule ids related with the object.
          items:
            type: integer
        log_forwarding:
          type: array
          description: Array of log forwarding ids related with the object.
          items:
            type: integer
        interface_from:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        interface_to:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    dos_rule_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/dos_rule_schema_min"
        - $ref: "#/components/schemas/dos_rule_relation_ids"
    dos_rule_schema_get:
      allOf:
        - $ref: "#/components/schemas/dos_rule_schema_post"
        - type: object
          properties:
            tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            group_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            source_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            destination_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            service_object:
              $ref: "#/components/schemas/multiple_member_schema"
            log_forwarding_object:
              $ref: "#/components/schemas/multiple_member_schema"
            schedule_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface_from_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface_to_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    dos_rule_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/dos_rule_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/dos_rule_relation_ids"
            delete:
              $ref: "#/components/schemas/dos_rule_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_dos_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/dos_rule_schema_get"
    get_multiple_dos_rule_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                dos_rule:
                  type: array
                  items:
                    $ref: "#/components/schemas/dos_rule_schema_get"

    # Network Objects
    ## GP Clientless App
    gp_clientless_app_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            application_home_url:
              type: string
            application_icon:
              type: string
              nullable: true
    gp_clientless_app_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_clientless_app_schema_min"
    gp_clientless_app_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_clientless_app_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    gp_clientless_app_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_clientless_app_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_clientless_app_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_clientless_app_schema_get"
    get_multiple_gp_clientless_app_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_clientless_app:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_clientless_app_schema_get"

    ## GP Clientless App Group
    gp_clientless_app_group_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            application_home_url:
              type: string
            application_icon:
              type: string
              nullable: true
    gp_clientless_app_group_relation_ids:
      type: object
      properties:
        gp_clientless_app:
          type: array
          description: Array of GP clientless app ids related with the object.
          items:
            type: integer
    gp_clientless_app_group_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_clientless_app_group_schema_min"
        - $ref: "#/components/schemas/gp_clientless_app_group_relation_ids"
    gp_clientless_app_group_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_clientless_app_group_schema_post"
        - type: object
          properties:
            gp_clientless_app_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    gp_clientless_app_group_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_clientless_app_group_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/gp_clientless_app_group_relation_ids"
            delete:
              $ref: "#/components/schemas/gp_clientless_app_group_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_clientless_app_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_clientless_app_group_schema_get"
    get_multiple_gp_clientless_app_group_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_clientless_app_group:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_clientless_app_group_schema_get"

    ## GP Gateway
    gp_gateway_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    gp_gateway_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_gateway_schema_min"
    gp_gateway_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_gateway_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    gp_gateway_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_gateway_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_gateway_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_gateway_schema_get"
    get_multiple_gp_gateway_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_gateway:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_gateway_schema_get"

    ## GP MDM
    gp_mdm_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    gp_mdm_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_mdm_schema_min"
    gp_mdm_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_mdm_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    gp_mdm_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_mdm_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_mdm_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_mdm_schema_get"
    get_multiple_gp_mdm_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_mdm:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_mdm_schema_get"

    ## GP Portal
    gp_portal_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    gp_portal_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_portal_schema_min"
    gp_portal_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_portal_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    gp_portal_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_portal_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_portal_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_portal_schema_get"
    get_multiple_gp_portal_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_portal:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_portal_schema_get"

    ## BFD
    bfd_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            mode:
              type: string
              default: active
            min_tx_interval:
              type: integer
              default: 1000
            min_rx_interval:
              type: integer
              default: 1000
            detection_multiplier:
              type: integer
              default: 3
            hold_time:
              type: integer
              default: 0
            min_received_ttl:
              type: integer
              nullable: true
    bfd_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/bfd_profile_schema_min"
    bfd_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/bfd_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    bfd_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/bfd_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_bfd_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/bfd_profile_schema_get"
    get_multiple_bfd_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                bfd_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/bfd_profile_schema_get"

    ## IKE Crypto
    ike_crypto_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            authentication_multiple:
              type: integer
              default: 0
              minimum: 0
              maximum: 50
            lifetime_key:
              type: string
              enum:
                - seconds
                - minutes
                - hours
                - days
              default: hours
            lifetime_value:
              type: integer
              default: 8
            dh_group:
              type: array
              items:
                type: string
                enum:
                  - group1
                  - group2
                  - group5
                  - group14
                  - group19
                  - group20
            encryption:
              type: array
              items:
                type: string
                enum:
                  - des
                  - 3des
                  - aes-128-cbc
                  - aes-192-cbc
                  - aes-256-cbc
            authentication:
              type: array
              items:
                type: string
                enum:
                  - md5
                  - sha1
                  - sha256
                  - sha384
                  - sha512
    ike_crypto_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ike_crypto_schema_min"
    ike_crypto_schema_get:
      allOf:
        - $ref: "#/components/schemas/ike_crypto_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    ike_crypto_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ike_crypto_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ike_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ike_crypto_schema_get"
    get_multiple_ike_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ike_crypto:
                  type: array
                  items:
                    $ref: "#/components/schemas/ike_crypto_schema_get"

    ## IKE Gateway
    ike_gateway_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            version:
              type: string
              default: ikev1
            dpd_ikev1:
              type: integer
              default: 0
            ike_interval_ikev1:
              type: integer
              default: 5
            retry_ikev1:
              type: integer
              default: 5
            exchange_mode_ikev1:
              type: string
              default: auto
              enum:
                - auto
                - main
                - aggresive
            dpd_ikev2:
              type: integer
              default: 0
            ike_interval_ikev2:
              type: integer
              default: 5
            require_cookie_ikev2:
              type: string
            type_authentication:
              type: string
              default: pre-shared-key
              enum:
                - pre-shared-key
                - certificate
            pre_shared_key:
              type: string
            allow_id_payload_mismatch:
              type: boolean
              default: false
            local_certificate:
              type: string
            certificate_profile:
              type: string
            strict_validation_revocation:
              type: boolean
              default: false
            hash_and_url:
              type: string
            base_url:
              type: string
            nat_traversal:
              type: boolean
              default: false
            passive_mode:
              type: boolean
              default: false
            fragmentation:
              type: boolean
              default: false
            peer_ip_type:
              type: string
              default: dynamic
              enum:
                - dynamic
                - ip
                - fqdn
            local_id:
              type: string
            local_id_type:
              type: string
              enum:
                - ipaddr
                - fqdn
                - ufqdn
                - keyid
                - null
                - None
            peer_id:
              type: string
            peer_id_type:
              type: string
              enum:
                - ipaddr
                - fqdn
                - ufqdn
                - keyid
                - null
                - None
            peer_id_matching:
              type: boolean
              default: false
            address_type:
              type: string
              enum:
                - ipv4
                - ipv6
    ike_gateway_relation_ids:
      type: object
      properties:
        local_address:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        peer_address:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        ike_crypto_profile_1:
          type: array
          description: Array of IKE Crypto profile ids related with the object.
          items:
            type: integer
        ike_crypto_profile_2:
          type: array
          description: Array of IKE Crypto profile ids related with the object.
          items:
            type: integer
        interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    ike_gateway_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ike_gateway_schema_min"
        - $ref: "#/components/schemas/ike_gateway_relation_ids"
    ike_gateway_schema_get:
      allOf:
        - $ref: "#/components/schemas/ike_gateway_schema_post"
        - type: object
          properties:
            local_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            peer_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ike_crypto_profile_1_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ike_crypto_profile_2_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    ike_gateway_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ike_gateway_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/ike_gateway_relation_ids"
            delete:
              $ref: "#/components/schemas/ike_gateway_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ike_gateway_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ike_gateway_schema_get"
    get_multiple_ike_gateway_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ike_gateway:
                  type: array
                  items:
                    $ref: "#/components/schemas/ike_gateway_schema_get"

    ## Ipsec Crypto
    ipsec_crypto_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            protocol:
              type: string
              default: ESP
            lifetime_key:
              type: string
              default: hours
              enum:
                - seconds
                - minutes
                - hours
                - days
            lifetime_value:
              type: integer
              default: 1
            enable_lifesize:
              type: boolean
              default: false
            lifesize_key:
              type: string
              default: mb
              enum:
                - kb
                - mb
                - gb
                - tb
            lifesize_value:
              type: integer
            dh_group:
              type: string
              enum:
                - no-pfs
                - group1
                - group2
                - group5
                - group14
                - group19
                - group20
            encryption:
              type: array
              items:
                type: string
                enum:
                  - des
                  - 3des
                  - aes-128-cbc
                  - aes-192-cbc
                  - aes-256-cbc
                  - aes-128-ccm
                  - aes-128-gcm
                  - aes-256-gcm
                  - null
            authentication:
              type: array
              items:
                type: string
                enum:
                  - md5
                  - none
                  - sha1
                  - sha256
                  - sha384
                  - sha512
    ipsec_crypto_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ipsec_crypto_schema_min"
    ipsec_crypto_schema_get:
      allOf:
        - $ref: "#/components/schemas/ipsec_crypto_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    ipsec_crypto_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ipsec_crypto_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ipsec_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ipsec_crypto_schema_get"
    get_multiple_ipsec_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ipsec_crypto:
                  type: array
                  items:
                    $ref: "#/components/schemas/ipsec_crypto_schema_get"

    ## GP Ipsec Crypto
    gp_ipsec_crypto_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
    gp_ipsec_crypto_relation_ids:
      type: object
      properties:
        authentication:
          type: array
          description: Array of authentication ids related with the object.
          items:
            type: integer
        encryption:
          type: array
          description: Array of encryption ids related with the object.
          items:
            type: integer
    gp_ipsec_crypto_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/gp_ipsec_crypto_schema_min"
        - $ref: "#/components/schemas/gp_ipsec_crypto_relation_ids"
    gp_ipsec_crypto_schema_get:
      allOf:
        - $ref: "#/components/schemas/gp_ipsec_crypto_schema_post"
        - type: object
          properties:
            authentication_object:
              $ref: "#/components/schemas/multiple_member_schema"
            encryption_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    gp_ipsec_crypto_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/gp_ipsec_crypto_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/gp_ipsec_crypto_relation_ids"
            delete:
              $ref: "#/components/schemas/gp_ipsec_crypto_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_gp_ipsec_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/gp_ipsec_crypto_schema_get"
    get_multiple_gp_ipsec_crypto_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                gp_ipsec_crypto:
                  type: array
                  items:
                    $ref: "#/components/schemas/gp_ipsec_crypto_schema_get"

    ## Interface Management Profile
    interface_management_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            http:
              type: boolean
              default: false
            https:
              type: boolean
              default: false
            http_ocsp:
              type: boolean
              default: false
            ssh:
              type: boolean
              default: false
            snmp:
              type: boolean
              default: false
            userid_service:
              type: boolean
              default: false
            userid_syslog_listener_ssl:
              type: boolean
              default: false
            userid_syslog_listener_udp:
              type: boolean
              default: false
            ping:
              type: boolean
              default: false
            response_pages:
              type: boolean
              default: false
            telnet:
              type: boolean
              default: false
            permitted_ip:
              type: string
    interface_management_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_management_schema_min"
    interface_management_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_management_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    interface_management_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_management_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_management_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_management_schema_get"
    get_multiple_interface_management_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_management:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_management_schema_get"

    ## LLDP Profile
    lldp_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            mode:
              type: string
              default: transmit-receive
              enum:
                - transmit-receive
                - transmit-only
                - receive-only
            management_address_enabled:
              type: boolean
              default: false
            management_address:
              type: string
            port_description:
              type: boolean
              default: false
            system_name:
              type: boolean
              default: false
            system_description:
              type: boolean
              default: false
            system_capabilities:
              type: boolean
              default: false
            snmp_syslog_notification:
              type: boolean
              default: false
    lldp_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/lldp_profile_schema_min"
    lldp_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/lldp_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    lldp_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/lldp_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_lldp_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/lldp_profile_schema_get"
    get_multiple_lldp_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                lldp_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/lldp_profile_schema_get"

    ## QoS Profile
    qos_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            class:
              type: string
            class_bandwidth_type:
              type: string
            egress_max:
              type: integer
              default: 0
            egress_guaranteed:
              type: integer
              default: 0
    qos_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/qos_profile_schema_min"
    qos_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/qos_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    qos_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/qos_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_qos_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/qos_profile_schema_get"
    get_multiple_qos_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                qos_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/qos_profile_schema_get"

    ## Monitor Profile
    monitor_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            action:
              type: string
              default: wait-recover
              enum:
                - wait-recover
                - fail-over
            interval_seconds:
              type: integer
              default: 3
              minimum: 2
              maximum: 100
            threshold:
              type: integer
              default: 5
              minimum: 2
              maximum: 10
    monitor_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/monitor_profile_schema_min"
    monitor_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/monitor_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    monitor_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/monitor_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_monitor_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/monitor_profile_schema_get"
    get_multiple_monitor_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                monitor_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/monitor_profile_schema_get"

    ## Zone Protection Profile
    zone_protection_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            flood:
              type: string
            ipv6:
              type: string
            protocol_protection:
              type: string
            scan:
              type: string
            scan_white_list:
              type: string
            strip_mptcp_option:
              type: string
              default: global
            tcp_reject_non_syn:
              type: string
              default: global
            asymetric_path:
              type: string
              default: global
            discard_ip_frag:
              type: boolean
              default: false
            strict_ip_check:
              type: boolean
              default: false
            discard_icmp_frag:
              type: boolean
              default: false
            discard_icmp_large_packet:
              type: boolean
              default: false
            remove_tcp_timestamp:
              type: boolean
              default: false
            supress_icmp_timeexceeded:
              type: boolean
              default: false
            supress_icmp_needfrag:
              type: boolean
              default: false
            discard_icmp_error:
              type: boolean
              default: false
            discard_ip_spoof:
              type: boolean
              default: false
            discard_strict_source_routing:
              type: boolean
              default: false
            discard_security:
              type: boolean
              default: false
            discard_loose_source_routing:
              type: boolean
              default: false
            discard_stream_id:
              type: boolean
              default: false
            discard_timestamp:
              type: boolean
              default: false
            discard_unknown_option:
              type: boolean
              default: false
            discard_record_route:
              type: boolean
              default: false
            discard_malformed_option:
              type: boolean
              default: false
            discard_tcp_split_handshake:
              type: boolean
              default: false
            discard_overlapping_tcp_segment_mismatch:
              type: boolean
              default: false
            strip_tcp_fast_open_and_data:
              type: boolean
              default: false
            discard_icmp_ping_zero_id:
              type: boolean
              default: false
            discard_tcp_syn_with_data:
              type: boolean
              default: false
            discard_tcp_synack_with_data:
              type: boolean
              default: false
    zone_protection_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/zone_protection_profile_schema_min"
    zone_protection_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/zone_protection_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    zone_protection_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/zone_protection_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_zone_protection_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/zone_protection_profile_schema_get"
    get_multiple_zone_protection_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                zone_protection_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/zone_protection_profile_schema_get"

    ## LLDP
    lldp_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            xml:
              type: string
    lldp_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/lldp_schema_min"
    lldp_schema_get:
      allOf:
        - $ref: "#/components/schemas/lldp_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    lldp_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/lldp_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_lldp_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/lldp_schema_get"
    get_multiple_lldp_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                lldp:
                  type: array
                  items:
                    $ref: "#/components/schemas/lldp_schema_get"

    ## Ipsec Tunnel
    ipsec_tunnel_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            type:
              type: string
            address_type:
              type: string
              default: ipv4
              enum:
                - ipv4
                - ipv6
            anti_replay:
              type: boolean
              default: false
            copy_tos:
              type: boolean
              default: false
            gre_encapsulation:
              type: boolean
              default: false
            tunnel_monitor:
              type: boolean
              default: false
            external_ca:
              type: boolean
              default: false
            local_spi:
              type: string
              nullable: true
            remote_spi:
              type: string
              nullable: true
            protocol:
              type: string
              nullable: true
            key_auth:
              type: string
              nullable: true
            key_encryption:
              type: string
              nullable: true
            local_address_ip:
              type: string
              nullable: true
            peer_ip_address:
              type: string
              nullable: true
            certificate_profile:
              type: string
              nullable: true
            local_certificate:
              type: string
              nullable: true
            publish_connected_routes:
              type: string
              nullable: true
            portal_address:
              type: string
              nullable: true
            publish_routes:
              type: string
              nullable: true
            authentication:
              type: string
              enum:
                - sha1
                - sha256
                - sha384
                - sha512
                - md5
                - none
            encryption:
              type: string
              enum:
                - des
                - 3des
                - aes-128-cbc
                - aes-192-cbc
                - aes-256-cbc
                - null
              nullable: true
    ipsec_tunnel_relation_ids:
      type: object
      properties:
        destination_ip:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        local_address_ipv4:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        ipv4_address:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        tunnel_interface:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        monitor_profile:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        ike_gateway:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        ipsec_crypto_profile:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
    ipsec_tunnel_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ipsec_tunnel_schema_min"
        - $ref: "#/components/schemas/ipsec_tunnel_relation_ids"
    ipsec_tunnel_schema_get:
      allOf:
        - $ref: "#/components/schemas/ipsec_tunnel_schema_post"
        - type: object
          properties:
            destination_ip_object:
              $ref: "#/components/schemas/multiple_member_schema"
            local_address_ipv4_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ipv4_address_object:
              $ref: "#/components/schemas/multiple_member_schema"
            tunnel_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            monitor_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ike_gateway_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ipsec_crypto_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    ipsec_tunnel_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ipsec_tunnel_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/ipsec_tunnel_relation_ids"
            delete:
              $ref: "#/components/schemas/ipsec_tunnel_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ipsec_tunnel_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ipsec_tunnel_schema_get"
    get_multiple_ipsec_tunnel_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ipsec_tunnel:
                  type: array
                  items:
                    $ref: "#/components/schemas/ipsec_tunnel_schema_get"

    ## Virtual Wire
    virtual_wire_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            multicast_firewalling:
              type: boolean
              default: false
            tag_allowed:
              type: string
              description: Can be an integer from 0 to 4049 or a range like 100-200.
            link_state_pass_through:
              type: boolean
              default: true
    virtual_wire_relation_ids:
      type: object
      properties:
        interface1:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        interface2:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    virtual_wire_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/virtual_wire_schema_min"
        - $ref: "#/components/schemas/virtual_wire_relation_ids"
    virtual_wire_schema_get:
      allOf:
        - $ref: "#/components/schemas/virtual_wire_schema_post"
        - type: object
          properties:
            interface1_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface2_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    virtual_wire_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/virtual_wire_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/virtual_wire_relation_ids"
            delete:
              $ref: "#/components/schemas/virtual_wire_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_virtual_wire_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/virtual_wire_schema_get"
    get_multiple_virtual_wire_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                virtual_wire:
                  type: array
                  items:
                    $ref: "#/components/schemas/virtual_wire_schema_get"

    ## SDWAN Interface
    sdwan_interface_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            link_type:
              type: string
              default: Ethernet
              enum:
                - ADSL/DSL
                - Cablemodem
                - Ethernet
                - Fiber
                - LTE/3G/4G/5G
                - MPLS
                - Microwave/Radio
                - Satellite
                - WiFi
                - Other
            vpn_data_tunnel_support:
              type: boolean
              default: true
            maximum_download:
              type: integer
              minimum: 0
              maximum: 100000
            maximum_upload:
              type: integer
              minimum: 0
              maximum: 100000
            path_monitoring:
              type: string
              default: Aggressive
              enum:
                - Aggressive
                - Relaxed
            probe_frequency:
              type: integer
              default: 5
              minimum: 1
              maximum: 5
            probe_idle_time:
              type: integer
              default: 60
              minimum: 1
              maximum: 86400
            failback_hold_time:
              type: integer
              default: 120
              minimum: 20
              maximum: 120
            error_correction:
              type: boolean
              default: false
    sdwan_interface_profile_relation_ids:
      type: object
      properties:
        link_tag:
          type: array
          description: Array of tag ids related with the object.
          items:
            type: integer
    sdwan_interface_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/sdwan_interface_profile_schema_min"
        - $ref: "#/components/schemas/sdwan_interface_profile_relation_ids"
    sdwan_interface_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/sdwan_interface_profile_schema_post"
        - type: object
          properties:
            link_tag_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    sdwan_interface_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/sdwan_interface_profile_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/sdwan_interface_profile_relation_ids"
            delete:
              $ref: "#/components/schemas/sdwan_interface_profile_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_sdwan_profile_interface_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/sdwan_interface_profile_schema_get"
    get_multiple_sdwan_profile_interface_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                sdwan_interface:
                  type: array
                  items:
                    $ref: "#/components/schemas/sdwan_interface_profile_schema_get"

    ## Vlan
    vlan_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            l3_forwarding:
              type: boolean
              default: false
            mac:
              type: string
    vlan_relation_ids:
      type: object
      properties:
        interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        virtual_interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    vlan_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/vlan_schema_min"
        - $ref: "#/components/schemas/vlan_relation_ids"
    vlan_schema_get:
      allOf:
        - $ref: "#/components/schemas/vlan_schema_post"
        - type: object
          properties:
            interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            virtual_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    vlan_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/vlan_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/vlan_relation_ids"
            delete:
              $ref: "#/components/schemas/vlan_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_vlan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/vlan_schema_get"
    get_multiple_vlan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                vlan:
                  type: array
                  items:
                    $ref: "#/components/schemas/vlan_schema_get"

    ## Zone
    zone_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            type:
              type: string
              enum:
                - tap
                - virtual-wire
                - layer2
                - layer3
                - tunnel
            enable_user_identification:
              type: boolean
              default: false
            enable_device_identification:
              type: boolean
              default: false
            enable_packet_buffer_protection:
              type: boolean
              default: false
    zone_relation_ids:
      type: object
      properties:
        include_list_user:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        exclude_list_user:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        include_list_device:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        exclude_list_device:
          type: array
          description: Array of address ids related with the object.
          items:
            type: integer
        interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
        log_forwarding:
          type: array
          description: Array of log setting ids related with the object.
          items:
            type: integer
    zone_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/zone_schema_min"
        - $ref: "#/components/schemas/zone_relation_ids"
    zone_schema_get:
      allOf:
        - $ref: "#/components/schemas/zone_schema_post"
        - type: object
          properties:
            include_list_user_object:
              $ref: "#/components/schemas/multiple_member_schema"
            exclude_list_user_object:
              $ref: "#/components/schemas/multiple_member_schema"
            include_list_device_object:
              $ref: "#/components/schemas/multiple_member_schema"
            exclude_list_device_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            log_forwarding_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    zone_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/zone_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/zone_relation_ids"
            delete:
              $ref: "#/components/schemas/zone_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_zone_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/zone_schema_get"
    get_multiple_zone_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                zone:
                  type: array
                  items:
                    $ref: "#/components/schemas/zone_schema_get"

    ## Virtual Router
    virtual_router_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - type: object
          properties:
            admin_dist_static:
              type: integer
              default: 10
              minimum: 10
              maximum: 240
            admin_dist_static_ipv6:
              type: integer
              default: 10
              minimum: 10
              maximum: 240
            admin_dist_ospf_int:
              type: integer
              default: 10
              minimum: 30
              maximum: 240
            admin_dist_ospf_ext:
              type: integer
              default: 10
              minimum: 110
              maximum: 240
            admin_dist_ospfv3_int:
              type: integer
              default: 10
              minimum: 30
              maximum: 240
            admin_dist_ospfv3_ext:
              type: integer
              default: 10
              minimum: 110
              maximum: 240
            admin_dist_ibgp:
              type: integer
              default: 10
              minimum: 200
              maximum: 240
            admin_dist_ebgp:
              type: integer
              default: 10
              minimum: 20
              maximum: 240
            admin_dist_rip:
              type: integer
              default: 10
              minimum: 120
              maximum: 240
            protocol:
              type: string
            multicast:
              type: string
            redistribution_profile:
              type: string
            rip:
              type: string
            ospf:
              type: string
            ospfv3:
              type: string
            bgp:
              type: string
            ecmp:
              type: string
            static_route:
              type: array
              items:
                type: object
                properties:
                  destination:
                    type: string
                  next_hop_type:
                    type: string
                    default: IP Address
                    enum:
                      - IP Address
                      - Next VR
                      - FQDN
                      - Discard
                      - None
                  next_hop_value:
                    type: string
                    description: Ip of the next hop object.
                  admin_distance:
                    type: integer
                    minimum: 10
                    maximum: 240
                  metric:
                    type: integer
                    default: 10
                    minimum: 1
                    maximum: 65535
                  route_table:
                    type: string
                    default: unicast
                    enum:
                      - unicast
                      - multicast
                      - both
                      - no-install
                  enable_path_monitoring:
                    type: boolean
                    default: false
                  failure_condition:
                    type: string
                    default: any
                    enum:
                      - any
                      - all
                  preemptive_hold_time:
                    type: integer
                    default: 2
                    minimum: 0
                    maximum: 1440
                  path_monitoring:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                        enable:
                          type: boolean
                          default: false
                        source_ip:
                          type: integer
                        destination_ip:
                          type: integer
                        ping_interval:
                          type: integer
                          default: 3
                          minimum: 1
                          maximum: 60
                        ping_count:
                          type: integer
                          default: 5
                          minimum: 3
                          maximum: 10
    virtual_router_relation_ids:
      type: object
      properties:
        interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    virtual_router_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/virtual_router_schema_min"
        - $ref: "#/components/schemas/virtual_router_relation_ids"
    virtual_router_schema_get:
      allOf:
        - $ref: "#/components/schemas/virtual_router_schema_post"
        - type: object
          properties:
            interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    virtual_router_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/virtual_router_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/virtual_router_relation_ids"
            delete:
              $ref: "#/components/schemas/virtual_router_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_virtual_router_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/virtual_router_schema_get"
    get_multiple_virtual_router_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                virtual_router:
                  type: array
                  items:
                    $ref: "#/components/schemas/virtual_router_schema_get"

    ## Ethernet Interface
    interface_ethernet_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            comment:
              type: string
            link_speed:
              type: string
              default: auto
              enum:
                - auto
                - 10
                - 100
                - 1000
            link_duplex:
              type: string
              default: auto
              enum:
                - auto
                - half
                - full
            link_state:
              type: string
              default: auto
              enum:
                - auto
                - up
                - down
            lacp:
              type: string
            lacp_port_priority:
              type: integer
            type:
              type: string
              enum:
                - layer2
                - layer3
                - tap
                - ha
                - virtual-wire
                - aggregate-group
                - decrypt-mirror
                - log-card
            enable_lldp:
              type: boolean
              default: false
            enable_sdwan:
              type: boolean
              default: false
            adjust_tcp_mss:
              type: boolean
              default: false
            ipv4_mss_adjustment:
              type: integer
              default: 40
              minimum: 40
              maximum: 300
            ipv6_mss_adjustment:
              type: integer
              default: 60
              minimum: 60
              maximum: 300
            untagged_sub_interface:
              type: boolean
              default: false
            mtu:
              type: integer
              minimum: 576
              maximum: 9216
            ndp_proxy:
              type: string
            ddns:
              type: string
            nd_entries:
              type: string
            arp:
              type: string
            ipv4_type:
              type: string
              default: static
              enum:
                - static
                - pppoe
                - dhcp-client
            enable_dhcp_client:
              type: boolean
              default: true
            create_default_route:
              type: boolean
              default: true
            enable_send_hostname:
              type: boolean
              default: false
            send_hostname:
              type: string
              default: system-hostname
            default_route_metric:
              type: integer
              default: 10
              minimum: 1
              maximum: 65535
            pppoe:
              type: string
            ipv6:
              type: string
            tag:
              type: integer
              minimum: 1
              maximum: 4049
            is_aggregate_group:
              type: integer
              default: 0

    interface_ethernet_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        netflow_profile:
          type: array
          description: Array of netflow profile ids related with the object.
          items:
            type: integer
        lldp_profile:
          type: array
          description: Array of lldp profile ids related with the object.
          items:
            type: integer
        virtual_wire:
          type: array
          description: Array of virtual wire ids related with the object.
          items:
            type: integer
        vlan:
          type: array
          description: Array of vlan ids related with the object.
          items:
            type: integer
        sdwan_interface_profile:
          type: array
          description: Array of sdwan interface profile ids related with the object.
          items:
            type: integer
        unit:
          type: array
          description: Array of sub interfaces ids related with the object.
          items:
            type: integer
        ipv4_static:
          type: array
          description: Array of ipv4 address ids related with the object.
          items:
            type: integer
        mangement_profile:
          type: array
          description: Array of interface management profile id related with the object.
          items:
            type: integer
    interface_ethernet_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_ethernet_schema_min"
        - $ref: "#/components/schemas/interface_ethernet_relation_ids"
    interface_ethernet_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_ethernet_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            netflow_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            virtual_wire_object:
              $ref: "#/components/schemas/multiple_member_schema"
            lldp_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            vlan_object:
              $ref: "#/components/schemas/multiple_member_schema"
            sdwan_interface_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            unit_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ipv4_static_object:
              $ref: "#/components/schemas/multiple_member_schema"
            management_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    interface_ethernet_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_ethernet_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/interface_ethernet_relation_ids"
            delete:
              $ref: "#/components/schemas/interface_ethernet_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_ethernet_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_ethernet_schema_get"
    get_multiple_interface_ethernet_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_ethernet:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_ethernet_schema_get"

    sub_interface_schema_min:
      type: object
      properties:
        name_id:
          type: integer
          minimum: 1
          maximum: 9999
          description: The name of a sub interface is the mane of the parent interface adding the name_id at the end
        comment:
          type: string
        tag:
          type: integer
          maximum: 4049
          minimum: 1
        ipv4_type:
          type: string
          default: static
          enum:
            - static
            - dhcp-client
        ipv4_static:
          type: string
        enable_dhcp_client:
          type: boolean
          default: true
        create_default_route:
          type: boolean
          default: true
        enable_send_hostname:
          type: boolean
          default: false
        send_hostname:
          type: string
          default: system-hostname
        default_route_metric:
          type: integer
          default: 10
          minimum: 1
          maximum: 65535
        ipv6:
          type: string
        adjust_tcp_mss:
          type: boolean
          default: false
        ipv4_mss_adjustment:
          type: integer
          default: 40
          minimum: 40
          maximum: 300
        ipv6_mss_adjustment:
          type: integer
          default: 60
          minimum: 60
          maximum: 300
        mtu:
          type: integer
          minimum: 576
          maximum: 9216
        ndp_proxy:
          type: string
        ddns:
          type: string
        nd_entries:
          type: string
        arp:
          type: string
        ip_classifier:
          type: string
    sub_interface_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        netflow_profile:
          type: array
          description: Array of netflow profile ids related with the object.
          items:
            type: integer
        virtual_wire:
          type: array
          description: Array of virtual wire ids related with the object.
          items:
            type: integer
        vlan:
          type: array
          description: Array of vlan ids related with the object.
          items:
            type: integer
        ip_address:
          type: array
          description: Array of static ipv4 addresses ids related with the object.
          items:
            type: integer
        management_profile:
          type: array
          description: Array of interface management profile ids related with the object.
          items:
            type: integer
        parent_interface:
          type: array
          description: Id of the parent interface.
          items:
            type: integer
    sub_interface_schema_post:
      allOf:
        - $ref: "#/components/schemas/sub_interface_schema_min"
        - $ref: "#/components/schemas/sub_interface_relation_ids"
    sub_interface_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_ethernet_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            netflow_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            virtual_wire_object:
              $ref: "#/components/schemas/multiple_member_schema"
            vlan_object:
              $ref: "#/components/schemas/multiple_member_schema"
            parent_interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
            object_type:
              type: string
          required:
            - id
    get_one_sub_interface_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/sub_interface_schema_get"
    get_multiple_sub_interface_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                sub_interface:
                  type: array
                  items:
                    $ref: "#/components/schemas/sub_interface_schema_get"

    ## VLAN Interface
    interface_vlan_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            adjust_tcp_mss:
              type: boolean
              default: false
            ipv4_mss_adjustment:
              type: integer
              default: 40
              minimum: 40
              maximum: 300
            ipv6_mss_adjustment:
              type: integer
              default: 60
              minimum: 60
              maximum: 300
            mtu:
              type: integer
              minimum: 576
              maximum: 9216
            ndp_proxy:
              type: string
            ddns:
              type: string
            nd_entries:
              type: string
            arp:
              type: string
            ipv4_type:
              type: string
              default: static
              enum:
                - static
                - dhcp-client
            enable_dhcp_client:
              type: boolean
              default: true
            create_default_route:
              type: boolean
              default: true
            enable_send_hostname:
              type: boolean
              default: false
            send_hostname:
              type: string
              default: system-hostname
            default_route_metric:
              type: integer
              default: 10
              minimum: 1
              maximum: 65535
            ipv6:
              type: string

            enable_user_identification:
              type: boolean
              default: false
            enable_device_identification:
              type: boolean
              default: false
            enable_packet_buffer_protection:
              type: boolean
              default: false
    interface_vlan_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        netflow_profile:
          type: array
          description: Array of netflow profile ids related with the object.
          items:
            type: integer
        unit:
          type: array
          description: Array of sub interfaces ids related with the object.
          items:
            type: integer
        ipv4_static:
          type: array
          description: Array of ipv4 address ids related with the object.
          items:
            type: integer
        management_profile:
          type: array
          description: Array of management profile id related with the object.
          items:
            type: integer
    interface_vlan_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_vlan_schema_min"
        - $ref: "#/components/schemas/interface_vlan_relation_ids"
    interface_vlan_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_vlan_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            netflow_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            unit_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ipv4_static_object:
              $ref: "#/components/schemas/multiple_member_schema"
            management_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    interface_vlan_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_vlan_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/interface_vlan_relation_ids"
            delete:
              $ref: "#/components/schemas/interface_vlan_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_vlan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_vlan_schema_get"
    get_multiple_interface_vlan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_vlan:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_vlan_schema_get"

    ## Loopback Interface
    interface_loopback_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            comment:
              type: string
            adjust_tcp_mss:
              type: boolean
              default: false
            ipv4_mss_adjustment:
              type: integer
              default: 40
              minimum: 40
              maximum: 300
            ipv6_mss_adjustment:
              type: integer
              default: 60
              minimum: 60
              maximum: 300
            mtu:
              type: integer
              minimum: 576
              maximum: 1500
            management_profile:
              type: string
            ipv6:
              type: string
            ipv4:
              type: string
    interface_loopback_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        netflow_profile:
          type: array
          description: Array of netflow profile ids related with the object.
          items:
            type: integer
        unit:
          type: array
          description: Array of sub interfaces ids related with the object.
          items:
            type: integer
    interface_loopback_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_loopback_schema_min"
        - $ref: "#/components/schemas/interface_loopback_relation_ids"
    interface_loopback_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_loopback_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            netflow_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            unit_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    interface_loopback_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_loopback_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/interface_loopback_relation_ids"
            delete:
              $ref: "#/components/schemas/interface_loopback_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_loopback_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_loopback_schema_get"
    get_multiple_interface_loopback_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_loopback:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_loopback_schema_get"

    ## Tunnel Interface
    interface_tunnel_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            comment:
              type: string
            mtu:
              type: integer
              minimum: 576
              maximum: 1500
            management_profile:
              type: string
            ipv6:
              type: string
    interface_tunnel_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        netflow_profile:
          type: array
          description: Array of netflow profile ids related with the object.
          items:
            type: integer
        unit:
          type: array
          description: Array of sub interfaces ids related with the object.
          items:
            type: integer
        ipv4:
          type: array
          description: Array of ipv4 addresses ids related with the object.
          items:
            type: integer
    interface_tunnel_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_tunnel_schema_min"
        - $ref: "#/components/schemas/interface_tunnel_relation_ids"
    interface_tunnel_schema_min_get:
      allOf:
        - $ref: "#/components/schemas/interface_tunnel_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            netflow_profile_object:
              $ref: "#/components/schemas/multiple_member_schema"
            unit_object:
              $ref: "#/components/schemas/multiple_member_schema"
            ipv4_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    interface_tunnel_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_tunnel_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/interface_tunnel_relation_ids"
            delete:
              $ref: "#/components/schemas/interface_tunnel_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_tunnel_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_tunnel_schema_min_get"
    get_multiple_interface_tunnel_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_tunnel:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_tunnel_schema_min_get"

    ## SD-WAN Interface
    interface_sdwan_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            comment:
              type: string
    interface_sdwan_relation_ids:
      type: object
      properties:
        virtual_router:
          type: array
          description: Array of virtual router ids related with the object.
          items:
            type: integer
        zone:
          type: array
          description: Array of zone ids related with the object.
          items:
            type: integer
        interface:
          type: array
          description: Array of interface ids related with the object.
          items:
            type: integer
    interface_sdwan_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/interface_sdwan_schema_min"
        - $ref: "#/components/schemas/interface_sdwan_relation_ids"
    interface_sdwan_schema_get:
      allOf:
        - $ref: "#/components/schemas/interface_sdwan_schema_post"
        - type: object
          properties:
            virtual_router_object:
              $ref: "#/components/schemas/multiple_member_schema"
            zone_object:
              $ref: "#/components/schemas/multiple_member_schema"
            interface_object:
              $ref: "#/components/schemas/multiple_member_schema"
            id:
              type: integer
          required:
            - id
    interface_sdwan_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/interface_sdwan_schema_min"
        - type: object
          properties:
            add:
              $ref: "#/components/schemas/interface_sdwan_relation_ids"
            delete:
              $ref: "#/components/schemas/interface_sdwan_relation_ids"
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_interface_sdwan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/interface_sdwan_schema_get"
    get_multiple_interface_sdwan_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                interface_sdwan:
                  type: array
                  items:
                    $ref: "#/components/schemas/interface_sdwan_schema_get"

    # Server Profiles
    ## Email
    email_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            servers:
              type: string
            custom:
              type: string
            escaping:
              type: boolean
              default: false
            escaped_characters:
              type: string
            escaped_character:
              type: string
    email_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/email_server_profile_schema_min"
    email_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/email_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    email_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/email_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_email_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/email_server_profile_schema_get"
    get_multiple_email_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                email_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/email_server_profile_schema_get"

    ## Http
    http_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            servers:
              type: string
            tag_registration:
              type: boolean
              default: false
            payload_format:
              type: string
    http_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/http_server_profile_schema_min"
    http_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/http_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    http_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/http_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_http_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/http_server_profile_schema_get"
    get_multiple_http_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                http_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/http_server_profile_schema_get"

    ## Kerberos
    kerberos_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            servers:
              type: string
            admin_use_only:
              type: boolean
              default: false
    kerberos_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/kerberos_server_profile_schema_min"
    kerberos_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/kerberos_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    kerberos_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/kerberos_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_kerberos_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/kerberos_server_profile_schema_get"
    get_multiple_kerberos_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                kerberos_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/kerberos_server_profile_schema_get"
    ## LDAP
    ldap_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            servers:
              type: string
            admin_use_only:
              type: boolean
              default: false
            type:
              type: string
            base_dn:
              type: string
            bind_dn:
              type: string
            password:
              type: string
            bind_timeout:
              type: integer
              default: 30
            search_timeout:
              type: integer
              default: 30
            retry_interval:
              type: integer
              default: 60
            require_secure_connection:
              type: integer
              default: true
            verify_server_certificate:
              type: boolean
              default: false
    ldap_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/ldap_server_profile_schema_min"
    ldap_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/ldap_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    ldap_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/ldap_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_ldap_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/ldap_server_profile_schema_get"
    get_multiple_ldap_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                ldap_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/ldap_server_profile_schema_get"
    ## MFA
    mfa_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            certificate_profile:
              type: string
            mfa_vendor:
              type: string
            api_host:
              type: string
            base_uri:
              type: string
            client_key:
              type: string
            access_id:
              type: string
            assurance_policy:
              type: string
            timeout:
              type: string
            integration_key:
              type: string
            secret_key:
              type: string
            token:
              type: string
            organization:
              type: string
            base_64_key:
              type: string
            pingID_client_organization_id:
              type: string
    mfa_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/mfa_server_profile_schema_min"
    mfa_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/mfa_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    mfa_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/mfa_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_mfa_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/mfa_server_profile_schema_get"
    get_multiple_mfa_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                mfa_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/mfa_server_profile_schema_get"
    ## Netflow
    netflow_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            minutes:
              type: integer
            packets:
              type: integer
            active_timeout:
              type: integer
            panos_field_types:
              type: integer
            servers:
              type: string
    netflow_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/netflow_server_profile_schema_min"
    netflow_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/netflow_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    netflow_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/netflow_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_netflow_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/netflow_server_profile_schema_get"
    get_multiple_netflow_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                netflow_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/netflow_server_profile_schema_get"
    ## Radius
    radius_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            admin_use_only:
              type: boolean
              default: false
            timeout:
              type: integer
              default: 3
            retries:
              type: integer
              default: 3
            authentication_protocol:
              type: string
            allow_change_pwd:
              type: boolean
              default: false
            outer_identity_anonymous:
              type: boolean
              default: true
            certificate_profile:
              type: string
            servers:
              type: string
    radius_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/radius_server_profile_schema_min"
    radius_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/radius_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    radius_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/radius_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_radius_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/radius_server_profile_schema_get"
    get_multiple_radius_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                radius_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/radius_server_profile_schema_get"
    ## SAML
    saml_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            admin_use_only:
              type: boolean
              default: false
            provider_id:
              type: string
            provider_certificate:
              type: string
            provider_sso_url:
              type: string
            provider_slo_url:
              type: string
            sso_request_to_idp:
              type: string
              default: post
              enum:
                - post
                - redirect
            slo_request_to_idp:
              type: string
              default: post
              enum:
                - post
                - redirect
            validate_provider_certificate:
              type: boolean
              default: true
            sign_message_to_idp:
              type: boolean
              default: true
            max_clock_skew:
              type: integer
              default: 60
    saml_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/saml_server_profile_schema_min"
    saml_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/saml_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    saml_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/saml_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_saml_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/saml_server_profile_schema_get"
    get_multiple_saml_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                saml_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/saml_server_profile_schema_get"
    ## SNMP Trap
    snmp_trap_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            version:
              type: string
            servers:
              type: string
    snmp_trap_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/snmp_trap_server_profile_schema_min"
    snmp_trap_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/snmp_trap_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    snmp_trap_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/snmp_trap_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_snmp_trap_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/snmp_trap_server_profile_schema_get"
    get_multiple_snmp_trap_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                snmp_trap_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/snmp_trap_server_profile_schema_get"
    ## Syslog
    syslog_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            servers:
              type: string
            custom:
              type: string
            escaping:
              type: integer
              default: 0
            escaped_characters:
              type: string
            escaped_character:
              type: string
    syslog_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/syslog_server_profile_schema_min"
    syslog_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/syslog_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    syslog_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/syslog_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_syslog_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/syslog_server_profile_schema_get"
    get_multiple_syslog_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                syslog_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/syslog_server_profile_schema_get"
    ## Tacacs+
    tacacs_server_profile_schema_min:
      allOf:
        - $ref: "#/components/schemas/common_panObject_properties_schema"
        - type: object
          properties:
            timeout:
              type: integer
              default: 3
            admin_use_only:
              type: boolean
              default: false
            auth_single_connection:
              type: boolean
              default: false
            servers:
              type: string
            authentication_protocol:
              type: string
              default: chap
              enum:
                - chap
                - pap
    tacacs_server_profile_schema_post:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - $ref: "#/components/schemas/tacacs_server_profile_schema_min"
    tacacs_server_profile_schema_get:
      allOf:
        - $ref: "#/components/schemas/tacacs_server_profile_schema_post"
        - type: object
          properties:
            id:
              type: integer
          required:
            - id
    tacacs_server_profile_schema_bulk_update:
      allOf:
        - $ref: "#/components/schemas/tacacs_server_profile_schema_min"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_tacacs_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/tacacs_server_profile_schema_get"
    get_multiple_tacacs_server_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                tacacs_server_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/tacacs_server_profile_schema_get"

    common_xml_schema:
      allOf:
        - $ref: "#/components/schemas/common_panObject_schema"
        - type: object
          properties:
            xml:
              type: string
    common_xml_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/common_xml_schema"
        - type: object
          properties:
            id:
              type: integer
    bulk_common_xml_schema_with_id:
      allOf:
        - $ref: "#/components/schemas/common_xml_schema"
        - type: object
          properties:
            id:
              type: array
              items:
                type: integer
          required:
            - id
    get_one_error_correction_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/common_xml_schema_with_id"
    get_multiple_error_correction_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                error_correction_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/common_xml_schema_with_id"
    get_one_path_quality_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/common_xml_schema_with_id"
    get_multiple_path_quality_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                path_quality_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/common_xml_schema_with_id"
    get_one_saas_quality_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/common_xml_schema_with_id"
    get_multiple_saas_quality_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                saas_quality_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/common_xml_schema_with_id"
    get_one_traffic_distribution_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/common_xml_schema_with_id"
    get_multiple_traffic_distribution_profile_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                traffic_distribution_profile:
                  type: array
                  items:
                    $ref: "#/components/schemas/common_xml_schema_with_id"

    move_rules_schema:
      type: object
      properties:
        where:
          description: Defines in which position move the rule.
          type: string
          enum:
            - top
            - bottom
            - after
            - before
        destination:
          type: integer
          description: Id of the target rule where to move before or after. Required if `where` value is `after` or `before`.
    clone_rules_schema:
      type: object
      properties:
        ids:
          type: array
          items:
            type: integer
        position:
          type: string
          enum:
            - above
            - below
    # Filters
    filter_schema_post:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        filter:
          type: string
    filter_schema_get:
      allOf:
        - $ref: "#/components/schemas/filter_schema_post"
        - type: object
          properties:
            id:
              type: integer
            status:
              type: string
              enum:
                - pending
                - running
                - executed
            type:
              type: string
              enum:
                - single
                - combined
                - operation
            warnings:
              type: boolean
              description: 0 - there is not warnings, 1 - there are warnings fir this filter.
            created_at:
              type: string
            updated_at:
              type: string
            matches:
              type: integer
              description: Number of results that has the filter.
            last_history_entry:
              $ref: "#/components/schemas/filter_history_schema"
    filter_history_schema:
      type: object
      properties:
        filter_id:
          type: integer
        description:
          type: string
        updated_at:
          type: string
    get_one_filter_schema_response:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/filter_schema_get"
    get_multiple_filter_schema_response:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                filter:
                  type: array
                  items:
                    $ref: "#/components/schemas/filter_schema_get"
    filter_execute_schema:
      type: object
      properties:
        source_id:
          type: integer
          description: Id of the source where to execute the filter.

    get_filter_history_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                filter_history:
                  type: array
                  items:
                    $ref: "#/components/schemas/filter_history_schema"

    # Merge Objects schemas
    set_primary_schema:
      type: object
      properties:
        id:
          type: array
          items:
            type: integer

    get_primary_schema:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        object_type:
          type: string
    get_primary_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                primary:
                  type: array
                  items:
                    $ref: "#/components/schemas/get_primary_schema"

    #Merge configs schemas
    merge_config_schema_post:
      type: object
      properties:
        origin_source:
          type: integer
          description: Id of the origin source.
        destination_source:
          type: integer
          description: Id of the destination source.
        params:
          type: array
          items:
            type: object
            properties:
              object_id:
                type: array
                items:
                  type: integer
              object_types:
                type: array
                items:
                  type: string
              origin:
                type: integer
                description: Id of the origin vsys, dg, templace or template stack.
              destination:
                type: integer
                description: Id of the destination vsys, dg, templace or template stack.

    #Transfer policies
    analyze_policy_schema_post:
      type: object
      properties:
        source:
          type: integer
        vsys:
          type: integer
          description: if no vsys sent, will make the analysis across all vsyses/dgs in the source
          nullable: true
        identical_fields:
          type: array
          items:
            type: string
            enum:
              - source_address
              - destination_address
              - zone_from
              - zone_to
              - application
              - target
              - source_user
              - action
              - name
              - port
              - protocol
              - service
        object_type:
          type: string
          enum:
            - security_rule
            - nat_rule
            - app_override_rule
    transfer_rules_schema_post:
      type: object
      properties:
        collection_id:
          type: array
          items:
            type: integer
          description: If not sent, or sent as empty array, will make the transfer of all collections containing policies to transfer.
        object_type:
          type: string
          enum:
            - security_rule
            - nat_rule
            - app_override_rule

    #Collections
    collection_schema_post:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    collection_schema_get:
      allOf:
        - $ref: "#/components/schemas/collection_schema_post"
        - type: object
          properties:
            id:
              type: integer
            editable:
              type: boolean
            parent_id:
              type: integer
            filter_id:
              type: integer
            content:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  id:
                    type: integer
                  object_type:
                    type: string
                  source:
                    type: integer
                  source_name:
                    type: string
                  vsys:
                    type: integer
                  vsys_name:
                    type: string
                  scope:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          nullable: true
                        relation_type:
                          type: string
                          nullable: true
                        object_type:
                          type: string
                          nullable: true
                        object_id:
                          type: integer
                          nullable: true
    collection_content_schema_put:
      allOf:
        - $ref: "#/components/schemas/collection_schema_post"
        - type: object
          properties:
            add:
              type: array
              items:
                type: integer
            delete:
              type: array
              items:
                type: integer
            add_scope:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: array
                    items:
                      type: integer
                    description: Array of objects ids. If no id property provided the scope will be added to all objects inside the collection.
                  object_type:
                    type: string
                  scope:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Id of the scope.
                        relation_type:
                          type: string
                          description: Where is the the object used.
                          example: source_address
                        object_type:
                          type: string
                          description: In which object type is used.
                          example: security_rule
                        object_id:
                          type: integer
                          description: In which specific object is used.
                          example: 1234
            delete_scope:
              type: array
              items:
                type: integer
                description: Id of the scope to delete.
    get_one_collection_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/collection_schema_get"
    get_multiple_collection_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                collection:
                  type: array
                  items:
                    $ref: "#/components/schemas/collection_schema_get"

    search_schema:
      type: object
      properties:
        id:
          type: integer
        object_type:
          type: string
        name:
          type: string
        found_in:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
              name:
                type: string
              object_type:
                type: string
              vsys:
                type: string
              relation:
                type: string
                description: specifies how is related to  the object.
                example: source_address
    search_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                object:
                  type: array
                  items:
                    $ref: "#/components/schemas/search_schema"
    replace_schema:
      type: object
      properties:
        collection_id:
          type: integer
          description: Id of the collection to be replaced.
        replace_by:
          type: integer
          description: Id of the final object that will replace the the ones selected.

    reverse_dns_schema_get:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        ipaddress:
          type: string
        reverse_dns:
          type: string
        source:
          type: integer
        vsys:
          type: integer
    reverse_dns_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                reverse_dns:
                  type: array
                  items:
                    $ref: "#/components/schemas/reverse_dns_schema_get"

    #Issues
    issue_schema_post:
      type: object
      properties:
        description:
          type: string
        type:
          type: string
          description: Describes what kind of issue it is. For example if it is a issue related to search_and_replace, override, rename, etc.
        subtype:
          type: string
        state:
          type: string
          enum:
            - pending
            - in_progress
            - resolved
        comments:
          type: string
        severity:
          type: string
          enum:
            - info
            - warning
            - critical
            - emergency
          description: |-
            * info - Just information, nothing needs to be done.
            * warning - You may wanna take a look on it. It does not need to be a problem.
            * critical - It will bring some problems: security, performance, etc. Should take a look into it.
            * emergency - It will not work. Something needs to be done to fix it.
        object_id:
          type: integer
          description: It is the id of the object that the issue will be assigned. If the id is from a collection,  then an issue for each object in the collection will be created.

    issue_ci_schema_get:
      allOf:
        - $ref: "#/components/schemas/issue_schema_post"
        - type: object
          properties:
            id:
              type: integer
              description: Id associated to the issue.
            object_name:
              type: string
              description: Name of the object associated with the issue.
            object_type:
              type: string
              description: Type of the object associated with the issue.
            reporter_app:
              type: string
              description: Name of the application reporting the issue.

    get_multiple_issue_ci_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              type: object
              properties:
                issue:
                  type: array
                  items:
                    $ref: "#/components/schemas/issue_ci_schema_get"
    get_one_issue_ci_response_schema:
      allOf:
        - $ref: "#/components/schemas/response_schema"
        - type: object
          properties:
            data:
              $ref: "#/components/schemas/issue_ci_schema_get"

  responses:
    unauthorized_response:
      description: Authorization failed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    unauthenticated_response:
      description: Authentication failed.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    resource_not_found:
      description: Resource not found.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    resource_gone_response:
      description: Resource gone.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    not_implemented_response:
      description: Method not implemented yet.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    resource_conflict_response:
      description: >-
        Resource conflict. For instance the resource has been block for editing
        because it is being used in another ongoing calculation process.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    unexpected_server_error_response:
      description: Unexpected server error.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    bad_request_response:
      description: Bad request. The request could not be processed successfully.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    login_response:
      description: Login successful.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/login_response_schema"
    logout_response:
      description: Logout successful.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    success_response_without_data:
      description: Request successful.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/response_schema"
    migration_response:
      description: Get migration id.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/migration_response_schema"
    resource_third_vendor_response:
      description: Get resource from third party vendor information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/resource_third_vendor_response_schema"
    resource_panos_response:
      description: Get resource information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/resource_panos_response_schema"
    delete_migration_response:
      description: Return id and resources of the migration deleted.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/migration_response_schema"
    get_migration_response:
      description: Return the information of one migration.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_migration_schema"
    get_all_migration_response:
      description: Return the information of multiple migrations.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/migration_response_schema"
    job_id_response:
      description: Get job id
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/job_id_response_schema"
    get_job_response:
      description: Get Information of a job.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_job_response_schema"
    get_multiple_job_response:
      description: Get Information of all jobs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_job_response_schema"
    get_agent_response:
      description: Get Information of an agent.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_agent_response_schema"
    get_multiple_agent_response:
      description: Get Information of all agents.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_agent_response_schema"
    get_system_information_response:
      description: Get Information of the system.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/system_information_response_schema"
    get_health_information_response:
      description: Get health checks about Expedition.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/health_information_response_schema"
    download_zip_response:
      description: Download zip file.
      content:
        application/zip:
          schema:
            type: string
            format: binary
            description: Zip file.
    download_excel_response:
      description: Download Excel file.
      content:
        application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
          schema:
            type: string
            format: binary
            description: Xlsx file.
    get_one_resource_response:
      description: Return the information of one resource.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_resource_schema"
    get_multiple_resource_response:
      description: Return the information of resources.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_resource_schema"
    discovery_response:
      description: "Get policies/routes, from configuration."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/discovery_response_schema"
    discovery_multiple_response:
      description: "Get policies/routes, from all configurations of a migration."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/discovery_multiple_response_schema"
    mapping_response:
      description: "Get mapped policies/routes, from configuration."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/mapping_response_schema"
    mapping_multiple_response:
      description: "Get mapped policies/routes, from all configurations of a migration."
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/mapping_multiple_response_schema"
    list_single_project_response:
      description: List project information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/list_single_project_response_schema"
    list_multiple_project_response:
      description: List projects information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/list_multiple_project_response_schema"
    create_project_response:
      description: Get id of the created project.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/create_project_response_schema"
    get_single_device_response:
      description: List one device.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_single_device_response_schema"
    get_project_summary_response:
      description: List project summary.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/project_summary_response_schema"
    get_project_tag_response:
      description: List project tags.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/project_tag_response_schema"
    get_multiple_device_response:
      description: List multiple devices.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_device_response_schema"
    get_device_content:
      description: Get downloaded content from  device.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_device_content_response_schema"
    get_device_key_response:
      description: Get keys from a device.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/device_key_response_schema"
    delete_one_panObject_response:
      description: Return a panObject name and id.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/delete_one_panObject_response_schema"
    delete_multiple_panObject_response:
      description: Return multiple panObject name and id.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/delete_multiple_panObject_response_schema"

    # Source responses
    get_one_source_response:
      description: Get a source object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_source_response_schema"
    get_multiple_source_response:
      description: Get multiple source objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_source_response_schema"

    # Template responses
    get_one_template_response:
      description: Get a template object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_template_response_schema"
    get_one_template_stack_response:
      description: Get a template object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_template_stack_response_schema"

    # Template stack responses
    get_multiple_template_response:
      description: Get multiple vsys objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_template_response_schema"
    get_multiple_template_stack_response:
      description: Get multiple vsys objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_template_stack_response_schema"

    # Vsys responses
    get_one_vsys_response:
      description: Get a vsys object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_vsys_response_schema"
    get_multiple_vsys_response:
      description: Get multiple vsys objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_vsys_response_schema"

    # Device Group responses
    get_one_device_group_response:
      description: Get a vsys object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_device_group_response_schema"
    get_multiple_device_group_response:
      description: Get multiple vsys objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_device_group_response_schema"

    get_mixed_objects_response:
      description: Get multiple objects information.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_mixed_objects_response_schema"
    get_one_address_response:
      description: Get an address object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_address_response_schema"
    get_multiple_address_response:
      description: Get multiple address objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_address_response_schema"
    get_one_service_response:
      description: Get an service object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_service_response_schema"
    get_multiple_service_response:
      description: Get multiple service objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_service_response_schema"
    get_one_tag_response:
      description: Get a tag object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_tag_response_schema"
    get_multiple_tag_response:
      description: Get multiple tag objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_tag_response_schema"
    get_one_service_group_response:
      description: Get a Service Group object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_service_group_response_schema"
    get_multiple_service_group_response:
      description: Get multiple Service Group objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_service_group_response_schema"
    get_one_user_object_response:
      description: Get a User object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_user_object_response_schema"
    get_multiple_user_object_response:
      description: Get multiple User objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_user_object_response_schema"
    get_one_address_group_response:
      description: Get a Address Group object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_address_group_response_schema"
    get_multiple_address_group_response:
      description: Get multiple Address Group objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_address_group_response_schema"
    get_one_application_response:
      description: Get an Application object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_application_response_schema"
    get_multiple_application_response:
      description: Get multiple Application objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_application_response_schema"
    get_one_application_group_response:
      description: Get an Application Group object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_application_group_response_schema"
    get_multiple_application_group_response:
      description: Get multiple Application Group objects.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/get_multiple_application_group_response_schema
    get_one_application_filter_response:
      description: Get an Application Filter object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_application_filter_response_schema"
    get_multiple_application_filter_response:
      description: Get multiple Application Filter objects.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/get_multiple_application_filter_response_schema
    get_multiple_application_filter_characteristics_response:
      description: Get multiple Application Filter characteristics.
      content:
        application/json:
          schema:
            $ref: >-
              #/components/schemas/get_multiple_application_filter_characteristics
    get_one_category_response:
      description: Get a category object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_category_response_schema"
    get_multiple_category_response:
      description: Get multiple category objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_category_response_schema"
    get_one_subcategory_response:
      description: Get a subcategory object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_subcategory_response_schema"
    get_multiple_subcategory_response:
      description: Get multiple subcategory objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_subcategory_response_schema"
    get_one_technology_response:
      description: Get a technology object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_technology_response_schema"
    get_multiple_technology_response:
      description: Get multiple technology objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_technology_response_schema"
    get_one_risk_response:
      description: Get a risk object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_risk_response_schema"
    get_multiple_risk_response:
      description: Get multiple risk objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_risk_response_schema"
    get_one_profile_response:
      description: Get a profile object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_profile_response_schema"
    get_multiple_profile_response:
      description: Get multiple profile objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_profile_response_schema"
    get_one_profile_group_response:
      description: Get a profile group object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_profile_group_response_schema"
    get_multiple_profile_group_response:
      description: Get multiple profile group objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_profile_group_response_schema"
    get_one_external_list_response:
      description: Get a external list object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_external_list_response_schema"
    get_multiple_external_list_response:
      description: Get multiple external list objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_external_list_response_schema"
    get_one_log_setting_response:
      description: Get a log setting object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_log_setting_response_schema"
    get_multiple_log_setting_response:
      description: Get multiple log setting objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_log_setting_response_schema"
    get_one_schedule_response:
      description: Get a schedule object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_schedule_response_schema"
    get_multiple_schedule_response:
      description: Get multiple schedule objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_schedule_response_schema"
    get_one_region_response:
      description: Get a region object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_region_response_schema"
    get_multiple_region_response:
      description: Get multiple region objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_region_response_schema"
    get_one_scep_response:
      description: Get a scep object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_scep_response_schema"
    get_multiple_scep_response:
      description: Get multiple scep objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_scep_response_schema"
    get_one_certificate_response:
      description: Get a certificate object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_certificate_response_schema"
    get_multiple_certificate_response:
      description: Get multiple certificate objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_certificate_response_schema"
    get_one_ssl_tls_profile_response:
      description: Get a ssl_tls_profile object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ssl_tls_profile_response_schema"
    get_multiple_ssl_tls_profile_response:
      description: Get multiple ssl_tls_profile objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ssl_tls_profile_response_schema"
    get_one_email_scheduler_response:
      description: Get an email_scheduler object.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_email_scheduler_response_schema"
    get_multiple_email_scheduler_response:
      description: Get multiple email_scheduler objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_email_scheduler_response_schema"

    # Policies responses
    get_one_security_rule_response:
      description: Get a security rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_security_rule_response_schema"
    get_multiple_security_rule_response:
      description: Get multiple security rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_security_rule_response_schema"
    get_one_nat_rule_response:
      description: Get a nat rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_nat_rule_response_schema"
    get_multiple_nat_rule_response:
      description: Get multiple nat rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_nat_rule_response_schema"
    get_one_application_override_rule_response:
      description: Get an application override rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_application_override_rule_response_schema"
    get_multiple_application_override_rule_response:
      description: Get multiple application override rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_application_override_rule_response_schema"
    get_one_decryption_rule_response:
      description: Get a nat rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_decryption_rule_response_schema"
    get_multiple_decryption_rule_response:
      description: Get multiple nat rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_decryption_rule_response_schema"
    get_one_authentication_rule_response:
      description: Get a nat rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_authentication_rule_response_schema"
    get_multiple_authentication_rule_response:
      description: Get multiple nat rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_authentication_rule_response_schema"
    get_one_tunnel_inspection_rule_response:
      description: Get a nat rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_tunnel_inspection_rule_response_schema"
    get_multiple_tunnel_inspection_rule_response:
      description: Get multiple nat rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_tunnel_inspection_rule_response_schema"
    get_one_qos_rule_response:
      description: Get a nat rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_qos_rule_response_schema"
    get_multiple_qos_rule_response:
      description: Get multiple nat rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_qos_rule_response_schema"
    get_one_pbf_rule_response:
      description: Get a pbf rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_pbf_rule_response_schema"
    get_multiple_pbf_rule_response:
      description: Get multiple pbf rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_pbf_rule_response_schema"
    get_one_sdwan_rule_response:
      description: Get a sdwan rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_sdwan_rule_response_schema"
    get_multiple_sdwan_rule_response:
      description: Get multiple sdwan rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_sdwan_rule_response_schema"
    get_one_dos_rule_response:
      description: Get a dos rule.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_dos_rule_response_schema"
    get_multiple_dos_rule_response:
      description: Get multiple dos rules.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_dos_rule_response_schema"

    # Network responses
    ## Gp portal
    get_one_gp_portal_response:
      description: Get a Gp portal.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_portal_response_schema"
    get_multiple_gp_portal_response:
      description: Get multiple Gp portals.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_portal_response_schema"

    ## Gp gateway
    get_one_gp_gateway_response:
      description: Get a Gp gateway.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_gateway_response_schema"
    get_multiple_gp_gateway_response:
      description: Get multiple Gp gateways.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_gateway_response_schema"

    ## Gp mdm
    get_one_gp_mdm_response:
      description: Get a Gp mdm.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_mdm_response_schema"
    get_multiple_gp_mdm_response:
      description: Get multiple Gp mdms.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_mdm_response_schema"

    ## Gp clientless app
    get_one_gp_clientless_app_response:
      description: Get a Gp clientless app.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_clientless_app_response_schema"
    get_multiple_gp_clientless_app_response:
      description: Get multiple Gp clientless apps.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_clientless_app_response_schema"

    ## Gp clientless app group
    get_one_gp_clientless_app_group_response:
      description: Get a Gp clientless app group.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_clientless_app_group_response_schema"
    get_multiple_gp_clientless_app_group_response:
      description: Get multiple Gp clientless app groups.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_clientless_app_group_response_schema"

    ## BFD profile
    get_one_bfd_profile_response:
      description: Get a BFD profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_bfd_profile_response_schema"
    get_multiple_bfd_profile_response:
      description: Get multiple BFD profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_bfd_profile_response_schema"

    ##IKE Crypto Profile
    get_one_ike_crypto_profile_response:
      description: Get a IKE Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ike_crypto_response_schema"
    get_multiple_ike_crypto_profile_response:
      description: Get multiple IKE Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ike_crypto_response_schema"

    ##IKE Gateway Profile
    get_one_ike_gateway_profile_response:
      description: Get a IKE Gateway profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ike_gateway_response_schema"
    get_multiple_ike_gateway_profile_response:
      description: Get multiple IKE Gateway profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ike_gateway_response_schema"

    ##Ipsec Crypto Profile
    get_one_ipsec_crypto_profile_response:
      description: Get a IPsec Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ipsec_crypto_response_schema"
    get_multiple_ipsec_crypto_profile_response:
      description: Get multiple IPsec Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ipsec_crypto_response_schema"

    ##GP Ipsec Crypto Profile
    get_one_gp_ipsec_crypto_response:
      description: Get a GP IPsec Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_gp_ipsec_crypto_response_schema"
    get_multiple_gp_ipsec_crypto_response:
      description: Get multiple GP IPsec Crypto profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_gp_ipsec_crypto_response_schema"

    ##Interface Management Profile
    get_one_interface_management_response:
      description: Get a Interface Management Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_management_response_schema"
    get_multiple_interface_management_response:
      description: Get multiple Interface Management Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_management_response_schema"

    ##LLDP Profile
    get_one_lldp_profile_response:
      description: Get a LLDP Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_lldp_profile_response_schema"
    get_multiple_lldp_profile_response:
      description: Get multiple LLDP Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_lldp_profile_response_schema"

    ##qos Profile
    get_one_qos_profile_response:
      description: Get a qos Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_qos_profile_response_schema"
    get_multiple_qos_profile_response:
      description: Get multiple qos Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_qos_profile_response_schema"

    ##Monitor Profile
    get_one_monitor_profile_response:
      description: Get a Monitor Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_monitor_profile_response_schema"
    get_multiple_monitor_profile_response:
      description: Get multiple Monitor Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_monitor_profile_response_schema"

    ##Zone Protection Profile
    get_one_zone_protection_profile_response:
      description: Get a Zone Protection Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_zone_protection_profile_response_schema"
    get_multiple_zone_protection_profile_response:
      description: Get multiple Zone Protection Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_zone_protection_profile_response_schema"

    ##LLDP
    get_one_lldp_response:
      description: Get a LLDP.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_lldp_response_schema"
    get_multiple_lldp_response:
      description: Get multiple LLDP.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_lldp_response_schema"

    ##Ipsec Tunnel Profile
    get_one_ipsec_tunnel_response:
      description: Get a IPsec Tunnel profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ipsec_tunnel_response_schema"
    get_multiple_ipsec_tunnel_response:
      description: Get multiple IPsec Tunnel profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ipsec_tunnel_response_schema"

    ##Virtual Wire
    get_one_virtual_wire_response:
      description: Get a Virtual Wire.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_virtual_wire_response_schema"
    get_multiple_virtual_wire_response:
      description: Get multiple Virtual Wires.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_virtual_wire_response_schema"

    ##SDWAN Interface
    get_one_sdwan_profile_interface_response:
      description: Get a SDWAN Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_sdwan_profile_interface_response_schema"
    get_multiple_sdwan_profile_interface_response:
      description: Get multiple SDWAN Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_sdwan_profile_interface_response_schema"

    ##VLAN
    get_one_vlan_response:
      description: Get a VLAN.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_vlan_response_schema"
    get_multiple_vlan_response:
      description: Get multiple VLANs.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_vlan_response_schema"

    ##Zone
    get_one_zone_response:
      description: Get a Zone.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_zone_response_schema"
    get_multiple_zone_response:
      description: Get multiple Zones.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_zone_response_schema"

    ##Virtual Router
    get_one_virtual_router_response:
      description: Get a Virtual Router.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_virtual_router_response_schema"
    get_multiple_virtual_router_response:
      description: Get multiple Virtual Routers.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_virtual_router_response_schema"

    ##Ethernet Interface
    get_one_interface_ethernet_response:
      description: Get a Ethernet Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_ethernet_response_schema"
    get_multiple_interface_ethernet_response:
      description: Get multiple Ethernet Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_ethernet_response_schema"

    #Sub interface
    get_one_sub_interface_response:
      description: Get a Ethernet sub Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_sub_interface_response_schema"
    get_multiple_sub_interface_response:
      description: Get multiple Ethernet sub Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_sub_interface_response_schema"

    ##Vlan Interface
    get_one_interface_vlan_response:
      description: Get a Vlan Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_vlan_response_schema"
    get_multiple_interface_vlan_response:
      description: Get multiple Vlan Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_vlan_response_schema"

    ##Loopback Interface
    get_one_interface_loopback_response:
      description: Get a Loopback Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_loopback_response_schema"
    get_multiple_interface_loopback_response:
      description: Get multiple Loopback Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_loopback_response_schema"

    ##Tunnel Interface
    get_one_interface_tunnel_response:
      description: Get a Tunnel Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_tunnel_response_schema"
    get_multiple_interface_tunnel_response:
      description: Get multiple Tunnel Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_tunnel_response_schema"

    ##SDWAN  Interface
    get_one_interface_sdwan_response:
      description: Get a SDWAN Interface.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_interface_sdwan_response_schema"
    get_multiple_interface_sdwan_response:
      description: Get multiple SDWAN Interfaces.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_interface_sdwan_response_schema"

    # Server Profiles
    ##Email Server Profile
    get_one_email_server_profile_response:
      description: Get a Email Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_email_server_profile_response_schema"
    get_multiple_email_server_profile_response:
      description: Get multiple Email Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_email_server_profile_response_schema"

    ##HTTP Server Profile
    get_one_http_server_profile_response:
      description: Get a HTTP Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_http_server_profile_response_schema"
    get_multiple_http_server_profile_response:
      description: Get multiple HTTP Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_http_server_profile_response_schema"

    ##Kerberos Server Profile
    get_one_kerberos_server_profile_response:
      description: Get a Kerberos Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_kerberos_server_profile_response_schema"
    get_multiple_kerberos_server_profile_response:
      description: Get multiple Kerberos Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_kerberos_server_profile_response_schema"
    ##LDAP Server Profile
    get_one_ldap_server_profile_response:
      description: Get a LDAP Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_ldap_server_profile_response_schema"
    get_multiple_ldap_server_profile_response:
      description: Get multiple LDAP Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_ldap_server_profile_response_schema"
    ##MFA Server Profile
    get_one_mfa_server_profile_response:
      description: Get a MFA Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_mfa_server_profile_response_schema"
    get_multiple_mfa_server_profile_response:
      description: Get multiple MFA Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_mfa_server_profile_response_schema"
    ##Netflow Server Profile
    get_one_netflow_server_profile_response:
      description: Get a Netflow Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_netflow_server_profile_response_schema"
    get_multiple_netflow_server_profile_response:
      description: Get multiple Netflow Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_netflow_server_profile_response_schema"
    ##Radius Server Profile
    get_one_radius_server_profile_response:
      description: Get a Radius Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_radius_server_profile_response_schema"
    get_multiple_radius_server_profile_response:
      description: Get multiple Radius Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_radius_server_profile_response_schema"
    ##SAML Server Profile
    get_one_saml_server_profile_response:
      description: Get a SAML Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_saml_server_profile_response_schema"
    get_multiple_saml_server_profile_response:
      description: Get multiple SAML Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_saml_server_profile_response_schema"
    ##SNMP Trap Server Profile
    get_one_snmp_trap_server_profile_response:
      description: Get a SNMP Trap Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_snmp_trap_server_profile_response_schema"
    get_multiple_snmp_trap_server_profile_response:
      description: Get multiple SNMP Trap Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_snmp_trap_server_profile_response_schema"
    ##Syslog Server Profile
    get_one_syslog_server_profile_response:
      description: Get a Syslog Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_syslog_server_profile_response_schema"
    get_multiple_syslog_server_profile_response:
      description: Get multiple Syslog Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_syslog_server_profile_response_schema"
    ##Tacacs Server Profile
    get_one_tacacs_server_profile_response:
      description: Get a Tacacs Server Profile.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_tacacs_server_profile_response_schema"
    get_multiple_tacacs_server_profile_response:
      description: Get multiple Tacacs Server Profiles.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_tacacs_server_profile_response_schema"
    search_response:
      description: Returns where objects are used.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/search_response_schema"
    ##Filters
    get_one_filter_response:
      description: Get a Filter.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_filter_schema_response"
    get_multiple_filter_response:
      description: Get multiple Filters.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_filter_schema_response"
    get_filter_history_response:
      description: Get Filter History.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_filter_history_response_schema"

    # Merge schemas
    get_primary_response:
      description: Get the primar objects.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_primary_response_schema"

    #Collections
    get_one_collection_response:
      description: Get a Collection.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_collection_response_schema"
    get_multiple_collection_response:
      description: Get multiple Collections.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_collection_response_schema"

    #Reverse DNS response
    reverse_dns_response:
      description: Returns the reverse dns of address ips.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/reverse_dns_response_schema"

    #Issues
    get_one_issue_response:
      description: Get an Issue.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_one_issue_ci_response_schema"
    get_multiple_issues_response:
      description: Get multiple Issues.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/get_multiple_issue_ci_response_schema"

  parameters:
    migration_id:
      in: path
      name: migration_id
      required: true
      schema:
        type: integer
    resource_id:
      in: path
      name: resource_id
      required: true
      schema:
        type: integer
    project_id:
      in: path
      name: project_id
      description: Id of the project to search.
      required: true
      schema:
        type: integer
    collection_id:
      in: path
      name: collection_id
      description: Id of the collection to search.
      required: true
      schema:
        type: integer
    query_collection_id:
      in: query
      name: collection_id
      description: Id of the collection to search.
      required: false
      schema:
        type: integer
    device_id:
      in: path
      name: device_id
      required: true
      schema:
        type: integer
    source_id:
      in: path
      name: source_id
      required: true
      schema:
        type: integer
    vsys_id:
      in: path
      name: vsys_id
      description: Id of the vsys.
      required: true
      schema:
        type: integer
    device_group_id:
      in: path
      name: device_group_id
      description: Id of the device group.
      required: true
      schema:
        type: integer
    template_id:
      in: path
      name: template_id
      description: Id of the template.
      required: true
      schema:
        type: integer
    template_stack_id:
      in: path
      name: template_stack_id
      description: Id of the template stack.
      required: true
      schema:
        type: integer
    role:
      in: path
      name: role
      required: true
      schema:
        type: string
        example: admin
        enum:
          - all
          - admin
          - user
          - viewer
          - personal
    config:
      in: path
      name: config
      required: true
      schema:
        type: string
        example: running
        enum:
          - running
          - candidate
    job_id:
      in: path
      name: job_id
      description: Id of the job to search.
      required: true
      schema:
        type: integer
    job_mode:
      in: query
      name: complete
      description: >-
        Define if all complete information of a job is needed or just with the
        basic information is enough.
      required: false
      schema:
        type: boolean
        default: false
    job_status:
      in: query
      name: status
      description: Define what kind of jobs to return.
      required: false
      schema:
        type: string
        default: pending
        enum:
          - all
          - completed
          - cancelled
          - pending
    agent_id:
      in: path
      name: agent_id
      description: Id of the agent to search.
      required: true
      schema:
        type: integer
    agent_type:
      in: path
      name: agent_type
      description: Type of the agent to search.
      required: true
      schema:
        type: string
        enum:
          - generic
        default: generic
    page:
      in: query
      name: page
      description: Page to return.
      required: false
      schema:
        type: integer
        default: 1
    limit:
      in: query
      name: limit
      description: Limit of objects to return per page.
      required: false
      schema:
        type: integer
        default: 25
    source:
      in: query
      name: source
      description: Id of the source where to find objects.
      required: false
      schema:
        type: integer
    vsys:
      in: query
      name: vsys
      description: Id of the vsys where to find objects.
      required: false
      schema:
        type: integer
    query:
      in: query
      name: query
      description: String to search objects.
      required: false
      schema:
        type: string
    trashed:
      in: query
      name: trashed
      description: |
        Indicates if showing non-trashed, trashed or both objects.
      required: false
      schema:
        type: string
        enum:
          - trashed
          - non-trashed
          - both
        default: non-trashed
    inherited:
      in: query
      name: inherited
      description: >-
        If true, will return all objects from the current vsys and from all it's
        parents.
      required: false
      schema:
        type: boolean
        default: false
    object_id:
      in: path
      name: object_id
      required: true
      description: Id of the object to search.
      schema:
        type: integer
    query_object_id:
      in: query
      name: object_id
      required: true
      description: Id of the object to search.
      schema:
        type: integer
    profile_type:
      in: query
      name: type
      required: false
      description: Type of a profile to filter them.
      schema:
        type: string
        enum:
          - vulnerability
          - wildfire-analysis
          - file-blocking
          - hip-profiles
          - virus
          - spyware
          - url-filtering
          - data-filtering
          - custom-url-category
          - dos-protection
          - decryption
          - data-objects
          - sdwan-path-quality
          - sdwan-traffic-distribution
          - forwarding
    object_type:
      in: query
      name: object_type
      required: false
      description: Object types to search, separated by coma
      schema:
        type: string
    filter_force_delete:
      in: query
      name: force_delete
      required: false
      description: Force delete a filter, even if it has dependant filters
      schema:
        type: boolean
    filter_id:
      in: path
      name: filter_id
      required: true
      description: Id of the filter to search.
      schema:
        type: integer
    issue_id:
      in: path
      name: issue_id
      required: true
      description: Id of the issue to search.
      schema:
        type: integer
    audit_entry_id:
      in: path
      name: audit_entry_id
      required: true
      description: Id of the audit entry to search.
      schema:
        type: integer

    filter_status:
      in: query
      name: status
      required: false
      description: State of the filters to search.
      schema:
        type: string
        enum:
          - running
          - pending
          - executed
    filter_warning:
      in: query
      name: warning
      required: false
      description: Search for filters with or withoud warnings.
      schema:
        type: integer
        enum:
          - 1
          - 0
    filter_type:
      in: query
      name: type
      required: false
      description: Type the filters to search.
      schema:
        type: string
        enum:
          - single
          - combined
          - operation
    category:
      in: query
      name: category
      required: true
      description: Category name to send as parameter. Can send multiple categories separated by commas
      schema:
        type: string
      examples:
        one_category:
          value: media
        multiple_categories:
          value: media,networking
    subcategory:
      in: query
      name: subcategory
      required: true
      description: Subategory name to send as parameter. Can send multiple subcategories separated by commas
      schema:
        type: string
      examples:
        one_category:
          value: database
        multiple_categories:
          value: database,email
    risk:
      in: query
      name: risk
      required: true
      description: Risk number to send as parameter. Can send multiple risks separated by commas
      schema:
        type: string
      examples:
        one_risk:
          value: 1
        multiple_risks:
          value: 1,2
    characteristic:
      in: query
      name: characteristic
      required: false
      description: Characteristic name to send as parameter. Can send multiple characteristics separated by commas
      schema:
        type: string
      examples:
        one_characteristic:
          value: is-soc1
        multiple_characteristics:
          value: is-soc1,is-soc2

    show_scope:
      in: query
      name: show_scope
      description: Defines if the scope of a collection content should be displayed or not.
      required: false
      schema:
        type: string
        enum:
          - true
          - false
    show_content:
      in: query
      name: show_content
      description: Defines if the content of a collection should be displayed or not.
      required: false
      schema:
        type: string
        enum:
          - true
          - false
    with_dependencies:
      in: query
      name: with_dependencies
      description: Defines if the replace shouls also replace dependencies or not. By default will always make the replace of the dependencies.
      required: false
      schema:
        type: string
        enum:
          - true
          - false
